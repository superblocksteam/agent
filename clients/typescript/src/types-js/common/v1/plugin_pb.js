// source: common/v1/plugin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.common.v1.FileMetadata', null, global);
goog.exportSymbol('proto.common.v1.HttpParameters', null, global);
goog.exportSymbol('proto.common.v1.Property', null, global);
goog.exportSymbol('proto.common.v1.SuperblocksMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.Property = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.common.v1.Property.repeatedFields_, null);
};
goog.inherits(proto.common.v1.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.Property.displayName = 'proto.common.v1.Property';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.SuperblocksMetadata = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.SuperblocksMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.SuperblocksMetadata.displayName = 'proto.common.v1.SuperblocksMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.HttpParameters = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.HttpParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.HttpParameters.displayName = 'proto.common.v1.HttpParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.FileMetadata = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.FileMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.FileMetadata.displayName = 'proto.common.v1.FileMetadata';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.common.v1.Property.repeatedFields_ = [11];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.common.v1.Property.prototype.toObject = function (opt_includeInstance) {
    return proto.common.v1.Property.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.common.v1.Property} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.common.v1.Property.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        key: jspb.Message.getFieldWithDefault(msg, 1, ''),
        value: jspb.Message.getFieldWithDefault(msg, 2, ''),
        editable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        internal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        description: jspb.Message.getFieldWithDefault(msg, 5, ''),
        mandatory: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        type: jspb.Message.getFieldWithDefault(msg, 7, ''),
        defaultvalue: jspb.Message.getFieldWithDefault(msg, 8, ''),
        minrange: jspb.Message.getFieldWithDefault(msg, 9, ''),
        maxrange: jspb.Message.getFieldWithDefault(msg, 10, ''),
        valueoptionsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
        system: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
        file: (f = msg.getFile()) && proto.common.v1.FileMetadata.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.Property}
 */
proto.common.v1.Property.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.Property();
  return proto.common.v1.Property.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.Property}
 */
proto.common.v1.Property.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setValue(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setEditable(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setInternal(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setMandatory(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setDefaultvalue(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setMinrange(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setMaxrange(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.addValueoptions(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSystem(value);
        break;
      case 13:
        var value = new proto.common.v1.FileMetadata();
        reader.readMessage(value, proto.common.v1.FileMetadata.deserializeBinaryFromReader);
        msg.setFile(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.Property.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.Property.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(2, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(3, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(4, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(5, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(6, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(7, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(8, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(9, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(10, f);
  }
  f = message.getValueoptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(11, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(12, f);
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(13, f, proto.common.v1.FileMetadata.serializeBinaryToWriter);
  }
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.common.v1.Property.prototype.getKey = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setKey = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearKey = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasKey = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string value = 2;
 * @return {string}
 */
proto.common.v1.Property.prototype.getValue = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setValue = function (value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearValue = function () {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasValue = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bool editable = 3;
 * @return {boolean}
 */
proto.common.v1.Property.prototype.getEditable = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};

/**
 * @param {boolean} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setEditable = function (value) {
  return jspb.Message.setField(this, 3, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearEditable = function () {
  return jspb.Message.setField(this, 3, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasEditable = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional bool internal = 4;
 * @return {boolean}
 */
proto.common.v1.Property.prototype.getInternal = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};

/**
 * @param {boolean} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setInternal = function (value) {
  return jspb.Message.setField(this, 4, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearInternal = function () {
  return jspb.Message.setField(this, 4, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasInternal = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional string description = 5;
 * @return {string}
 */
proto.common.v1.Property.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setDescription = function (value) {
  return jspb.Message.setField(this, 5, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearDescription = function () {
  return jspb.Message.setField(this, 5, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional bool mandatory = 6;
 * @return {boolean}
 */
proto.common.v1.Property.prototype.getMandatory = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};

/**
 * @param {boolean} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setMandatory = function (value) {
  return jspb.Message.setField(this, 6, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearMandatory = function () {
  return jspb.Message.setField(this, 6, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasMandatory = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional string type = 7;
 * @return {string}
 */
proto.common.v1.Property.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setType = function (value) {
  return jspb.Message.setField(this, 7, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearType = function () {
  return jspb.Message.setField(this, 7, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasType = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional string defaultValue = 8;
 * @return {string}
 */
proto.common.v1.Property.prototype.getDefaultvalue = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setDefaultvalue = function (value) {
  return jspb.Message.setField(this, 8, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearDefaultvalue = function () {
  return jspb.Message.setField(this, 8, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasDefaultvalue = function () {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional string minRange = 9;
 * @return {string}
 */
proto.common.v1.Property.prototype.getMinrange = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setMinrange = function (value) {
  return jspb.Message.setField(this, 9, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearMinrange = function () {
  return jspb.Message.setField(this, 9, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasMinrange = function () {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * optional string maxRange = 10;
 * @return {string}
 */
proto.common.v1.Property.prototype.getMaxrange = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setMaxrange = function (value) {
  return jspb.Message.setField(this, 10, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearMaxrange = function () {
  return jspb.Message.setField(this, 10, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasMaxrange = function () {
  return jspb.Message.getField(this, 10) != null;
};

/**
 * repeated string valueOptions = 11;
 * @return {!Array<string>}
 */
proto.common.v1.Property.prototype.getValueoptionsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setValueoptionsList = function (value) {
  return jspb.Message.setField(this, 11, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.addValueoptions = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearValueoptionsList = function () {
  return this.setValueoptionsList([]);
};

/**
 * optional bool system = 12;
 * @return {boolean}
 */
proto.common.v1.Property.prototype.getSystem = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};

/**
 * @param {boolean} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setSystem = function (value) {
  return jspb.Message.setField(this, 12, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearSystem = function () {
  return jspb.Message.setField(this, 12, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasSystem = function () {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional FileMetadata file = 13;
 * @return {?proto.common.v1.FileMetadata}
 */
proto.common.v1.Property.prototype.getFile = function () {
  return /** @type{?proto.common.v1.FileMetadata} */ (jspb.Message.getWrapperField(this, proto.common.v1.FileMetadata, 13));
};

/**
 * @param {?proto.common.v1.FileMetadata|undefined} value
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.setFile = function (value) {
  return jspb.Message.setWrapperField(this, 13, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Property} returns this
 */
proto.common.v1.Property.prototype.clearFile = function () {
  return this.setFile(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Property.prototype.hasFile = function () {
  return jspb.Message.getField(this, 13) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.common.v1.SuperblocksMetadata.prototype.toObject = function (opt_includeInstance) {
    return proto.common.v1.SuperblocksMetadata.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.common.v1.SuperblocksMetadata} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.common.v1.SuperblocksMetadata.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        pluginversion: jspb.Message.getFieldWithDefault(msg, 1, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.SuperblocksMetadata}
 */
proto.common.v1.SuperblocksMetadata.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.SuperblocksMetadata();
  return proto.common.v1.SuperblocksMetadata.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.SuperblocksMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.SuperblocksMetadata}
 */
proto.common.v1.SuperblocksMetadata.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPluginversion(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.SuperblocksMetadata.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.SuperblocksMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.SuperblocksMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.SuperblocksMetadata.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPluginversion();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string pluginVersion = 1;
 * @return {string}
 */
proto.common.v1.SuperblocksMetadata.prototype.getPluginversion = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.SuperblocksMetadata} returns this
 */
proto.common.v1.SuperblocksMetadata.prototype.setPluginversion = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.common.v1.HttpParameters.prototype.toObject = function (opt_includeInstance) {
    return proto.common.v1.HttpParameters.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.common.v1.HttpParameters} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.common.v1.HttpParameters.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        queryMap: (f = msg.getQueryMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
        bodyMap: (f = msg.getBodyMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.HttpParameters}
 */
proto.common.v1.HttpParameters.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.HttpParameters();
  return proto.common.v1.HttpParameters.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.HttpParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.HttpParameters}
 */
proto.common.v1.HttpParameters.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getQueryMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.google.protobuf.Value.deserializeBinaryFromReader,
            '',
            new proto.google.protobuf.Value()
          );
        });
        break;
      case 2:
        var value = msg.getBodyMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.google.protobuf.Value.deserializeBinaryFromReader,
            '',
            new proto.google.protobuf.Value()
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.HttpParameters.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.HttpParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.HttpParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.HttpParameters.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getQueryMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.google.protobuf.Value.serializeBinaryToWriter
    );
  }
  f = message.getBodyMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      2,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.google.protobuf.Value.serializeBinaryToWriter
    );
  }
};

/**
 * map<string, google.protobuf.Value> query = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.common.v1.HttpParameters.prototype.getQueryMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
    jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.google.protobuf.Value)
  );
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.common.v1.HttpParameters} returns this
 */
proto.common.v1.HttpParameters.prototype.clearQueryMap = function () {
  this.getQueryMap().clear();
  return this;
};

/**
 * map<string, google.protobuf.Value> body = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.common.v1.HttpParameters.prototype.getBodyMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
    jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.google.protobuf.Value)
  );
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.common.v1.HttpParameters} returns this
 */
proto.common.v1.HttpParameters.prototype.clearBodyMap = function () {
  this.getBodyMap().clear();
  return this;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.common.v1.FileMetadata.prototype.toObject = function (opt_includeInstance) {
    return proto.common.v1.FileMetadata.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.common.v1.FileMetadata} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.common.v1.FileMetadata.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        filename: jspb.Message.getFieldWithDefault(msg, 1, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.FileMetadata}
 */
proto.common.v1.FileMetadata.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.FileMetadata();
  return proto.common.v1.FileMetadata.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.FileMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.FileMetadata}
 */
proto.common.v1.FileMetadata.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setFilename(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.FileMetadata.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.FileMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.FileMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.FileMetadata.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string filename = 1;
 * @return {string}
 */
proto.common.v1.FileMetadata.prototype.getFilename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.common.v1.FileMetadata} returns this
 */
proto.common.v1.FileMetadata.prototype.setFilename = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

goog.object.extend(exports, proto.common.v1);
