# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from superblocks_types.api.v1 import service_pb2 as api_dot_v1_dot_service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ExecutorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Await = channel.unary_unary(
                '/api.v1.ExecutorService/Await',
                request_serializer=api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.AwaitResponse.FromString,
                _registered_method=True)
        self.TwoWayStream = channel.stream_stream(
                '/api.v1.ExecutorService/TwoWayStream',
                request_serializer=api_dot_v1_dot_service__pb2.TwoWayRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.TwoWayResponse.FromString,
                _registered_method=True)
        self.MetadataDeprecated = channel.unary_unary(
                '/api.v1.ExecutorService/MetadataDeprecated',
                request_serializer=api_dot_v1_dot_service__pb2.MetadataRequestDeprecated.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.MetadataResponse.FromString,
                _registered_method=True)
        self.Metadata = channel.unary_unary(
                '/api.v1.ExecutorService/Metadata',
                request_serializer=api_dot_v1_dot_service__pb2.MetadataRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.MetadataResponse.FromString,
                _registered_method=True)
        self.Test = channel.unary_unary(
                '/api.v1.ExecutorService/Test',
                request_serializer=api_dot_v1_dot_service__pb2.TestRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.TestResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/api.v1.ExecutorService/Delete',
                request_serializer=api_dot_v1_dot_service__pb2.DeleteRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.Async = channel.unary_unary(
                '/api.v1.ExecutorService/Async',
                request_serializer=api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.AsyncResponse.FromString,
                _registered_method=True)
        self.Stream = channel.unary_stream(
                '/api.v1.ExecutorService/Stream',
                request_serializer=api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.StreamResponse.FromString,
                _registered_method=True)
        self.Status = channel.unary_unary(
                '/api.v1.ExecutorService/Status',
                request_serializer=api_dot_v1_dot_service__pb2.StatusRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.AwaitResponse.FromString,
                _registered_method=True)
        self.Output = channel.unary_unary(
                '/api.v1.ExecutorService/Output',
                request_serializer=api_dot_v1_dot_service__pb2.OutputRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.OutputResponse.FromString,
                _registered_method=True)
        self.Download = channel.unary_stream(
                '/api.v1.ExecutorService/Download',
                request_serializer=api_dot_v1_dot_service__pb2.DownloadRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.DownloadResponse.FromString,
                _registered_method=True)
        self.Cancel = channel.unary_unary(
                '/api.v1.ExecutorService/Cancel',
                request_serializer=api_dot_v1_dot_service__pb2.CancelRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_service__pb2.CancelResponse.FromString,
                _registered_method=True)
        self.Validate = channel.unary_unary(
                '/api.v1.ExecutorService/Validate',
                request_serializer=api_dot_v1_dot_service__pb2.ValidateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ExecutorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Await(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TwoWayStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MetadataDeprecated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Metadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Test(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Async(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Output(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Download(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Validate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExecutorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Await': grpc.unary_unary_rpc_method_handler(
                    servicer.Await,
                    request_deserializer=api_dot_v1_dot_service__pb2.ExecuteRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.AwaitResponse.SerializeToString,
            ),
            'TwoWayStream': grpc.stream_stream_rpc_method_handler(
                    servicer.TwoWayStream,
                    request_deserializer=api_dot_v1_dot_service__pb2.TwoWayRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.TwoWayResponse.SerializeToString,
            ),
            'MetadataDeprecated': grpc.unary_unary_rpc_method_handler(
                    servicer.MetadataDeprecated,
                    request_deserializer=api_dot_v1_dot_service__pb2.MetadataRequestDeprecated.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.MetadataResponse.SerializeToString,
            ),
            'Metadata': grpc.unary_unary_rpc_method_handler(
                    servicer.Metadata,
                    request_deserializer=api_dot_v1_dot_service__pb2.MetadataRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.MetadataResponse.SerializeToString,
            ),
            'Test': grpc.unary_unary_rpc_method_handler(
                    servicer.Test,
                    request_deserializer=api_dot_v1_dot_service__pb2.TestRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.TestResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=api_dot_v1_dot_service__pb2.DeleteRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.DeleteResponse.SerializeToString,
            ),
            'Async': grpc.unary_unary_rpc_method_handler(
                    servicer.Async,
                    request_deserializer=api_dot_v1_dot_service__pb2.ExecuteRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.AsyncResponse.SerializeToString,
            ),
            'Stream': grpc.unary_stream_rpc_method_handler(
                    servicer.Stream,
                    request_deserializer=api_dot_v1_dot_service__pb2.ExecuteRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.StreamResponse.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=api_dot_v1_dot_service__pb2.StatusRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.AwaitResponse.SerializeToString,
            ),
            'Output': grpc.unary_unary_rpc_method_handler(
                    servicer.Output,
                    request_deserializer=api_dot_v1_dot_service__pb2.OutputRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.OutputResponse.SerializeToString,
            ),
            'Download': grpc.unary_stream_rpc_method_handler(
                    servicer.Download,
                    request_deserializer=api_dot_v1_dot_service__pb2.DownloadRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.DownloadResponse.SerializeToString,
            ),
            'Cancel': grpc.unary_unary_rpc_method_handler(
                    servicer.Cancel,
                    request_deserializer=api_dot_v1_dot_service__pb2.CancelRequest.FromString,
                    response_serializer=api_dot_v1_dot_service__pb2.CancelResponse.SerializeToString,
            ),
            'Validate': grpc.unary_unary_rpc_method_handler(
                    servicer.Validate,
                    request_deserializer=api_dot_v1_dot_service__pb2.ValidateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1.ExecutorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.v1.ExecutorService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ExecutorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Await(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Await',
            api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.AwaitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TwoWayStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/api.v1.ExecutorService/TwoWayStream',
            api_dot_v1_dot_service__pb2.TwoWayRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.TwoWayResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MetadataDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/MetadataDeprecated',
            api_dot_v1_dot_service__pb2.MetadataRequestDeprecated.SerializeToString,
            api_dot_v1_dot_service__pb2.MetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Metadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Metadata',
            api_dot_v1_dot_service__pb2.MetadataRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.MetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Test',
            api_dot_v1_dot_service__pb2.TestRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.TestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Delete',
            api_dot_v1_dot_service__pb2.DeleteRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Async(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Async',
            api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.AsyncResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/api.v1.ExecutorService/Stream',
            api_dot_v1_dot_service__pb2.ExecuteRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.StreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Status',
            api_dot_v1_dot_service__pb2.StatusRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.AwaitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Output(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Output',
            api_dot_v1_dot_service__pb2.OutputRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.OutputResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Download(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/api.v1.ExecutorService/Download',
            api_dot_v1_dot_service__pb2.DownloadRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.DownloadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Cancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Cancel',
            api_dot_v1_dot_service__pb2.CancelRequest.SerializeToString,
            api_dot_v1_dot_service__pb2.CancelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Validate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ExecutorService/Validate',
            api_dot_v1_dot_service__pb2.ValidateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
