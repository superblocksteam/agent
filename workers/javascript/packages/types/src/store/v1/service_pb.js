"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file store/v1/service.proto (package store.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteResponse = exports.WriteRequest = exports.ReadResponse = exports.ReadRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const errors_pb_1 = require("../../common/v1/errors_pb");
const store_pb_1 = require("./store_pb");
/**
 * @generated from message store.v1.ReadRequest
 */
class ReadRequest extends protobuf_1.Message {
    /**
     * @generated from field: repeated string keys = 1;
     */
    keys = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "store.v1.ReadRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new ReadRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ReadRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ReadRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ReadRequest, a, b);
    }
}
exports.ReadRequest = ReadRequest;
/**
 * @generated from message store.v1.ReadResponse
 */
class ReadResponse extends protobuf_1.Message {
    /**
     * @generated from field: repeated google.protobuf.Value results = 1;
     */
    results = [];
    /**
     * @generated from field: common.v1.Error error = 2;
     */
    error;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "store.v1.ReadResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "results", kind: "message", T: protobuf_1.Value, repeated: true },
        { no: 2, name: "error", kind: "message", T: errors_pb_1.Error },
    ]);
    static fromBinary(bytes, options) {
        return new ReadResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ReadResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ReadResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ReadResponse, a, b);
    }
}
exports.ReadResponse = ReadResponse;
/**
 * @generated from message store.v1.WriteRequest
 */
class WriteRequest extends protobuf_1.Message {
    /**
     * @generated from field: repeated store.v1.Pair pairs = 1;
     */
    pairs = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "store.v1.WriteRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "pairs", kind: "message", T: store_pb_1.Pair, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new WriteRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new WriteRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new WriteRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(WriteRequest, a, b);
    }
}
exports.WriteRequest = WriteRequest;
/**
 * @generated from message store.v1.WriteResponse
 */
class WriteResponse extends protobuf_1.Message {
    /**
     * @generated from field: repeated store.v1.Pair pairs = 1;
     */
    pairs = [];
    /**
     * @generated from field: common.v1.Error error = 2;
     */
    error;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "store.v1.WriteResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "pairs", kind: "message", T: store_pb_1.Pair, repeated: true },
        { no: 2, name: "error", kind: "message", T: errors_pb_1.Error },
    ]);
    static fromBinary(bytes, options) {
        return new WriteResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new WriteResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new WriteResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(WriteResponse, a, b);
    }
}
exports.WriteResponse = WriteResponse;
//# sourceMappingURL=service_pb.map