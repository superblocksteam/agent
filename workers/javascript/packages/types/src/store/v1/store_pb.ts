// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file store/v1/store.proto (package store.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Value } from "@bufbuild/protobuf";
import { Store } from "../../secrets/v1/secrets_pb";

/**
 * @generated from message store.v1.Pair
 */
export class Pair extends Message<Pair> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: google.protobuf.Value value = 2;
   */
  value?: Value;

  constructor(data?: PartialMessage<Pair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "store.v1.Pair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "message", T: Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pair {
    return new Pair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pair {
    return new Pair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pair {
    return new Pair().fromJsonString(jsonString, options);
  }

  static equals(a: Pair | PlainMessage<Pair> | undefined, b: Pair | PlainMessage<Pair> | undefined): boolean {
    return proto3.util.equals(Pair, a, b);
  }
}

/**
 * @generated from message store.v1.Stores
 */
export class Stores extends Message<Stores> {
  /**
   * @generated from field: repeated secrets.v1.Store secrets = 1;
   */
  secrets: Store[] = [];

  constructor(data?: PartialMessage<Stores>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "store.v1.Stores";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "secrets", kind: "message", T: Store, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stores {
    return new Stores().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stores {
    return new Stores().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stores {
    return new Stores().fromJsonString(jsonString, options);
  }

  static equals(a: Stores | PlainMessage<Stores> | undefined, b: Stores | PlainMessage<Stores> | undefined): boolean {
    return proto3.util.equals(Stores, a, b);
  }
}

