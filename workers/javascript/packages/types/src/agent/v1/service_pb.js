"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file agent/v1/service.proto (package agent.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditLogRequest_AuditLog_ApiTiming = exports.AuditLogRequest_AuditLog_ApiLocationContext = exports.AuditLogRequest_AuditLog_AuditLogEventType = exports.AuditLogRequest_AuditLog_AuditLogEntityType = exports.AuditLogRequest_AuditLog_ApiRunStatus = exports.AuditLogRequest_AuditLog = exports.AuditLogRequest = exports.TagList = exports.VersionList = exports.RegistrationResponse_ResponseBody_Agent = exports.RegistrationResponse_ResponseBody = exports.RegistrationResponse_ResponseMeta = exports.RegistrationResponse = exports.RegistrationRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const common_pb_1 = require("../../common/v1/common_pb");
/**
 * @generated from message agent.v1.RegistrationRequest
 */
class RegistrationRequest extends protobuf_1.Message {
    /**
     * @generated from field: map<string, agent.v1.VersionList> plugin_versions = 1;
     */
    pluginVersions = {};
    /**
     * @generated from field: int32 type = 2;
     */
    type = 0;
    /**
     * @generated from field: map<string, agent.v1.TagList> tags = 3;
     */
    tags = {};
    /**
     * @generated from field: string signing_key_id = 4;
     */
    signingKeyId = "";
    /**
     * @generated from field: repeated string verification_key_ids = 5;
     */
    verificationKeyIds = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.RegistrationRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "plugin_versions", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: VersionList } },
        { no: 2, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "tags", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: TagList } },
        { no: 4, name: "signing_key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "verification_key_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new RegistrationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegistrationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegistrationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegistrationRequest, a, b);
    }
}
exports.RegistrationRequest = RegistrationRequest;
/**
 * @generated from message agent.v1.RegistrationResponse
 */
class RegistrationResponse extends protobuf_1.Message {
    /**
     * @generated from field: agent.v1.RegistrationResponse.ResponseMeta response_meta = 1;
     */
    responseMeta;
    /**
     * @generated from field: agent.v1.RegistrationResponse.ResponseBody data = 2;
     */
    data;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.RegistrationResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "response_meta", kind: "message", T: RegistrationResponse_ResponseMeta },
        { no: 2, name: "data", kind: "message", T: RegistrationResponse_ResponseBody },
    ]);
    static fromBinary(bytes, options) {
        return new RegistrationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegistrationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegistrationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegistrationResponse, a, b);
    }
}
exports.RegistrationResponse = RegistrationResponse;
/**
 * @generated from message agent.v1.RegistrationResponse.ResponseMeta
 */
class RegistrationResponse_ResponseMeta extends protobuf_1.Message {
    /**
     * @generated from field: int32 status = 1;
     */
    status = 0;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: bool success = 3;
     */
    success = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.RegistrationResponse.ResponseMeta";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new RegistrationResponse_ResponseMeta().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegistrationResponse_ResponseMeta().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegistrationResponse_ResponseMeta().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegistrationResponse_ResponseMeta, a, b);
    }
}
exports.RegistrationResponse_ResponseMeta = RegistrationResponse_ResponseMeta;
/**
 * @generated from message agent.v1.RegistrationResponse.ResponseBody
 */
class RegistrationResponse_ResponseBody extends protobuf_1.Message {
    /**
     * @generated from field: agent.v1.RegistrationResponse.ResponseBody.Agent agent = 1;
     */
    agent;
    /**
     * @generated from field: string billing_plan = 2;
     */
    billingPlan = "";
    /**
     * @generated from field: string organization_id = 3;
     */
    organizationId = "";
    /**
     * @generated from field: string organization_name = 4;
     */
    organizationName = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.RegistrationResponse.ResponseBody";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "agent", kind: "message", T: RegistrationResponse_ResponseBody_Agent },
        { no: 2, name: "billing_plan", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "organization_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new RegistrationResponse_ResponseBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegistrationResponse_ResponseBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegistrationResponse_ResponseBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegistrationResponse_ResponseBody, a, b);
    }
}
exports.RegistrationResponse_ResponseBody = RegistrationResponse_ResponseBody;
/**
 * @generated from message agent.v1.RegistrationResponse.ResponseBody.Agent
 */
class RegistrationResponse_ResponseBody_Agent extends protobuf_1.Message {
    /**
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from field: string key = 2;
     */
    key = "";
    /**
     * @generated from field: string environment = 3;
     */
    environment = "";
    /**
     * @generated from field: string status = 4;
     */
    status = "";
    /**
     * @generated from field: string version = 5;
     */
    version = "";
    /**
     * @generated from field: string version_external = 6;
     */
    versionExternal = "";
    /**
     * @generated from field: map<string, agent.v1.VersionList> supported_plugin_versions = 7;
     */
    supportedPluginVersions = {};
    /**
     * @generated from field: string url = 8;
     */
    url = "";
    /**
     * @generated from field: int32 type = 9;
     */
    type = 0;
    /**
     * @generated from field: google.protobuf.Timestamp updated = 10;
     */
    updated;
    /**
     * @generated from field: google.protobuf.Timestamp created = 11;
     */
    created;
    /**
     * @generated from field: map<string, agent.v1.TagList> tags = 12;
     */
    tags = {};
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.RegistrationResponse.ResponseBody.Agent";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "environment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "version_external", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "supported_plugin_versions", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: VersionList } },
        { no: 8, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 10, name: "updated", kind: "message", T: protobuf_1.Timestamp },
        { no: 11, name: "created", kind: "message", T: protobuf_1.Timestamp },
        { no: 12, name: "tags", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: TagList } },
    ]);
    static fromBinary(bytes, options) {
        return new RegistrationResponse_ResponseBody_Agent().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegistrationResponse_ResponseBody_Agent().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegistrationResponse_ResponseBody_Agent().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegistrationResponse_ResponseBody_Agent, a, b);
    }
}
exports.RegistrationResponse_ResponseBody_Agent = RegistrationResponse_ResponseBody_Agent;
/**
 * @generated from message agent.v1.VersionList
 */
class VersionList extends protobuf_1.Message {
    /**
     * @generated from field: repeated string versions = 1;
     */
    versions = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.VersionList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "versions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new VersionList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VersionList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VersionList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(VersionList, a, b);
    }
}
exports.VersionList = VersionList;
/**
 * @generated from message agent.v1.TagList
 */
class TagList extends protobuf_1.Message {
    /**
     * @generated from field: repeated string tags = 1;
     */
    tags = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.TagList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new TagList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TagList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TagList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TagList, a, b);
    }
}
exports.TagList = TagList;
/**
 * @generated from message agent.v1.AuditLogRequest
 */
class AuditLogRequest extends protobuf_1.Message {
    /**
     * @generated from field: repeated agent.v1.AuditLogRequest.AuditLog audit_logs = 1;
     */
    auditLogs = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.AuditLogRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "audit_logs", kind: "message", T: AuditLogRequest_AuditLog, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new AuditLogRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AuditLogRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AuditLogRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AuditLogRequest, a, b);
    }
}
exports.AuditLogRequest = AuditLogRequest;
/**
 * @generated from message agent.v1.AuditLogRequest.AuditLog
 */
class AuditLogRequest_AuditLog extends protobuf_1.Message {
    /**
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from field: string entity_id = 2;
     */
    entityId = "";
    /**
     * @generated from field: agent.v1.AuditLogRequest.AuditLog.AuditLogEntityType entity_type = 3;
     */
    entityType = AuditLogRequest_AuditLog_AuditLogEntityType.UNSPECIFIED;
    /**
     * @generated from field: string organization_id = 4;
     */
    organizationId = "";
    /**
     * @generated from field: bool is_deployed = 5;
     */
    isDeployed = false;
    /**
     * @generated from field: string source = 6;
     */
    source = "";
    /**
     * @generated from field: string target = 7;
     */
    target = "";
    /**
     * @generated from field: agent.v1.AuditLogRequest.AuditLog.AuditLogEventType type = 8;
     */
    type = AuditLogRequest_AuditLog_AuditLogEventType.UNSPECIFIED;
    /**
     * @generated from field: optional string agent_id = 9;
     */
    agentId;
    /**
     * @generated from field: optional agent.v1.AuditLogRequest.AuditLog.ApiRunStatus status = 10;
     */
    status;
    /**
     * @generated from field: optional string error = 11;
     */
    error;
    /**
     * @generated from field: optional agent.v1.AuditLogRequest.AuditLog.ApiLocationContext api_location_context = 12;
     */
    apiLocationContext;
    /**
     * @generated from field: agent.v1.AuditLogRequest.AuditLog.ApiTiming api_timing = 13;
     */
    apiTiming;
    /**
     * @generated from field: optional common.v1.UserType user_type = 14;
     */
    userType;
    /**
     * @generated from field: optional string targetName = 15;
     */
    targetName;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.AuditLogRequest.AuditLog";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "entity_type", kind: "enum", T: protobuf_1.proto3.getEnumType(AuditLogRequest_AuditLog_AuditLogEntityType) },
        { no: 4, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "is_deployed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(AuditLogRequest_AuditLog_AuditLogEventType) },
        { no: 9, name: "agent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(AuditLogRequest_AuditLog_ApiRunStatus), opt: true },
        { no: 11, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 12, name: "api_location_context", kind: "message", T: AuditLogRequest_AuditLog_ApiLocationContext, opt: true },
        { no: 13, name: "api_timing", kind: "message", T: AuditLogRequest_AuditLog_ApiTiming },
        { no: 14, name: "user_type", kind: "enum", T: protobuf_1.proto3.getEnumType(common_pb_1.UserType), opt: true },
        { no: 15, name: "targetName", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new AuditLogRequest_AuditLog().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AuditLogRequest_AuditLog().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AuditLogRequest_AuditLog().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AuditLogRequest_AuditLog, a, b);
    }
}
exports.AuditLogRequest_AuditLog = AuditLogRequest_AuditLog;
/**
 * @generated from enum agent.v1.AuditLogRequest.AuditLog.ApiRunStatus
 */
var AuditLogRequest_AuditLog_ApiRunStatus;
(function (AuditLogRequest_AuditLog_ApiRunStatus) {
    /**
     * @generated from enum value: API_RUN_STATUS_UNSPECIFIED = 0;
     */
    AuditLogRequest_AuditLog_ApiRunStatus[AuditLogRequest_AuditLog_ApiRunStatus["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: API_RUN_STATUS_SUCCESS = 1;
     */
    AuditLogRequest_AuditLog_ApiRunStatus[AuditLogRequest_AuditLog_ApiRunStatus["SUCCESS"] = 1] = "SUCCESS";
    /**
     * @generated from enum value: API_RUN_STATUS_FAILED = 2;
     */
    AuditLogRequest_AuditLog_ApiRunStatus[AuditLogRequest_AuditLog_ApiRunStatus["FAILED"] = 2] = "FAILED";
})(AuditLogRequest_AuditLog_ApiRunStatus || (exports.AuditLogRequest_AuditLog_ApiRunStatus = AuditLogRequest_AuditLog_ApiRunStatus = {}));
// Retrieve enum metadata with: proto3.getEnumType(AuditLogRequest_AuditLog_ApiRunStatus)
protobuf_1.proto3.util.setEnumType(AuditLogRequest_AuditLog_ApiRunStatus, "agent.v1.AuditLogRequest.AuditLog.ApiRunStatus", [
    { no: 0, name: "API_RUN_STATUS_UNSPECIFIED" },
    { no: 1, name: "API_RUN_STATUS_SUCCESS" },
    { no: 2, name: "API_RUN_STATUS_FAILED" },
]);
/**
 * @generated from enum agent.v1.AuditLogRequest.AuditLog.AuditLogEntityType
 */
var AuditLogRequest_AuditLog_AuditLogEntityType;
(function (AuditLogRequest_AuditLog_AuditLogEntityType) {
    /**
     * @generated from enum value: AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED = 0;
     */
    AuditLogRequest_AuditLog_AuditLogEntityType[AuditLogRequest_AuditLog_AuditLogEntityType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: AUDIT_LOG_ENTITY_TYPE_APPLICATION = 1;
     */
    AuditLogRequest_AuditLog_AuditLogEntityType[AuditLogRequest_AuditLog_AuditLogEntityType["APPLICATION"] = 1] = "APPLICATION";
    /**
     * @generated from enum value: AUDIT_LOG_ENTITY_TYPE_WORKFLOW = 2;
     */
    AuditLogRequest_AuditLog_AuditLogEntityType[AuditLogRequest_AuditLog_AuditLogEntityType["WORKFLOW"] = 2] = "WORKFLOW";
    /**
     * @generated from enum value: AUDIT_LOG_ENTITY_TYPE_SCHEDULED_JOB = 3;
     */
    AuditLogRequest_AuditLog_AuditLogEntityType[AuditLogRequest_AuditLog_AuditLogEntityType["SCHEDULED_JOB"] = 3] = "SCHEDULED_JOB";
    /**
     * @generated from enum value: AUDIT_LOG_ENTITY_TYPE_STEP = 4;
     */
    AuditLogRequest_AuditLog_AuditLogEntityType[AuditLogRequest_AuditLog_AuditLogEntityType["STEP"] = 4] = "STEP";
})(AuditLogRequest_AuditLog_AuditLogEntityType || (exports.AuditLogRequest_AuditLog_AuditLogEntityType = AuditLogRequest_AuditLog_AuditLogEntityType = {}));
// Retrieve enum metadata with: proto3.getEnumType(AuditLogRequest_AuditLog_AuditLogEntityType)
protobuf_1.proto3.util.setEnumType(AuditLogRequest_AuditLog_AuditLogEntityType, "agent.v1.AuditLogRequest.AuditLog.AuditLogEntityType", [
    { no: 0, name: "AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED" },
    { no: 1, name: "AUDIT_LOG_ENTITY_TYPE_APPLICATION" },
    { no: 2, name: "AUDIT_LOG_ENTITY_TYPE_WORKFLOW" },
    { no: 3, name: "AUDIT_LOG_ENTITY_TYPE_SCHEDULED_JOB" },
    { no: 4, name: "AUDIT_LOG_ENTITY_TYPE_STEP" },
]);
/**
 * @generated from enum agent.v1.AuditLogRequest.AuditLog.AuditLogEventType
 */
var AuditLogRequest_AuditLog_AuditLogEventType;
(function (AuditLogRequest_AuditLog_AuditLogEventType) {
    /**
     * @generated from enum value: AUDIT_LOG_EVENT_TYPE_UNSPECIFIED = 0;
     */
    AuditLogRequest_AuditLog_AuditLogEventType[AuditLogRequest_AuditLog_AuditLogEventType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: AUDIT_LOG_EVENT_TYPE_API_RUN = 1;
     */
    AuditLogRequest_AuditLog_AuditLogEventType[AuditLogRequest_AuditLog_AuditLogEventType["API_RUN"] = 1] = "API_RUN";
})(AuditLogRequest_AuditLog_AuditLogEventType || (exports.AuditLogRequest_AuditLog_AuditLogEventType = AuditLogRequest_AuditLog_AuditLogEventType = {}));
// Retrieve enum metadata with: proto3.getEnumType(AuditLogRequest_AuditLog_AuditLogEventType)
protobuf_1.proto3.util.setEnumType(AuditLogRequest_AuditLog_AuditLogEventType, "agent.v1.AuditLogRequest.AuditLog.AuditLogEventType", [
    { no: 0, name: "AUDIT_LOG_EVENT_TYPE_UNSPECIFIED" },
    { no: 1, name: "AUDIT_LOG_EVENT_TYPE_API_RUN" },
]);
/**
 * @generated from message agent.v1.AuditLogRequest.AuditLog.ApiLocationContext
 */
class AuditLogRequest_AuditLog_ApiLocationContext extends protobuf_1.Message {
    /**
     * @generated from field: string application_id = 1;
     */
    applicationId = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.AuditLogRequest.AuditLog.ApiLocationContext";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "application_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AuditLogRequest_AuditLog_ApiLocationContext().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AuditLogRequest_AuditLog_ApiLocationContext().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AuditLogRequest_AuditLog_ApiLocationContext().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AuditLogRequest_AuditLog_ApiLocationContext, a, b);
    }
}
exports.AuditLogRequest_AuditLog_ApiLocationContext = AuditLogRequest_AuditLog_ApiLocationContext;
/**
 * @generated from message agent.v1.AuditLogRequest.AuditLog.ApiTiming
 */
class AuditLogRequest_AuditLog_ApiTiming extends protobuf_1.Message {
    /**
     * @generated from field: int64 start = 1;
     */
    start = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: optional int64 end = 2;
     */
    end;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "agent.v1.AuditLogRequest.AuditLog.ApiTiming";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 2, name: "end", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new AuditLogRequest_AuditLog_ApiTiming().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AuditLogRequest_AuditLog_ApiTiming().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AuditLogRequest_AuditLog_ApiTiming().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AuditLogRequest_AuditLog_ApiTiming, a, b);
    }
}
exports.AuditLogRequest_AuditLog_ApiTiming = AuditLogRequest_AuditLog_ApiTiming;
//# sourceMappingURL=service_pb.map