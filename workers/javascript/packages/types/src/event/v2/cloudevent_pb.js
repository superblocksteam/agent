"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file event/v2/cloudevent.proto (package event.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudEventAttributeValue = exports.CloudEvent = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * CloudEvent is copied from
 * https://github.com/cloudevents/spec/blob/main/cloudevents/formats/protobuf-format.md.
 *
 * @generated from message event.v2.CloudEvent
 */
class CloudEvent extends protobuf_1.Message {
    /**
     * Unique event identifier.
     *
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * URI of the event source.
     *
     * @generated from field: string source = 2;
     */
    source = "";
    /**
     * Version of the spec in use.
     *
     * @generated from field: string spec_version = 3;
     */
    specVersion = "";
    /**
     * Event type identifier.
     *
     * @generated from field: string type = 4;
     */
    type = "";
    /**
     * Optional & Extension Attributes
     *
     * @generated from field: map<string, event.v2.CloudEventAttributeValue> attributes = 5;
     */
    attributes = {};
    /**
     * CloudEvent Data (Bytes, Text, or Proto)
     *
     * @generated from oneof event.v2.CloudEvent.data
     */
    data = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "event.v2.CloudEvent";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "spec_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: CloudEventAttributeValue } },
        { no: 6, name: "binary_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
        { no: 7, name: "text_data", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
        { no: 8, name: "proto_data", kind: "message", T: protobuf_1.Any, oneof: "data" },
    ]);
    static fromBinary(bytes, options) {
        return new CloudEvent().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CloudEvent().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CloudEvent().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CloudEvent, a, b);
    }
}
exports.CloudEvent = CloudEvent;
/**
 * CloudEventAttribute enables extensions to use any of the seven allowed
 * data types as the value of an envelope key.
 *
 * @generated from message event.v2.CloudEventAttributeValue
 */
class CloudEventAttributeValue extends protobuf_1.Message {
    /**
     * The value can be any one of these types.
     *
     * @generated from oneof event.v2.CloudEventAttributeValue.attr
     */
    attr = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "event.v2.CloudEventAttributeValue";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "ce_boolean", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "attr" },
        { no: 2, name: "ce_integer", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "attr" },
        { no: 3, name: "ce_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "attr" },
        { no: 4, name: "ce_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "attr" },
        { no: 5, name: "ce_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "attr" },
        { no: 6, name: "ce_uri_ref", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "attr" },
        { no: 7, name: "ce_timestamp", kind: "message", T: protobuf_1.Timestamp, oneof: "attr" },
    ]);
    static fromBinary(bytes, options) {
        return new CloudEventAttributeValue().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CloudEventAttributeValue().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CloudEventAttributeValue().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CloudEventAttributeValue, a, b);
    }
}
exports.CloudEventAttributeValue = CloudEventAttributeValue;
//# sourceMappingURL=cloudevent_pb.map