"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file event/v2/service.proto (package event.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const cloudevent_pb_1 = require("./cloudevent_pb");
/**
 * @generated from message event.v2.SendRequest
 */
class SendRequest extends protobuf_1.Message {
    /**
     * @generated from field: event.v2.CloudEvent event = 1;
     */
    event;
    /**
     * @generated from field: string destination = 2;
     */
    destination = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "event.v2.SendRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "event", kind: "message", T: cloudevent_pb_1.CloudEvent },
        { no: 2, name: "destination", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SendRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SendRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SendRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SendRequest, a, b);
    }
}
exports.SendRequest = SendRequest;
//# sourceMappingURL=service_pb.map