"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file worker/v1/step_executor.proto (package worker.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.StringValue = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * NOTE(frank): We are running into so many issues using google.protobuf.StringValue
 * between go and javascript.
 *
 * @generated from message worker.v1.StringValue
 */
class StringValue extends protobuf_1.Message {
    /**
     * @generated from field: string value = 1;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "worker.v1.StringValue";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StringValue().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StringValue().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StringValue().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StringValue, a, b);
    }
}
exports.StringValue = StringValue;
//# sourceMappingURL=step_executor_pb.map