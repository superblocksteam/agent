"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file api/v1/blocks.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Variables_Config = exports.Variables_Mode = exports.Variables_Type = exports.Variables = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message api.v1.Variables
 */
class Variables extends protobuf_1.Message {
    /**
     * @generated from field: repeated api.v1.Variables.Config items = 1;
     */
    items = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Variables";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "items", kind: "message", T: Variables_Config, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Variables().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Variables().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Variables().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Variables, a, b);
    }
}
exports.Variables = Variables;
/**
 * @generated from enum api.v1.Variables.Type
 */
var Variables_Type;
(function (Variables_Type) {
    /**
     * @generated from enum value: TYPE_UNSPECIFIED = 0;
     */
    Variables_Type[Variables_Type["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     *
     * myVar1.get()
     * myVar1.set()
     *
     * @generated from enum value: TYPE_SIMPLE = 1;
     */
    Variables_Type[Variables_Type["SIMPLE"] = 1] = "SIMPLE";
    /**
     *
     * await myVar1.get()
     * await myVar1.set()
     *
     * @generated from enum value: TYPE_ADVANCED = 2;
     */
    Variables_Type[Variables_Type["ADVANCED"] = 2] = "ADVANCED";
    /**
     *
     * myVar1
     * myVar1 = 5; // NOTE(frank): We won't implement MODE_READWRITE for this yet.
     *
     * @generated from enum value: TYPE_NATIVE = 3;
     */
    Variables_Type[Variables_Type["NATIVE"] = 3] = "NATIVE";
    /**
     *
     * await myVar1.readContentsAsync()
     * await myVar1.readContentsAsync(someMode)
     * myVar1.readContents()
     * myVar1.readContents(someMode)
     *
     * @generated from enum value: TYPE_FILEPICKER = 4;
     */
    Variables_Type[Variables_Type["FILEPICKER"] = 4] = "FILEPICKER";
})(Variables_Type || (exports.Variables_Type = Variables_Type = {}));
// Retrieve enum metadata with: proto3.getEnumType(Variables_Type)
protobuf_1.proto3.util.setEnumType(Variables_Type, "api.v1.Variables.Type", [
    { no: 0, name: "TYPE_UNSPECIFIED" },
    { no: 1, name: "TYPE_SIMPLE" },
    { no: 2, name: "TYPE_ADVANCED" },
    { no: 3, name: "TYPE_NATIVE" },
    { no: 4, name: "TYPE_FILEPICKER" },
]);
/**
 * @generated from enum api.v1.Variables.Mode
 */
var Variables_Mode;
(function (Variables_Mode) {
    /**
     * @generated from enum value: MODE_UNSPECIFIED = 0;
     */
    Variables_Mode[Variables_Mode["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: MODE_READ = 1;
     */
    Variables_Mode[Variables_Mode["READ"] = 1] = "READ";
    /**
     * @generated from enum value: MODE_READWRITE = 2;
     */
    Variables_Mode[Variables_Mode["READWRITE"] = 2] = "READWRITE";
})(Variables_Mode || (exports.Variables_Mode = Variables_Mode = {}));
// Retrieve enum metadata with: proto3.getEnumType(Variables_Mode)
protobuf_1.proto3.util.setEnumType(Variables_Mode, "api.v1.Variables.Mode", [
    { no: 0, name: "MODE_UNSPECIFIED" },
    { no: 1, name: "MODE_READ" },
    { no: 2, name: "MODE_READWRITE" },
]);
/**
 * @generated from message api.v1.Variables.Config
 */
class Variables_Config extends protobuf_1.Message {
    /**
     * @generated from field: string value = 1;
     */
    value = "";
    /**
     * @generated from field: api.v1.Variables.Type type = 2;
     */
    type = Variables_Type.UNSPECIFIED;
    /**
     * @generated from field: api.v1.Variables.Mode mode = 3;
     */
    mode = Variables_Mode.UNSPECIFIED;
    /**
     * @generated from field: string key = 4;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Variables.Config";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(Variables_Type) },
        { no: 3, name: "mode", kind: "enum", T: protobuf_1.proto3.getEnumType(Variables_Mode) },
        { no: 4, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Variables_Config().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Variables_Config().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Variables_Config().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Variables_Config, a, b);
    }
}
exports.Variables_Config = Variables_Config;
//# sourceMappingURL=blocks_pb.map