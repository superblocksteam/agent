"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file api/v1/event.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputOld = exports.Output_Request = exports.Output = exports.Performance = exports.Event_End = exports.Event_Start = exports.Event_Response = exports.Event_Request = exports.Event_Data = exports.Event = exports.Resolved = exports.BlockType = exports.BlockStatus = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const errors_pb_1 = require("../../common/v1/errors_pb");
/**
 * @generated from enum api.v1.BlockStatus
 */
var BlockStatus;
(function (BlockStatus) {
    /**
     * @generated from enum value: BLOCK_STATUS_UNSPECIFIED = 0;
     */
    BlockStatus[BlockStatus["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: BLOCK_STATUS_SUCCEEDED = 1;
     */
    BlockStatus[BlockStatus["SUCCEEDED"] = 1] = "SUCCEEDED";
    /**
     * @generated from enum value: BLOCK_STATUS_ERRORED = 2;
     */
    BlockStatus[BlockStatus["ERRORED"] = 2] = "ERRORED";
})(BlockStatus || (exports.BlockStatus = BlockStatus = {}));
// Retrieve enum metadata with: proto3.getEnumType(BlockStatus)
protobuf_1.proto3.util.setEnumType(BlockStatus, "api.v1.BlockStatus", [
    { no: 0, name: "BLOCK_STATUS_UNSPECIFIED" },
    { no: 1, name: "BLOCK_STATUS_SUCCEEDED" },
    { no: 2, name: "BLOCK_STATUS_ERRORED" },
]);
/**
 * @generated from enum api.v1.BlockType
 */
var BlockType;
(function (BlockType) {
    /**
     * @generated from enum value: BLOCK_TYPE_UNSPECIFIED = 0;
     */
    BlockType[BlockType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: BLOCK_TYPE_BREAK = 1;
     */
    BlockType[BlockType["BREAK"] = 1] = "BREAK";
    /**
     * @generated from enum value: BLOCK_TYPE_RETURN = 2;
     */
    BlockType[BlockType["RETURN"] = 2] = "RETURN";
    /**
     * @generated from enum value: BLOCK_TYPE_WAIT = 3;
     */
    BlockType[BlockType["WAIT"] = 3] = "WAIT";
    /**
     * @generated from enum value: BLOCK_TYPE_PARALLEL = 4;
     */
    BlockType[BlockType["PARALLEL"] = 4] = "PARALLEL";
    /**
     * @generated from enum value: BLOCK_TYPE_CONDITIONAL = 5;
     */
    BlockType[BlockType["CONDITIONAL"] = 5] = "CONDITIONAL";
    /**
     * @generated from enum value: BLOCK_TYPE_LOOP = 6;
     */
    BlockType[BlockType["LOOP"] = 6] = "LOOP";
    /**
     * @generated from enum value: BLOCK_TYPE_TRYCATCH = 7;
     */
    BlockType[BlockType["TRYCATCH"] = 7] = "TRYCATCH";
    /**
     * @generated from enum value: BLOCK_TYPE_STEP = 8;
     */
    BlockType[BlockType["STEP"] = 8] = "STEP";
    /**
     * @generated from enum value: BLOCK_TYPE_VARIABLES = 9;
     */
    BlockType[BlockType["VARIABLES"] = 9] = "VARIABLES";
    /**
     * @generated from enum value: BLOCK_TYPE_THROW = 10;
     */
    BlockType[BlockType["THROW"] = 10] = "THROW";
    /**
     * @generated from enum value: BLOCK_TYPE_SEND = 11;
     */
    BlockType[BlockType["SEND"] = 11] = "SEND";
    /**
     * @generated from enum value: BLOCK_TYPE_STREAM = 12;
     */
    BlockType[BlockType["STREAM"] = 12] = "STREAM";
})(BlockType || (exports.BlockType = BlockType = {}));
// Retrieve enum metadata with: proto3.getEnumType(BlockType)
protobuf_1.proto3.util.setEnumType(BlockType, "api.v1.BlockType", [
    { no: 0, name: "BLOCK_TYPE_UNSPECIFIED" },
    { no: 1, name: "BLOCK_TYPE_BREAK" },
    { no: 2, name: "BLOCK_TYPE_RETURN" },
    { no: 3, name: "BLOCK_TYPE_WAIT" },
    { no: 4, name: "BLOCK_TYPE_PARALLEL" },
    { no: 5, name: "BLOCK_TYPE_CONDITIONAL" },
    { no: 6, name: "BLOCK_TYPE_LOOP" },
    { no: 7, name: "BLOCK_TYPE_TRYCATCH" },
    { no: 8, name: "BLOCK_TYPE_STEP" },
    { no: 9, name: "BLOCK_TYPE_VARIABLES" },
    { no: 10, name: "BLOCK_TYPE_THROW" },
    { no: 11, name: "BLOCK_TYPE_SEND" },
    { no: 12, name: "BLOCK_TYPE_STREAM" },
]);
/**
 * @generated from message api.v1.Resolved
 */
class Resolved extends protobuf_1.Message {
    /**
     * @generated from field: google.protobuf.Value value = 1;
     */
    value;
    /**
     *
     * If the value was comprised of more than one bindings, the individual resolutions will be here.
     *
     * @generated from field: repeated google.protobuf.Value bindings = 2;
     */
    bindings = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Resolved";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "value", kind: "message", T: protobuf_1.Value },
        { no: 2, name: "bindings", kind: "message", T: protobuf_1.Value, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Resolved().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Resolved().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Resolved().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Resolved, a, b);
    }
}
exports.Resolved = Resolved;
/**
 * @generated from message api.v1.Event
 */
class Event extends protobuf_1.Message {
    /**
     * @generated from field: string name = 1;
     */
    name = "";
    /**
     * @generated from field: api.v1.BlockType type = 2;
     */
    type = BlockType.UNSPECIFIED;
    /**
     * @generated from field: google.protobuf.Timestamp timestamp = 3;
     */
    timestamp;
    /**
     * @generated from oneof api.v1.Event.event
     */
    event = { case: undefined };
    /**
     *
     * The name of the parent block, if any.
     *
     * @generated from field: optional string parent = 6;
     */
    parent;
    /**
     * *
     * The execution index if this is child step of parallels and loops.
     *
     * @generated from field: optional string execution_index = 8;
     */
    executionIndex;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(BlockType) },
        { no: 3, name: "timestamp", kind: "message", T: protobuf_1.Timestamp },
        { no: 4, name: "start", kind: "message", T: Event_Start, oneof: "event" },
        { no: 5, name: "end", kind: "message", T: Event_End, oneof: "event" },
        { no: 7, name: "data", kind: "message", T: Event_Data, oneof: "event" },
        { no: 9, name: "request", kind: "message", T: Event_Request, oneof: "event" },
        { no: 10, name: "response", kind: "message", T: Event_Response, oneof: "event" },
        { no: 6, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 8, name: "execution_index", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Event().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event, a, b);
    }
}
exports.Event = Event;
/**
 * @generated from message api.v1.Event.Data
 */
class Event_Data extends protobuf_1.Message {
    /**
     * @generated from field: google.protobuf.Value value = 1;
     */
    value;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event.Data";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "value", kind: "message", T: protobuf_1.Value },
    ]);
    static fromBinary(bytes, options) {
        return new Event_Data().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_Data().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_Data().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_Data, a, b);
    }
}
exports.Event_Data = Event_Data;
/**
 *
 * Represents the start of an Api.
 *
 * @generated from message api.v1.Event.Request
 */
class Event_Request extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event.Request";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new Event_Request().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_Request().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_Request().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_Request, a, b);
    }
}
exports.Event_Request = Event_Request;
/**
 *
 * Represents the completion of an Api.
 *
 * @generated from message api.v1.Event.Response
 */
class Event_Response extends protobuf_1.Message {
    /**
     *
     * The name of the block that represents the response of the Api.
     *
     * @generated from field: string last = 1;
     */
    last = "";
    /**
     *
     * The errors, if any.
     *
     * @generated from field: repeated common.v1.Error errors = 3;
     */
    errors = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event.Response";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "last", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "errors", kind: "message", T: errors_pb_1.Error, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Event_Response().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_Response().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_Response().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_Response, a, b);
    }
}
exports.Event_Response = Event_Response;
/**
 * @generated from message api.v1.Event.Start
 */
class Event_Start extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event.Start";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new Event_Start().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_Start().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_Start().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_Start, a, b);
    }
}
exports.Event_Start = Event_Start;
/**
 * @generated from message api.v1.Event.End
 */
class Event_End extends protobuf_1.Message {
    /**
     *
     * Performance data for the block that just ended.
     *
     * @generated from field: api.v1.Performance performance = 1;
     */
    performance;
    /**
     *
     * The block's output.
     *
     * @generated from field: api.v1.Output output = 2;
     */
    output;
    /**
     *
     * The error, if any.
     *
     * @generated from field: common.v1.Error error = 3;
     */
    error;
    /**
     * @generated from field: api.v1.BlockStatus status = 4;
     */
    status = BlockStatus.UNSPECIFIED;
    /**
     *
     * Any resolved bindings.
     *
     * @generated from field: map<string, api.v1.Resolved> resolved = 5;
     */
    resolved = {};
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Event.End";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "performance", kind: "message", T: Performance },
        { no: 2, name: "output", kind: "message", T: Output },
        { no: 3, name: "error", kind: "message", T: errors_pb_1.Error },
        { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(BlockStatus) },
        { no: 5, name: "resolved", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: Resolved } },
    ]);
    static fromBinary(bytes, options) {
        return new Event_End().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_End().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_End().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_End, a, b);
    }
}
exports.Event_End = Event_End;
/**
 * @generated from message api.v1.Performance
 */
class Performance extends protobuf_1.Message {
    /**
     * @generated from field: int64 start = 1;
     */
    start = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: int64 finish = 2;
     */
    finish = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: int64 total = 3;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: int64 execution = 4;
     */
    execution = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: int64 overhead = 5;
     */
    overhead = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: map<string, int64> custom = 6;
     */
    custom = {};
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Performance";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 2, name: "finish", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "execution", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 5, name: "overhead", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 6, name: "custom", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 3 /* ScalarType.INT64 */ } },
    ]);
    static fromBinary(bytes, options) {
        return new Performance().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Performance().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Performance().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Performance, a, b);
    }
}
exports.Performance = Performance;
/**
 * @generated from message api.v1.Output
 */
class Output extends protobuf_1.Message {
    /**
     *
     * The JSON encoded response.
     *
     * @generated from field: google.protobuf.Value result = 1;
     */
    result;
    /**
     *
     * The original request.
     *
     * @generated from field: string request = 2;
     */
    request = "";
    /**
     * @generated from field: repeated string stdout = 3;
     */
    stdout = [];
    /**
     * @generated from field: repeated string stderr = 4;
     */
    stderr = [];
    /**
     * @generated from field: api.v1.Output.Request request_v2 = 5;
     */
    requestV2;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Output";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: protobuf_1.Value },
        { no: 2, name: "request", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "stdout", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 4, name: "stderr", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 5, name: "request_v2", kind: "message", T: Output_Request },
    ]);
    static fromBinary(bytes, options) {
        return new Output().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Output().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Output().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Output, a, b);
    }
}
exports.Output = Output;
/**
 * @generated from message api.v1.Output.Request
 */
class Output_Request extends protobuf_1.Message {
    /**
     * @generated from field: string summary = 1;
     */
    summary = "";
    /**
     * @generated from field: optional google.protobuf.Struct metadata = 5;
     */
    metadata;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.Output.Request";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "summary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "metadata", kind: "message", T: protobuf_1.Struct, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Output_Request().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Output_Request().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Output_Request().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Output_Request, a, b);
    }
}
exports.Output_Request = Output_Request;
/**
 * @generated from message api.v1.OutputOld
 */
class OutputOld extends protobuf_1.Message {
    /**
     * @generated from field: google.protobuf.Value output = 1;
     */
    output;
    /**
     * @generated from field: repeated string log = 2;
     */
    log = [];
    /**
     * @generated from field: string request = 3;
     */
    request = "";
    /**
     * @generated from field: google.protobuf.Value place_holders_info = 4;
     */
    placeHoldersInfo;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "api.v1.OutputOld";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "output", kind: "message", T: protobuf_1.Value },
        { no: 2, name: "log", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 3, name: "request", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "place_holders_info", kind: "message", T: protobuf_1.Value },
    ]);
    static fromBinary(bytes, options) {
        return new OutputOld().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OutputOld().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OutputOld().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OutputOld, a, b);
    }
}
exports.OutputOld = OutputOld;
//# sourceMappingURL=event_pb.map