"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ai/v1/metadata.proto (package ai.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metadata = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const metadata_pb_1 = require("../../plugins/common/v1/metadata_pb");
const plugin_pb_1 = require("../../plugins/kafka/v1/plugin_pb");
/**
 * This represents the metadata that the "AI stack" cares about. It is
 * not guaranteed to be the same as the metadata for the "plugin stack".
 * This is more than likely a minified representation of it.
 *
 * @generated from message ai.v1.Metadata
 */
class Metadata extends protobuf_1.Message {
    /**
     * @generated from oneof ai.v1.Metadata.config
     */
    config = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "ai.v1.Metadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "mariadb", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 2, name: "mssql", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 3, name: "mysql", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 4, name: "postgres", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 5, name: "rockset", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 6, name: "snowflake", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 7, name: "cockroachdb", kind: "message", T: metadata_pb_1.SQLMetadata_Minified, oneof: "config" },
        { no: 8, name: "kafka", kind: "message", T: plugin_pb_1.Metadata_Minified, oneof: "config" },
        { no: 9, name: "confluent", kind: "message", T: plugin_pb_1.Metadata_Minified, oneof: "config" },
        { no: 10, name: "msk", kind: "message", T: plugin_pb_1.Metadata_Minified, oneof: "config" },
        { no: 11, name: "redpanda", kind: "message", T: plugin_pb_1.Metadata_Minified, oneof: "config" },
        { no: 12, name: "aivenkafka", kind: "message", T: plugin_pb_1.Metadata_Minified, oneof: "config" },
    ]);
    static fromBinary(bytes, options) {
        return new Metadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Metadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Metadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Metadata, a, b);
    }
}
exports.Metadata = Metadata;
//# sourceMappingURL=metadata_pb.map