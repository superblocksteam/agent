// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ai/v1/metadata.proto (package ai.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { SQLMetadata_Minified } from "../../plugins/common/v1/metadata_pb";
import { Metadata_Minified } from "../../plugins/kafka/v1/plugin_pb";

/**
 * This represents the metadata that the "AI stack" cares about. It is
 * not guaranteed to be the same as the metadata for the "plugin stack".
 * This is more than likely a minified representation of it.
 *
 * @generated from message ai.v1.Metadata
 */
export class Metadata extends Message<Metadata> {
  /**
   * @generated from oneof ai.v1.Metadata.config
   */
  config: {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified mariadb = 1;
     */
    value: SQLMetadata_Minified;
    case: "mariadb";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified mssql = 2;
     */
    value: SQLMetadata_Minified;
    case: "mssql";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified mysql = 3;
     */
    value: SQLMetadata_Minified;
    case: "mysql";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified postgres = 4;
     */
    value: SQLMetadata_Minified;
    case: "postgres";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified rockset = 5;
     */
    value: SQLMetadata_Minified;
    case: "rockset";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified snowflake = 6;
     */
    value: SQLMetadata_Minified;
    case: "snowflake";
  } | {
    /**
     * @generated from field: plugins.common.v1.SQLMetadata.Minified cockroachdb = 7;
     */
    value: SQLMetadata_Minified;
    case: "cockroachdb";
  } | {
    /**
     * @generated from field: plugins.kafka.v1.Metadata.Minified kafka = 8;
     */
    value: Metadata_Minified;
    case: "kafka";
  } | {
    /**
     * @generated from field: plugins.kafka.v1.Metadata.Minified confluent = 9;
     */
    value: Metadata_Minified;
    case: "confluent";
  } | {
    /**
     * @generated from field: plugins.kafka.v1.Metadata.Minified msk = 10;
     */
    value: Metadata_Minified;
    case: "msk";
  } | {
    /**
     * @generated from field: plugins.kafka.v1.Metadata.Minified redpanda = 11;
     */
    value: Metadata_Minified;
    case: "redpanda";
  } | {
    /**
     * @generated from field: plugins.kafka.v1.Metadata.Minified aivenkafka = 12;
     */
    value: Metadata_Minified;
    case: "aivenkafka";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ai.v1.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mariadb", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 2, name: "mssql", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 3, name: "mysql", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 4, name: "postgres", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 5, name: "rockset", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 6, name: "snowflake", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 7, name: "cockroachdb", kind: "message", T: SQLMetadata_Minified, oneof: "config" },
    { no: 8, name: "kafka", kind: "message", T: Metadata_Minified, oneof: "config" },
    { no: 9, name: "confluent", kind: "message", T: Metadata_Minified, oneof: "config" },
    { no: 10, name: "msk", kind: "message", T: Metadata_Minified, oneof: "config" },
    { no: 11, name: "redpanda", kind: "message", T: Metadata_Minified, oneof: "config" },
    { no: 12, name: "aivenkafka", kind: "message", T: Metadata_Minified, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metadata {
    return new Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metadata {
    return new Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metadata {
    return new Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: Metadata | PlainMessage<Metadata> | undefined, b: Metadata | PlainMessage<Metadata> | undefined): boolean {
    return proto3.util.equals(Metadata, a, b);
  }
}

