// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file syncer/v1/syncer.proto (package syncer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Metadata as Metadata$1 } from "../../ai/v1/metadata_pb";

/**
 * @generated from message syncer.v1.Metadata
 */
export class Metadata extends Message<Metadata> {
  /**
   * @generated from field: string configuration_id = 1;
   */
  configurationId = "";

  /**
   * @generated from field: string integration_id = 2;
   */
  integrationId = "";

  /**
   * @generated from field: ai.v1.Metadata raw_metadata = 3;
   */
  rawMetadata?: Metadata$1;

  /**
   * @generated from field: google.protobuf.Timestamp updated_datetime_utc = 4;
   */
  updatedDatetimeUtc?: Timestamp;

  /**
   * @generated from field: string integration_type = 5;
   */
  integrationType = "";

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId = "";

  constructor(data?: PartialMessage<Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "syncer.v1.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "configuration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "integration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "raw_metadata", kind: "message", T: Metadata$1 },
    { no: 4, name: "updated_datetime_utc", kind: "message", T: Timestamp },
    { no: 5, name: "integration_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metadata {
    return new Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metadata {
    return new Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metadata {
    return new Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: Metadata | PlainMessage<Metadata> | undefined, b: Metadata | PlainMessage<Metadata> | undefined): boolean {
    return proto3.util.equals(Metadata, a, b);
  }
}

