"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file common/v1/common.proto (package common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Profile = exports.Metadata = exports.Timestamps = exports.UserType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum common.v1.UserType
 */
var UserType;
(function (UserType) {
    /**
     * @generated from enum value: USER_TYPE_UNSPECIFIED = 0;
     */
    UserType[UserType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: USER_TYPE_SUPERBLOCKS = 1;
     */
    UserType[UserType["SUPERBLOCKS"] = 1] = "SUPERBLOCKS";
    /**
     * @generated from enum value: USER_TYPE_EXTERNAL = 2;
     */
    UserType[UserType["EXTERNAL"] = 2] = "EXTERNAL";
})(UserType || (exports.UserType = UserType = {}));
// Retrieve enum metadata with: proto3.getEnumType(UserType)
protobuf_1.proto3.util.setEnumType(UserType, "common.v1.UserType", [
    { no: 0, name: "USER_TYPE_UNSPECIFIED" },
    { no: 1, name: "USER_TYPE_SUPERBLOCKS" },
    { no: 2, name: "USER_TYPE_EXTERNAL" },
]);
/**
 * @generated from message common.v1.Timestamps
 */
class Timestamps extends protobuf_1.Message {
    /**
     * @generated from field: google.protobuf.Timestamp created = 1;
     */
    created;
    /**
     * @generated from field: google.protobuf.Timestamp updated = 2;
     */
    updated;
    /**
     * @generated from field: google.protobuf.Timestamp deactivated = 3;
     */
    deactivated;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "common.v1.Timestamps";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "created", kind: "message", T: protobuf_1.Timestamp },
        { no: 2, name: "updated", kind: "message", T: protobuf_1.Timestamp },
        { no: 3, name: "deactivated", kind: "message", T: protobuf_1.Timestamp },
    ]);
    static fromBinary(bytes, options) {
        return new Timestamps().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Timestamps().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Timestamps().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Timestamps, a, b);
    }
}
exports.Timestamps = Timestamps;
/**
 * @generated from message common.v1.Metadata
 */
class Metadata extends protobuf_1.Message {
    /**
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from field: optional string description = 2;
     */
    description;
    /**
     * @generated from field: string name = 3;
     */
    name = "";
    /**
     * @generated from field: string organization = 4;
     */
    organization = "";
    /**
     * @generated from field: optional string folder = 5;
     */
    folder;
    /**
     * @generated from field: common.v1.Timestamps timestamps = 6;
     */
    timestamps;
    /**
     * @generated from field: optional string version = 7;
     */
    version;
    /**
     * @generated from field: map<string, string> tags = 8;
     */
    tags = {};
    /**
     * @generated from field: optional string type = 9;
     */
    type;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "common.v1.Metadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "organization", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "folder", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 6, name: "timestamps", kind: "message", T: Timestamps },
        { no: 7, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 8, name: "tags", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 9 /* ScalarType.STRING */ } },
        { no: 9, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Metadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Metadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Metadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Metadata, a, b);
    }
}
exports.Metadata = Metadata;
/**
 * @generated from message common.v1.Profile
 */
class Profile extends protobuf_1.Message {
    /**
     * @generated from field: optional string id = 1;
     */
    id;
    /**
     * @generated from field: optional string name = 2;
     */
    name;
    /**
     *
     * DEPRECATED
     *
     * @generated from field: optional string environment = 3;
     */
    environment;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "common.v1.Profile";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 3, name: "environment", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Profile().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Profile().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Profile().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Profile, a, b);
    }
}
exports.Profile = Profile;
//# sourceMappingURL=common_pb.map