// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file security/v1/service.proto (package security.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp, Value } from "@bufbuild/protobuf";
import { Signature } from "../../utils/v1/utils_pb";

/**
 * @generated from message security.v1.Resource
 */
export class Resource extends Message<Resource> {
  /**
   * @generated from oneof security.v1.Resource.config
   */
  config: {
    /**
     * @generated from field: google.protobuf.Value api = 1 [deprecated = true];
     * @deprecated
     */
    value: Value;
    case: "api";
  } | {
    /**
     * @generated from field: security.v1.Resource.Literal literal = 2;
     */
    value: Resource_Literal;
    case: "literal";
  } | {
    /**
     * @generated from field: security.v1.Resource.ApiLiteral api_literal = 5;
     */
    value: Resource_ApiLiteral;
    case: "apiLiteral";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from oneof security.v1.Resource.git_ref
   */
  gitRef: {
    /**
     * @generated from field: string commit_id = 3;
     */
    value: string;
    case: "commitId";
  } | {
    /**
     * @generated from field: string branch_name = 4;
     */
    value: string;
    case: "branchName";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api", kind: "message", T: Value, oneof: "config" },
    { no: 2, name: "literal", kind: "message", T: Resource_Literal, oneof: "config" },
    { no: 5, name: "api_literal", kind: "message", T: Resource_ApiLiteral, oneof: "config" },
    { no: 3, name: "commit_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "git_ref" },
    { no: 4, name: "branch_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "git_ref" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource {
    return new Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJsonString(jsonString, options);
  }

  static equals(a: Resource | PlainMessage<Resource> | undefined, b: Resource | PlainMessage<Resource> | undefined): boolean {
    return proto3.util.equals(Resource, a, b);
  }
}

/**
 * @generated from message security.v1.Resource.Literal
 */
export class Resource_Literal extends Message<Resource_Literal> {
  /**
   * @generated from field: google.protobuf.Value data = 1;
   */
  data?: Value;

  /**
   * @generated from field: optional utils.v1.Signature signature = 2;
   */
  signature?: Signature;

  /**
   * @generated from field: string resource_id = 3;
   */
  resourceId = "";

  /**
   * @generated from field: string organization_id = 4;
   */
  organizationId = "";

  /**
   * @generated from field: google.protobuf.Timestamp last_updated = 5;
   */
  lastUpdated?: Timestamp;

  /**
   * @generated from field: string type = 6;
   */
  type = "";

  /**
   * @generated from field: int32 page_version = 7;
   */
  pageVersion = 0;

  constructor(data?: PartialMessage<Resource_Literal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.Resource.Literal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: Value },
    { no: 2, name: "signature", kind: "message", T: Signature, opt: true },
    { no: 3, name: "resource_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "last_updated", kind: "message", T: Timestamp },
    { no: 6, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "page_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource_Literal {
    return new Resource_Literal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource_Literal {
    return new Resource_Literal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource_Literal {
    return new Resource_Literal().fromJsonString(jsonString, options);
  }

  static equals(a: Resource_Literal | PlainMessage<Resource_Literal> | undefined, b: Resource_Literal | PlainMessage<Resource_Literal> | undefined): boolean {
    return proto3.util.equals(Resource_Literal, a, b);
  }
}

/**
 * @generated from message security.v1.Resource.ApiLiteral
 */
export class Resource_ApiLiteral extends Message<Resource_ApiLiteral> {
  /**
   * @generated from field: google.protobuf.Value data = 1;
   */
  data?: Value;

  constructor(data?: PartialMessage<Resource_ApiLiteral>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.Resource.ApiLiteral";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource_ApiLiteral {
    return new Resource_ApiLiteral().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource_ApiLiteral {
    return new Resource_ApiLiteral().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource_ApiLiteral {
    return new Resource_ApiLiteral().fromJsonString(jsonString, options);
  }

  static equals(a: Resource_ApiLiteral | PlainMessage<Resource_ApiLiteral> | undefined, b: Resource_ApiLiteral | PlainMessage<Resource_ApiLiteral> | undefined): boolean {
    return proto3.util.equals(Resource_ApiLiteral, a, b);
  }
}

/**
 * @generated from message security.v1.SignRequest
 */
export class SignRequest extends Message<SignRequest> {
  /**
   * @generated from field: security.v1.Resource resource = 1;
   */
  resource?: Resource;

  constructor(data?: PartialMessage<SignRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.SignRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resource", kind: "message", T: Resource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignRequest {
    return new SignRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignRequest {
    return new SignRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignRequest {
    return new SignRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignRequest | PlainMessage<SignRequest> | undefined, b: SignRequest | PlainMessage<SignRequest> | undefined): boolean {
    return proto3.util.equals(SignRequest, a, b);
  }
}

/**
 * @generated from message security.v1.SignResponse
 */
export class SignResponse extends Message<SignResponse> {
  /**
   * @generated from field: utils.v1.Signature signature = 1;
   */
  signature?: Signature;

  constructor(data?: PartialMessage<SignResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.SignResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signature", kind: "message", T: Signature },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignResponse {
    return new SignResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignResponse {
    return new SignResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignResponse {
    return new SignResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignResponse | PlainMessage<SignResponse> | undefined, b: SignResponse | PlainMessage<SignResponse> | undefined): boolean {
    return proto3.util.equals(SignResponse, a, b);
  }
}

/**
 * @generated from message security.v1.VerifyRequest
 */
export class VerifyRequest extends Message<VerifyRequest> {
  /**
   * @generated from field: repeated security.v1.Resource resources = 1;
   */
  resources: Resource[] = [];

  constructor(data?: PartialMessage<VerifyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.VerifyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: Resource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyRequest {
    return new VerifyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyRequest {
    return new VerifyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyRequest {
    return new VerifyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyRequest | PlainMessage<VerifyRequest> | undefined, b: VerifyRequest | PlainMessage<VerifyRequest> | undefined): boolean {
    return proto3.util.equals(VerifyRequest, a, b);
  }
}

/**
 * @generated from message security.v1.VerifyResponse
 */
export class VerifyResponse extends Message<VerifyResponse> {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId = "";

  constructor(data?: PartialMessage<VerifyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "security.v1.VerifyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyResponse {
    return new VerifyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyResponse {
    return new VerifyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyResponse {
    return new VerifyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyResponse | PlainMessage<VerifyResponse> | undefined, b: VerifyResponse | PlainMessage<VerifyResponse> | undefined): boolean {
    return proto3.util.equals(VerifyResponse, a, b);
  }
}

