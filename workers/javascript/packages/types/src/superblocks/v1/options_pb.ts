// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file superblocks/v1/options.proto (package superblocks.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message superblocks.v1.Integrations
 */
export class Integrations extends Message<Integrations> {
  /**
   * @generated from field: bool registry = 1;
   */
  registry = false;

  constructor(data?: PartialMessage<Integrations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "superblocks.v1.Integrations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "registry", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Integrations {
    return new Integrations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Integrations {
    return new Integrations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Integrations {
    return new Integrations().fromJsonString(jsonString, options);
  }

  static equals(a: Integrations | PlainMessage<Integrations> | undefined, b: Integrations | PlainMessage<Integrations> | undefined): boolean {
    return proto3.util.equals(Integrations, a, b);
  }
}

/**
 * @generated from message superblocks.v1.IntegrationOptions
 */
export class IntegrationOptions extends Message<IntegrationOptions> {
  /**
   * @generated from field: string pluginType = 2;
   */
  pluginType = "";

  constructor(data?: PartialMessage<IntegrationOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "superblocks.v1.IntegrationOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "pluginType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationOptions {
    return new IntegrationOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationOptions {
    return new IntegrationOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationOptions {
    return new IntegrationOptions().fromJsonString(jsonString, options);
  }

  static equals(a: IntegrationOptions | PlainMessage<IntegrationOptions> | undefined, b: IntegrationOptions | PlainMessage<IntegrationOptions> | undefined): boolean {
    return proto3.util.equals(IntegrationOptions, a, b);
  }
}

