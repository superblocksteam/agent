"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file integration/v1/service.proto (package integration.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Integration = exports.Configuration = exports.GetIntegrationsResponse = exports.GetIntegrationsRequest = exports.GetIntegrationResponse = exports.Kind = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const common_pb_1 = require("../../common/v1/common_pb");
/**
 * @generated from enum integration.v1.Kind
 */
var Kind;
(function (Kind) {
    /**
     * @generated from enum value: KIND_UNSPECIFIED = 0;
     */
    Kind[Kind["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: KIND_PLUGIN = 1;
     */
    Kind[Kind["PLUGIN"] = 1] = "PLUGIN";
    /**
     * @generated from enum value: KIND_SECRET = 2;
     */
    Kind[Kind["SECRET"] = 2] = "SECRET";
})(Kind || (exports.Kind = Kind = {}));
// Retrieve enum metadata with: proto3.getEnumType(Kind)
protobuf_1.proto3.util.setEnumType(Kind, "integration.v1.Kind", [
    { no: 0, name: "KIND_UNSPECIFIED" },
    { no: 1, name: "KIND_PLUGIN" },
    { no: 2, name: "KIND_SECRET" },
]);
/**
 * @generated from message integration.v1.GetIntegrationResponse
 */
class GetIntegrationResponse extends protobuf_1.Message {
    /**
     * @generated from field: integration.v1.Integration data = 1;
     */
    data;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "integration.v1.GetIntegrationResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "data", kind: "message", T: Integration },
    ]);
    static fromBinary(bytes, options) {
        return new GetIntegrationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetIntegrationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetIntegrationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetIntegrationResponse, a, b);
    }
}
exports.GetIntegrationResponse = GetIntegrationResponse;
/**
 * @generated from message integration.v1.GetIntegrationsRequest
 */
class GetIntegrationsRequest extends protobuf_1.Message {
    /**
     * @generated from field: optional common.v1.Profile profile = 1;
     */
    profile;
    /**
     * @generated from field: repeated string ids = 2;
     */
    ids = [];
    /**
     * @generated from field: optional integration.v1.Kind kind = 3;
     */
    kind;
    /**
     * @generated from field: optional string slug = 4;
     */
    slug;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "integration.v1.GetIntegrationsRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "profile", kind: "message", T: common_pb_1.Profile, opt: true },
        { no: 2, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 3, name: "kind", kind: "enum", T: protobuf_1.proto3.getEnumType(Kind), opt: true },
        { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new GetIntegrationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetIntegrationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetIntegrationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetIntegrationsRequest, a, b);
    }
}
exports.GetIntegrationsRequest = GetIntegrationsRequest;
/**
 * @generated from message integration.v1.GetIntegrationsResponse
 */
class GetIntegrationsResponse extends protobuf_1.Message {
    /**
     * @generated from field: repeated integration.v1.Integration data = 1;
     */
    data = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "integration.v1.GetIntegrationsResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "data", kind: "message", T: Integration, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new GetIntegrationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetIntegrationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetIntegrationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetIntegrationsResponse, a, b);
    }
}
exports.GetIntegrationsResponse = GetIntegrationsResponse;
/**
 * @generated from message integration.v1.Configuration
 */
class Configuration extends protobuf_1.Message {
    /**
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from field: string created = 2;
     */
    created = "";
    /**
     * @generated from field: string integration_id = 3;
     */
    integrationId = "";
    /**
     * @generated from field: google.protobuf.Struct configuration = 4;
     */
    configuration;
    /**
     * @generated from field: bool is_default = 5;
     */
    isDefault = false;
    /**
     * @generated from field: repeated string profile_ids = 6;
     */
    profileIds = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "integration.v1.Configuration";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "created", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "integration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "configuration", kind: "message", T: protobuf_1.Struct },
        { no: 5, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "profile_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Configuration().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Configuration().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Configuration().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Configuration, a, b);
    }
}
exports.Configuration = Configuration;
/**
 * @generated from message integration.v1.Integration
 */
class Integration extends protobuf_1.Message {
    /**
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from field: string created = 2;
     */
    created = "";
    /**
     * @generated from field: string updated = 3;
     */
    updated = "";
    /**
     * @generated from field: string name = 4;
     */
    name = "";
    /**
     * @generated from field: string plugin_id = 5;
     */
    pluginId = "";
    /**
     * @generated from field: string organization_id = 6;
     */
    organizationId = "";
    /**
     * @generated from field: string demo_integration_id = 7;
     */
    demoIntegrationId = "";
    /**
     * @generated from field: repeated integration.v1.Configuration configurations = 8;
     */
    configurations = [];
    /**
     * @generated from field: bool is_user_configured = 9;
     */
    isUserConfigured = false;
    /**
     * @generated from field: string slug = 10;
     */
    slug = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "integration.v1.Integration";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "created", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "updated", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "plugin_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "demo_integration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "configurations", kind: "message", T: Configuration, repeated: true },
        { no: 9, name: "is_user_configured", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 10, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Integration().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Integration().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Integration().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Integration, a, b);
    }
}
exports.Integration = Integration;
//# sourceMappingURL=service_pb.map