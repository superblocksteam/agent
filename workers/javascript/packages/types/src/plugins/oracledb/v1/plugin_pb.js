"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/oracledb/v1/plugin.proto (package plugins.oracledb.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin_OracleDbConnection = exports.Plugin = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
/**
 * @generated from message plugins.oracledb.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: string name = 1;
     */
    name = "";
    /**
     * @generated from field: plugins.oracledb.v1.Plugin.OracleDbConnection connection = 2;
     */
    connection;
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 3;
     */
    dynamicWorkflowConfiguration;
    /**
     * @generated from field: plugins.common.v1.SQLExecution run_sql = 4;
     */
    runSql;
    /**
     * @generated from field: plugins.common.v1.SQLBulkEdit bulk_edit = 5;
     */
    bulkEdit;
    /**
     * @generated from field: plugins.common.v1.SQLOperation operation = 6;
     */
    operation = plugin_pb_1.SQLOperation.SQL_OPERATION_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.oracledb.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "connection", kind: "message", T: Plugin_OracleDbConnection },
        { no: 3, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
        { no: 4, name: "run_sql", kind: "message", T: plugin_pb_1.SQLExecution },
        { no: 5, name: "bulk_edit", kind: "message", T: plugin_pb_1.SQLBulkEdit },
        { no: 6, name: "operation", kind: "enum", T: protobuf_1.proto3.getEnumType(plugin_pb_1.SQLOperation) },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
/**
 * @generated from message plugins.oracledb.v1.Plugin.OracleDbConnection
 */
class Plugin_OracleDbConnection extends protobuf_1.Message {
    /**
     * @generated from field: string host_url = 1;
     */
    hostUrl = "";
    /**
     * @generated from field: int32 port = 2;
     */
    port = 0;
    /**
     * @generated from field: string user = 3;
     */
    user = "";
    /**
     * @generated from field: string password = 4;
     */
    password = "";
    /**
     * @generated from field: string database_service = 5;
     */
    databaseService = "";
    /**
     * @generated from field: bool use_tcps = 6;
     */
    useTcps = false;
    /**
     * @generated from field: string connection_type = 7;
     */
    connectionType = "";
    /**
     * @generated from field: string connection_url = 8;
     */
    connectionUrl = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.oracledb.v1.Plugin.OracleDbConnection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "host_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "database_service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "use_tcps", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 7, name: "connection_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "connection_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_OracleDbConnection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_OracleDbConnection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_OracleDbConnection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_OracleDbConnection, a, b);
    }
}
exports.Plugin_OracleDbConnection = Plugin_OracleDbConnection;
//# sourceMappingURL=plugin_pb.map