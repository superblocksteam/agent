"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/graphql/v1/plugin.proto (package plugins.graphql.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin = exports.Custom = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../../common/v1/plugin_pb");
/**
 * @generated from message plugins.graphql.v1.Custom
 */
class Custom extends protobuf_1.Message {
    /**
     * @generated from field: common.v1.Property variables = 1;
     */
    variables;
    /**
     * @generated from field: common.v1.Property requestFormat = 2;
     */
    requestFormat;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.graphql.v1.Custom";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "variables", kind: "message", T: plugin_pb_1.Property },
        { no: 2, name: "requestFormat", kind: "message", T: plugin_pb_1.Property },
    ]);
    static fromBinary(bytes, options) {
        return new Custom().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Custom().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Custom().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Custom, a, b);
    }
}
exports.Custom = Custom;
/**
 * @generated from message plugins.graphql.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: string path = 1;
     */
    path = "";
    /**
     * @generated from field: repeated common.v1.Property headers = 2;
     */
    headers = [];
    /**
     * @generated from field: string body = 3;
     */
    body = "";
    /**
     * @generated from field: optional plugins.graphql.v1.Custom custom = 4;
     */
    custom;
    /**
     * @generated from field: common.v1.SuperblocksMetadata superblocksMetadata = 5;
     */
    superblocksMetadata;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.graphql.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "headers", kind: "message", T: plugin_pb_1.Property, repeated: true },
        { no: 3, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "custom", kind: "message", T: Custom, opt: true },
        { no: 5, name: "superblocksMetadata", kind: "message", T: plugin_pb_1.SuperblocksMetadata },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
//# sourceMappingURL=plugin_pb.map