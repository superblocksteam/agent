"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/athena/v1/plugin.proto (package plugins.athena.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin = exports.Connection_DateFolderType = exports.Connection = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
/**
 * @generated from message plugins.athena.v1.Connection
 */
class Connection extends protobuf_1.Message {
    /**
     * @generated from field: optional string workgroup_name = 1;
     */
    workgroupName;
    /**
     * @generated from field: bool override_s3_output_location = 2;
     */
    overrideS3OutputLocation = false;
    /**
     * @generated from field: optional string s3_output_location = 3;
     */
    s3OutputLocation;
    /**
     * @generated from field: optional plugins.athena.v1.Connection.DateFolderType s3_output_location_suffix = 4;
     */
    s3OutputLocationSuffix;
    /**
     * @generated from field: string database_name = 5;
     */
    databaseName = "";
    /**
     * @generated from field: plugins.common.v1.AWSConfig aws_config = 6;
     */
    awsConfig;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.athena.v1.Connection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "workgroup_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "override_s3_output_location", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 3, name: "s3_output_location", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 4, name: "s3_output_location_suffix", kind: "enum", T: protobuf_1.proto3.getEnumType(Connection_DateFolderType), opt: true },
        { no: 5, name: "database_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "aws_config", kind: "message", T: plugin_pb_1.AWSConfig },
    ]);
    static fromBinary(bytes, options) {
        return new Connection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Connection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Connection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Connection, a, b);
    }
}
exports.Connection = Connection;
/**
 * @generated from enum plugins.athena.v1.Connection.DateFolderType
 */
var Connection_DateFolderType;
(function (Connection_DateFolderType) {
    /**
     * @generated from enum value: DATE_FOLDER_TYPE_UNSPECIFIED = 0;
     */
    Connection_DateFolderType[Connection_DateFolderType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: DATE_FOLDER_TYPE_YYYY = 1;
     */
    Connection_DateFolderType[Connection_DateFolderType["YYYY"] = 1] = "YYYY";
    /**
     * @generated from enum value: DATE_FOLDER_TYPE_YYYYMM = 2;
     */
    Connection_DateFolderType[Connection_DateFolderType["YYYYMM"] = 2] = "YYYYMM";
    /**
     * @generated from enum value: DATE_FOLDER_TYPE_YYYYMMDD = 3;
     */
    Connection_DateFolderType[Connection_DateFolderType["YYYYMMDD"] = 3] = "YYYYMMDD";
})(Connection_DateFolderType || (exports.Connection_DateFolderType = Connection_DateFolderType = {}));
// Retrieve enum metadata with: proto3.getEnumType(Connection_DateFolderType)
protobuf_1.proto3.util.setEnumType(Connection_DateFolderType, "plugins.athena.v1.Connection.DateFolderType", [
    { no: 0, name: "DATE_FOLDER_TYPE_UNSPECIFIED" },
    { no: 1, name: "DATE_FOLDER_TYPE_YYYY" },
    { no: 2, name: "DATE_FOLDER_TYPE_YYYYMM" },
    { no: 3, name: "DATE_FOLDER_TYPE_YYYYMMDD" },
]);
/**
 * @generated from message plugins.athena.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: optional string name = 1;
     */
    name;
    /**
     * @generated from field: plugins.athena.v1.Connection connection = 2;
     */
    connection;
    /**
     * @generated from field: plugins.common.v1.SQLExecution run_sql = 3;
     */
    runSql;
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 4;
     */
    dynamicWorkflowConfiguration;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.athena.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "connection", kind: "message", T: Connection },
        { no: 3, name: "run_sql", kind: "message", T: plugin_pb_1.SQLExecution },
        { no: 4, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
//# sourceMappingURL=plugin_pb.map