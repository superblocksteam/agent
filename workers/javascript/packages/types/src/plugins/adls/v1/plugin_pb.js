"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/adls/v1/plugin.proto (package plugins.adls.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin_Metadata = exports.Plugin_DeleteFile = exports.Plugin_DownloadFile = exports.Plugin_UploadFile = exports.Plugin_ListDirectoryContents = exports.Plugin_DeleteDirectory = exports.Plugin_RenameDirectory = exports.Plugin_CreateDirectory = exports.Plugin_CreateContainer = exports.Plugin_AdlsConnection = exports.Plugin = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
const auth_pb_1 = require("../../common/v1/auth_pb");
/**
 * @generated from message plugins.adls.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: optional string name = 1;
     */
    name;
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 2;
     */
    dynamicWorkflowConfiguration;
    /**
     * @generated from field: plugins.adls.v1.Plugin.AdlsConnection connection = 3;
     */
    connection;
    /**
     * @generated from oneof plugins.adls.v1.Plugin.adls_action
     */
    adlsAction = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
        { no: 3, name: "connection", kind: "message", T: Plugin_AdlsConnection },
        { no: 4, name: "create_container", kind: "message", T: Plugin_CreateContainer, oneof: "adls_action" },
        { no: 5, name: "create_directory", kind: "message", T: Plugin_CreateDirectory, oneof: "adls_action" },
        { no: 6, name: "rename_directory", kind: "message", T: Plugin_RenameDirectory, oneof: "adls_action" },
        { no: 7, name: "delete_directory", kind: "message", T: Plugin_DeleteDirectory, oneof: "adls_action" },
        { no: 8, name: "list_directory_contents", kind: "message", T: Plugin_ListDirectoryContents, oneof: "adls_action" },
        { no: 9, name: "upload_file", kind: "message", T: Plugin_UploadFile, oneof: "adls_action" },
        { no: 10, name: "download_file", kind: "message", T: Plugin_DownloadFile, oneof: "adls_action" },
        { no: 11, name: "delete_file", kind: "message", T: Plugin_DeleteFile, oneof: "adls_action" },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
/**
 * We need to repeat that it's Adls because of the schema checker that's built
 * based off of these types. It errors out when there is a duplicate type
 * name.
 *
 * @generated from message plugins.adls.v1.Plugin.AdlsConnection
 */
class Plugin_AdlsConnection extends protobuf_1.Message {
    /**
     * @generated from field: string account_name = 1;
     */
    accountName = "";
    /**
     * @generated from field: string tenant = 2;
     */
    tenant = "";
    /**
     * @generated from field: plugins.common.v1.Azure auth = 3;
     */
    auth;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.AdlsConnection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "account_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "tenant", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "auth", kind: "message", T: auth_pb_1.Azure },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_AdlsConnection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_AdlsConnection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_AdlsConnection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_AdlsConnection, a, b);
    }
}
exports.Plugin_AdlsConnection = Plugin_AdlsConnection;
/**
 * Actions
 *
 * @generated from message plugins.adls.v1.Plugin.CreateContainer
 */
class Plugin_CreateContainer extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 2;
     */
    fileSystem = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.CreateContainer";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 2, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CreateContainer().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CreateContainer().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CreateContainer().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CreateContainer, a, b);
    }
}
exports.Plugin_CreateContainer = Plugin_CreateContainer;
/**
 * @generated from message plugins.adls.v1.Plugin.CreateDirectory
 */
class Plugin_CreateDirectory extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.CreateDirectory";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CreateDirectory().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CreateDirectory().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CreateDirectory().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CreateDirectory, a, b);
    }
}
exports.Plugin_CreateDirectory = Plugin_CreateDirectory;
/**
 * @generated from message plugins.adls.v1.Plugin.RenameDirectory
 */
class Plugin_RenameDirectory extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    /**
     * @generated from field: string new_path = 3;
     */
    newPath = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.RenameDirectory";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "new_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_RenameDirectory().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_RenameDirectory().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_RenameDirectory().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_RenameDirectory, a, b);
    }
}
exports.Plugin_RenameDirectory = Plugin_RenameDirectory;
/**
 * @generated from message plugins.adls.v1.Plugin.DeleteDirectory
 */
class Plugin_DeleteDirectory extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.DeleteDirectory";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_DeleteDirectory().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_DeleteDirectory().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_DeleteDirectory().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_DeleteDirectory, a, b);
    }
}
exports.Plugin_DeleteDirectory = Plugin_DeleteDirectory;
/**
 * @generated from message plugins.adls.v1.Plugin.ListDirectoryContents
 */
class Plugin_ListDirectoryContents extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.ListDirectoryContents";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_ListDirectoryContents().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_ListDirectoryContents().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_ListDirectoryContents().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_ListDirectoryContents, a, b);
    }
}
exports.Plugin_ListDirectoryContents = Plugin_ListDirectoryContents;
/**
 * @generated from message plugins.adls.v1.Plugin.UploadFile
 */
class Plugin_UploadFile extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    /**
     * @generated from field: string content = 3;
     */
    content = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.UploadFile";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_UploadFile().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_UploadFile().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_UploadFile().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_UploadFile, a, b);
    }
}
exports.Plugin_UploadFile = Plugin_UploadFile;
/**
 * @generated from message plugins.adls.v1.Plugin.DownloadFile
 */
class Plugin_DownloadFile extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.DownloadFile";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_DownloadFile().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_DownloadFile().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_DownloadFile().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_DownloadFile, a, b);
    }
}
exports.Plugin_DownloadFile = Plugin_DownloadFile;
/**
 * @generated from message plugins.adls.v1.Plugin.DeleteFile
 */
class Plugin_DeleteFile extends protobuf_1.Message {
    /**
     * @generated from field: string file_system = 1;
     */
    fileSystem = "";
    /**
     * @generated from field: string path = 2;
     */
    path = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.DeleteFile";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_system", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_DeleteFile().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_DeleteFile().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_DeleteFile().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_DeleteFile, a, b);
    }
}
exports.Plugin_DeleteFile = Plugin_DeleteFile;
/**
 * @generated from message plugins.adls.v1.Plugin.Metadata
 */
class Plugin_Metadata extends protobuf_1.Message {
    /**
     * @generated from field: repeated string file_systems = 1;
     */
    fileSystems = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.adls.v1.Plugin.Metadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "file_systems", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Metadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Metadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Metadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Metadata, a, b);
    }
}
exports.Plugin_Metadata = Plugin_Metadata;
//# sourceMappingURL=plugin_pb.map