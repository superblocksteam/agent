"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/gsheets/v1/plugin.proto (package plugins.gsheets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin = exports.SuperblocksMetadata = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message plugins.gsheets.v1.SuperblocksMetadata
 */
class SuperblocksMetadata extends protobuf_1.Message {
    /**
     * @generated from field: string pluginVersion = 1;
     */
    pluginVersion = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gsheets.v1.SuperblocksMetadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "pluginVersion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SuperblocksMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SuperblocksMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SuperblocksMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SuperblocksMetadata, a, b);
    }
}
exports.SuperblocksMetadata = SuperblocksMetadata;
/**
 * @generated from message plugins.gsheets.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: string spreadsheetId = 1;
     */
    spreadsheetId = "";
    /**
     * @generated from field: string sheetTitle = 2;
     */
    sheetTitle = "";
    /**
     * @generated from field: optional string range = 3;
     */
    range;
    /**
     * Super confusing but these are potentially bindings. Or stringified int
     * If this was not a binding, it would be best to keep it int32 here
     *
     * @generated from field: optional string rowNumber = 4;
     */
    rowNumber;
    /**
     * @generated from field: bool extractFirstRowHeader = 5;
     */
    extractFirstRowHeader = false;
    /**
     * Same as above comment
     *
     * @generated from field: optional string headerRowNumber = 6;
     */
    headerRowNumber;
    /**
     * @generated from field: optional string format = 7;
     */
    format;
    /**
     * @generated from field: optional string data = 8;
     */
    data;
    /**
     * @generated from field: bool preserveHeaderRow = 9;
     */
    preserveHeaderRow = false;
    /**
     * @generated from field: bool includeHeaderRow = 10;
     */
    includeHeaderRow = false;
    /**
     * @generated from field: optional string action = 11;
     */
    action;
    /**
     * @generated from field: optional string writeToDestinationType = 12;
     */
    writeToDestinationType;
    /**
     * @generated from field: optional string body = 13;
     */
    body;
    /**
     * @generated from field: plugins.gsheets.v1.SuperblocksMetadata superblocksMetadata = 14;
     */
    superblocksMetadata;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gsheets.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "spreadsheetId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "sheetTitle", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "range", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 4, name: "rowNumber", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 5, name: "extractFirstRowHeader", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "headerRowNumber", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 7, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 8, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 9, name: "preserveHeaderRow", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 10, name: "includeHeaderRow", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 11, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 12, name: "writeToDestinationType", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 13, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 14, name: "superblocksMetadata", kind: "message", T: SuperblocksMetadata },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
//# sourceMappingURL=plugin_pb.map