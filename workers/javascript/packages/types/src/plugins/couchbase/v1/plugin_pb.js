"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/couchbase/v1/plugin.proto (package plugins.couchbase.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin_CouchbaseRemove = exports.Plugin_CouchbaseGet = exports.Plugin_CouchbaseInsert = exports.Plugin_CouchbaseConnection = exports.Plugin_CouchbaseIdentifier = exports.Plugin_CouchbaseEndpoint = exports.Plugin = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
/**
 * @generated from message plugins.couchbase.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: string name = 1;
     */
    name = "";
    /**
     * @generated from field: plugins.couchbase.v1.Plugin.CouchbaseConnection connection = 2;
     */
    connection;
    /**
     * TODO (jason4012) we should unify the interface
     * so that endpoint doesn't have to be always be set here for SSH tunneling
     *
     * @generated from field: plugins.couchbase.v1.Plugin.CouchbaseEndpoint endpoint = 3;
     */
    endpoint;
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 4;
     */
    dynamicWorkflowConfiguration;
    /**
     * @generated from field: plugins.common.v1.SSHConfiguration tunnel = 5;
     */
    tunnel;
    /**
     * @generated from oneof plugins.couchbase.v1.Plugin.couchbase_action
     */
    couchbaseAction = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "connection", kind: "message", T: Plugin_CouchbaseConnection },
        { no: 3, name: "endpoint", kind: "message", T: Plugin_CouchbaseEndpoint },
        { no: 4, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
        { no: 5, name: "tunnel", kind: "message", T: plugin_pb_1.SSHConfiguration },
        { no: 6, name: "run_sql", kind: "message", T: plugin_pb_1.SQLExecution, oneof: "couchbase_action" },
        { no: 7, name: "insert", kind: "message", T: Plugin_CouchbaseInsert, oneof: "couchbase_action" },
        { no: 8, name: "get", kind: "message", T: Plugin_CouchbaseGet, oneof: "couchbase_action" },
        { no: 9, name: "remove", kind: "message", T: Plugin_CouchbaseRemove, oneof: "couchbase_action" },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseEndpoint
 */
class Plugin_CouchbaseEndpoint extends protobuf_1.Message {
    /**
     * @generated from field: string host = 1;
     */
    host = "";
    /**
     * @generated from field: int32 port = 2;
     */
    port = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseEndpoint";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseEndpoint().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseEndpoint().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseEndpoint().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseEndpoint, a, b);
    }
}
exports.Plugin_CouchbaseEndpoint = Plugin_CouchbaseEndpoint;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseIdentifier
 */
class Plugin_CouchbaseIdentifier extends protobuf_1.Message {
    /**
     * @generated from field: string scope = 1;
     */
    scope = "";
    /**
     * @generated from field: string collection = 2;
     */
    collection = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseIdentifier";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "collection", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseIdentifier().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseIdentifier().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseIdentifier().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseIdentifier, a, b);
    }
}
exports.Plugin_CouchbaseIdentifier = Plugin_CouchbaseIdentifier;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseConnection
 */
class Plugin_CouchbaseConnection extends protobuf_1.Message {
    /**
     * @generated from field: string user = 2;
     */
    user = "";
    /**
     * @generated from field: string password = 3;
     */
    password = "";
    /**
     * @generated from field: string bucket = 4;
     */
    bucket = "";
    /**
     * @generated from field: bool use_tls = 5;
     */
    useTls = false;
    /**
     * @generated from field: optional string url = 6;
     */
    url;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseConnection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 2, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "use_tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseConnection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseConnection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseConnection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseConnection, a, b);
    }
}
exports.Plugin_CouchbaseConnection = Plugin_CouchbaseConnection;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseInsert
 */
class Plugin_CouchbaseInsert extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string value = 2;
     */
    value = "";
    /**
     * @generated from field: plugins.couchbase.v1.Plugin.CouchbaseIdentifier identifier = 3;
     */
    identifier;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseInsert";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "identifier", kind: "message", T: Plugin_CouchbaseIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseInsert().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseInsert().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseInsert().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseInsert, a, b);
    }
}
exports.Plugin_CouchbaseInsert = Plugin_CouchbaseInsert;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseGet
 */
class Plugin_CouchbaseGet extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: plugins.couchbase.v1.Plugin.CouchbaseIdentifier identifier = 2;
     */
    identifier;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseGet";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "identifier", kind: "message", T: Plugin_CouchbaseIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseGet().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseGet().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseGet().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseGet, a, b);
    }
}
exports.Plugin_CouchbaseGet = Plugin_CouchbaseGet;
/**
 * @generated from message plugins.couchbase.v1.Plugin.CouchbaseRemove
 */
class Plugin_CouchbaseRemove extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: plugins.couchbase.v1.Plugin.CouchbaseIdentifier identifier = 2;
     */
    identifier;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.couchbase.v1.Plugin.CouchbaseRemove";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "identifier", kind: "message", T: Plugin_CouchbaseIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_CouchbaseRemove().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_CouchbaseRemove().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_CouchbaseRemove().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_CouchbaseRemove, a, b);
    }
}
exports.Plugin_CouchbaseRemove = Plugin_CouchbaseRemove;
//# sourceMappingURL=plugin_pb.map