// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/restapiintegration/v1/plugin.proto (package plugins.restapiintegration.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Property, SuperblocksMetadata } from "../../../common/v1/plugin_pb";

/**
 * @generated from message plugins.restapiintegration.v1.Plugin
 */
export class Plugin extends Message<Plugin> {
  /**
   * @generated from field: string httpMethod = 1;
   */
  httpMethod = "";

  /**
   * @generated from field: string responseType = 2;
   */
  responseType = "";

  /**
   * @generated from field: repeated common.v1.Property headers = 3;
   */
  headers: Property[] = [];

  /**
   * @generated from field: repeated common.v1.Property params = 4;
   */
  params: Property[] = [];

  /**
   * @generated from field: string bodyType = 5;
   */
  bodyType = "";

  /**
   * @generated from field: string body = 6;
   */
  body = "";

  /**
   * @generated from field: string jsonBody = 7;
   */
  jsonBody = "";

  /**
   * @generated from field: repeated common.v1.Property formData = 8;
   */
  formData: Property[] = [];

  /**
   * @generated from field: string fileFormKey = 9;
   */
  fileFormKey = "";

  /**
   * @generated from field: string fileName = 10;
   */
  fileName = "";

  /**
   * @generated from field: string urlBase = 11;
   */
  urlBase = "";

  /**
   * @generated from field: string urlPath = 12;
   */
  urlPath = "";

  /**
   * @generated from field: string authType = 13;
   */
  authType = "";

  /**
   * @generated from field: common.v1.SuperblocksMetadata superblocksMetadata = 14;
   */
  superblocksMetadata?: SuperblocksMetadata;

  /**
   * OpenAPI fields
   *
   * @generated from field: string openApiAction = 15;
   */
  openApiAction = "";

  /**
   * @generated from field: string openApiSpecRef = 16;
   */
  openApiSpecRef = "";

  /**
   * @generated from field: optional string openApiTenantName = 17;
   */
  openApiTenantName?: string;

  constructor(data?: PartialMessage<Plugin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "plugins.restapiintegration.v1.Plugin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "httpMethod", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "responseType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "headers", kind: "message", T: Property, repeated: true },
    { no: 4, name: "params", kind: "message", T: Property, repeated: true },
    { no: 5, name: "bodyType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "jsonBody", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "formData", kind: "message", T: Property, repeated: true },
    { no: 9, name: "fileFormKey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "fileName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "urlBase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "urlPath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "authType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "superblocksMetadata", kind: "message", T: SuperblocksMetadata },
    { no: 15, name: "openApiAction", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "openApiSpecRef", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "openApiTenantName", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Plugin {
    return new Plugin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Plugin {
    return new Plugin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Plugin {
    return new Plugin().fromJsonString(jsonString, options);
  }

  static equals(a: Plugin | PlainMessage<Plugin> | undefined, b: Plugin | PlainMessage<Plugin> | undefined): boolean {
    return proto3.util.equals(Plugin, a, b);
  }
}

