"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/gcs/v1/plugin.proto (package plugins.gcs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin = exports.Custom = exports.Property = exports.SuperblocksMetadata = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message plugins.gcs.v1.SuperblocksMetadata
 */
class SuperblocksMetadata extends protobuf_1.Message {
    /**
     * @generated from field: string pluginVersion = 1;
     */
    pluginVersion = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gcs.v1.SuperblocksMetadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "pluginVersion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SuperblocksMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SuperblocksMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SuperblocksMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SuperblocksMetadata, a, b);
    }
}
exports.SuperblocksMetadata = SuperblocksMetadata;
/**
 * @generated from message plugins.gcs.v1.Property
 */
class Property extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 value = 2;
     */
    value = 0;
    /**
     * @generated from field: bool editable = 3;
     */
    editable = false;
    /**
     * @generated from field: bool internal = 4;
     */
    internal = false;
    /**
     * @generated from field: string description = 5;
     */
    description = "";
    /**
     * @generated from field: bool mandatory = 6;
     */
    mandatory = false;
    /**
     * @generated from field: string type = 7;
     */
    type = "";
    /**
     * @generated from field: string defaultValue = 8;
     */
    defaultValue = "";
    /**
     * @generated from field: string minRange = 9;
     */
    minRange = "";
    /**
     * @generated from field: string maxRange = 10;
     */
    maxRange = "";
    /**
     * @generated from field: repeated string valueOptions = 11;
     */
    valueOptions = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gcs.v1.Property";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "editable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 4, name: "internal", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "mandatory", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 7, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "defaultValue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "minRange", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "maxRange", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "valueOptions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Property().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Property().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Property().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Property, a, b);
    }
}
exports.Property = Property;
/**
 * @generated from message plugins.gcs.v1.Custom
 */
class Custom extends protobuf_1.Message {
    /**
     * @generated from field: plugins.gcs.v1.Property presignedExpiration = 1;
     */
    presignedExpiration;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gcs.v1.Custom";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "presignedExpiration", kind: "message", T: Property },
    ]);
    static fromBinary(bytes, options) {
        return new Custom().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Custom().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Custom().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Custom, a, b);
    }
}
exports.Custom = Custom;
/**
 * @generated from message plugins.gcs.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: string resource = 1;
     */
    resource = "";
    /**
     * @generated from field: string resourceType = 2;
     */
    resourceType = "";
    /**
     * @generated from field: string action = 3;
     */
    action = "";
    /**
     * @generated from field: string path = 4;
     */
    path = "";
    /**
     * @generated from field: string prefix = 5;
     */
    prefix = "";
    /**
     * @generated from field: string body = 6;
     */
    body = "";
    /**
     * @generated from field: string fileObjects = 7;
     */
    fileObjects = "";
    /**
     * @generated from field: string responseType = 8;
     */
    responseType = "";
    /**
     * @generated from field: plugins.gcs.v1.Custom custom = 9;
     */
    custom;
    /**
     * @generated from field: plugins.gcs.v1.SuperblocksMetadata superblocksMetadata = 10;
     */
    superblocksMetadata;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.gcs.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "resource", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "resourceType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "fileObjects", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "responseType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "custom", kind: "message", T: Custom },
        { no: 10, name: "superblocksMetadata", kind: "message", T: SuperblocksMetadata },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
//# sourceMappingURL=plugin_pb.map