"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/smtp/v1/plugin.proto (package plugins.smtp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin_SmtpConnection = exports.Plugin = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
/**
 * @generated from message plugins.smtp.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: optional string name = 1;
     */
    name;
    /**
     * @generated from field: plugins.smtp.v1.Plugin.SmtpConnection connection = 2;
     */
    connection;
    /**
     * @generated from field: string from = 3;
     */
    from = "";
    /**
     * @generated from field: string reply_to = 4;
     */
    replyTo = "";
    /**
     * @generated from field: string to = 5;
     */
    to = "";
    /**
     * @generated from field: string cc = 6;
     */
    cc = "";
    /**
     * @generated from field: string bcc = 7;
     */
    bcc = "";
    /**
     * @generated from field: string subject = 8;
     */
    subject = "";
    /**
     * @generated from field: string body = 9;
     */
    body = "";
    /**
     * stringified representation of a JSON array of objects with fields content, name, and type
     *
     * @generated from field: string attachments = 10;
     */
    attachments = "";
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 11;
     */
    dynamicWorkflowConfiguration;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.smtp.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "connection", kind: "message", T: Plugin_SmtpConnection },
        { no: 3, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "reply_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "cc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "bcc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "attachments", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
/**
 * @generated from message plugins.smtp.v1.Plugin.SmtpConnection
 */
class Plugin_SmtpConnection extends protobuf_1.Message {
    /**
     * @generated from field: string host = 1;
     */
    host = "";
    /**
     * @generated from field: int32 port = 2;
     */
    port = 0;
    /**
     * @generated from field: string username = 3;
     */
    username = "";
    /**
     * @generated from field: string password = 4;
     */
    password = "";
    /**
     * @generated from field: optional bool secure = 5;
     */
    secure;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.smtp.v1.Plugin.SmtpConnection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "secure", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_SmtpConnection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_SmtpConnection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_SmtpConnection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_SmtpConnection, a, b);
    }
}
exports.Plugin_SmtpConnection = Plugin_SmtpConnection;
//# sourceMappingURL=plugin_pb.map