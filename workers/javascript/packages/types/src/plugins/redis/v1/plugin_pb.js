"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/redis/v1/plugin.proto (package plugins.redis.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin_Ttl = exports.Plugin_Expire_Option = exports.Plugin_Expire = exports.Plugin_Zscore = exports.Plugin_Zrem = exports.Plugin_Zrank = exports.Plugin_Zrange = exports.Plugin_Zcount = exports.Plugin_Zcard = exports.Plugin_Zadd = exports.Plugin_Srem = exports.Plugin_Srandmember = exports.Plugin_Sismember = exports.Plugin_Smembers = exports.Plugin_Scard = exports.Plugin_Sadd = exports.Plugin_Lrange = exports.Plugin_Lrem = exports.Plugin_Lpush = exports.Plugin_Llen = exports.Plugin_Lindex = exports.Plugin_Hvals = exports.Plugin_Hkeys = exports.Plugin_Hdel = exports.Plugin_Hlen = exports.Plugin_Hsetnx = exports.Plugin_Hset = exports.Plugin_Hgetall = exports.Plugin_Hmget = exports.Plugin_Hget = exports.Plugin_Mget = exports.Plugin_Keys = exports.Plugin_Del = exports.Plugin_Set = exports.Plugin_Get = exports.Plugin_Connection_Fields = exports.Plugin_Connection_Url = exports.Plugin_Connection = exports.Plugin_Structured = exports.Plugin_Raw_Singleton = exports.Plugin_Raw = exports.Plugin = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const plugin_pb_1 = require("../../common/v1/plugin_pb");
/**
 * @generated from message plugins.redis.v1.Plugin
 */
class Plugin extends protobuf_1.Message {
    /**
     * @generated from field: optional string name = 1;
     */
    name;
    /**
     * @generated from field: plugins.redis.v1.Plugin.Connection connection = 2;
     */
    connection;
    /**
     * @generated from oneof plugins.redis.v1.Plugin.command_type
     */
    commandType = { case: undefined };
    /**
     * @generated from field: optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 5;
     */
    dynamicWorkflowConfiguration;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 2, name: "connection", kind: "message", T: Plugin_Connection },
        { no: 3, name: "raw", kind: "message", T: Plugin_Raw, oneof: "command_type" },
        { no: 4, name: "structured", kind: "message", T: Plugin_Structured, oneof: "command_type" },
        { no: 5, name: "dynamic_workflow_configuration", kind: "message", T: plugin_pb_1.DynamicWorkflowConfiguration, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin, a, b);
    }
}
exports.Plugin = Plugin;
/**
 * @generated from message plugins.redis.v1.Plugin.Raw
 */
class Plugin_Raw extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.redis.v1.Plugin.Raw.action
     */
    action = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Raw";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "singleton", kind: "message", T: Plugin_Raw_Singleton, oneof: "action" },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Raw().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Raw().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Raw().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Raw, a, b);
    }
}
exports.Plugin_Raw = Plugin_Raw;
/**
 * @generated from message plugins.redis.v1.Plugin.Raw.Singleton
 */
class Plugin_Raw_Singleton extends protobuf_1.Message {
    /**
     * @generated from field: string query = 1;
     */
    query = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Raw.Singleton";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Raw_Singleton().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Raw_Singleton().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Raw_Singleton().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Raw_Singleton, a, b);
    }
}
exports.Plugin_Raw_Singleton = Plugin_Raw_Singleton;
/**
 * @generated from message plugins.redis.v1.Plugin.Structured
 */
class Plugin_Structured extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.redis.v1.Plugin.Structured.action
     */
    action = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Structured";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 6, name: "get", kind: "message", T: Plugin_Get, oneof: "action" },
        { no: 7, name: "set", kind: "message", T: Plugin_Set, oneof: "action" },
        { no: 8, name: "del", kind: "message", T: Plugin_Del, oneof: "action" },
        { no: 9, name: "keys", kind: "message", T: Plugin_Keys, oneof: "action" },
        { no: 10, name: "mget", kind: "message", T: Plugin_Mget, oneof: "action" },
        { no: 11, name: "hget", kind: "message", T: Plugin_Hget, oneof: "action" },
        { no: 12, name: "hmget", kind: "message", T: Plugin_Hmget, oneof: "action" },
        { no: 13, name: "hgetall", kind: "message", T: Plugin_Hgetall, oneof: "action" },
        { no: 14, name: "hset", kind: "message", T: Plugin_Hset, oneof: "action" },
        { no: 15, name: "hsetnx", kind: "message", T: Plugin_Hsetnx, oneof: "action" },
        { no: 16, name: "hlen", kind: "message", T: Plugin_Hlen, oneof: "action" },
        { no: 17, name: "hdel", kind: "message", T: Plugin_Hdel, oneof: "action" },
        { no: 18, name: "hkeys", kind: "message", T: Plugin_Hkeys, oneof: "action" },
        { no: 19, name: "hvals", kind: "message", T: Plugin_Hvals, oneof: "action" },
        { no: 20, name: "lindex", kind: "message", T: Plugin_Lindex, oneof: "action" },
        { no: 21, name: "llen", kind: "message", T: Plugin_Llen, oneof: "action" },
        { no: 22, name: "lpush", kind: "message", T: Plugin_Lpush, oneof: "action" },
        { no: 23, name: "lrem", kind: "message", T: Plugin_Lrem, oneof: "action" },
        { no: 24, name: "lrange", kind: "message", T: Plugin_Lrange, oneof: "action" },
        { no: 25, name: "sadd", kind: "message", T: Plugin_Sadd, oneof: "action" },
        { no: 26, name: "scard", kind: "message", T: Plugin_Scard, oneof: "action" },
        { no: 27, name: "smembers", kind: "message", T: Plugin_Smembers, oneof: "action" },
        { no: 28, name: "sismember", kind: "message", T: Plugin_Sismember, oneof: "action" },
        { no: 29, name: "srandmember", kind: "message", T: Plugin_Srandmember, oneof: "action" },
        { no: 30, name: "srem", kind: "message", T: Plugin_Srem, oneof: "action" },
        { no: 31, name: "zadd", kind: "message", T: Plugin_Zadd, oneof: "action" },
        { no: 32, name: "zcard", kind: "message", T: Plugin_Zcard, oneof: "action" },
        { no: 33, name: "zcount", kind: "message", T: Plugin_Zcount, oneof: "action" },
        { no: 34, name: "zrange", kind: "message", T: Plugin_Zrange, oneof: "action" },
        { no: 35, name: "zrank", kind: "message", T: Plugin_Zrank, oneof: "action" },
        { no: 36, name: "zrem", kind: "message", T: Plugin_Zrem, oneof: "action" },
        { no: 37, name: "zscore", kind: "message", T: Plugin_Zscore, oneof: "action" },
        { no: 38, name: "expire", kind: "message", T: Plugin_Expire, oneof: "action" },
        { no: 39, name: "ttl", kind: "message", T: Plugin_Ttl, oneof: "action" },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Structured().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Structured().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Structured().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Structured, a, b);
    }
}
exports.Plugin_Structured = Plugin_Structured;
/**
 * NOTE: (joey) this does not have to be a separate message right now
 * 1. this follows the "connection" pattern
 * 2. this lets us easily add shared connection fields in the future
 *
 * @generated from message plugins.redis.v1.Plugin.Connection
 */
class Plugin_Connection extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.redis.v1.Plugin.Connection.connection_type
     */
    connectionType = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Connection";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "url", kind: "message", T: Plugin_Connection_Url, oneof: "connection_type" },
        { no: 2, name: "fields", kind: "message", T: Plugin_Connection_Fields, oneof: "connection_type" },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Connection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Connection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Connection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Connection, a, b);
    }
}
exports.Plugin_Connection = Plugin_Connection;
/**
 * @generated from message plugins.redis.v1.Plugin.Connection.Url
 */
class Plugin_Connection_Url extends protobuf_1.Message {
    /**
     * @generated from field: string url_string = 1;
     */
    urlString = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Connection.Url";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "url_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Connection_Url().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Connection_Url().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Connection_Url().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Connection_Url, a, b);
    }
}
exports.Plugin_Connection_Url = Plugin_Connection_Url;
/**
 * @generated from message plugins.redis.v1.Plugin.Connection.Fields
 */
class Plugin_Connection_Fields extends protobuf_1.Message {
    /**
     * @generated from field: string host = 1;
     */
    host = "";
    /**
     * @generated from field: int32 port = 2;
     */
    port = 0;
    /**
     * @generated from field: optional int32 database_number = 3;
     */
    databaseNumber;
    /**
     * @generated from field: optional string username = 4;
     */
    username;
    /**
     * @generated from field: optional string password = 5;
     */
    password;
    /**
     * @generated from field: bool enable_ssl = 6;
     */
    enableSsl = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Connection.Fields";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "database_number", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
        { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 6, name: "enable_ssl", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Connection_Fields().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Connection_Fields().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Connection_Fields().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Connection_Fields, a, b);
    }
}
exports.Plugin_Connection_Fields = Plugin_Connection_Fields;
/**
 * @generated from message plugins.redis.v1.Plugin.Get
 */
class Plugin_Get extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Get";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Get().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Get().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Get().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Get, a, b);
    }
}
exports.Plugin_Get = Plugin_Get;
/**
 * @generated from message plugins.redis.v1.Plugin.Set
 */
class Plugin_Set extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string value = 2;
     */
    value = "";
    /**
     * @generated from field: optional int32 expiration_ms = 3;
     */
    expirationMs;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Set";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "expiration_ms", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Set().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Set().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Set().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Set, a, b);
    }
}
exports.Plugin_Set = Plugin_Set;
/**
 * @generated from message plugins.redis.v1.Plugin.Del
 */
class Plugin_Del extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Del";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Del().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Del().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Del().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Del, a, b);
    }
}
exports.Plugin_Del = Plugin_Del;
/**
 * @generated from message plugins.redis.v1.Plugin.Keys
 */
class Plugin_Keys extends protobuf_1.Message {
    /**
     * @generated from field: string pattern = 1;
     */
    pattern = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Keys";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Keys().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Keys().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Keys().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Keys, a, b);
    }
}
exports.Plugin_Keys = Plugin_Keys;
/**
 * @generated from message plugins.redis.v1.Plugin.Mget
 */
class Plugin_Mget extends protobuf_1.Message {
    /**
     * comma-separated list
     *
     * @generated from field: string keys = 1;
     */
    keys = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Mget";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Mget().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Mget().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Mget().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Mget, a, b);
    }
}
exports.Plugin_Mget = Plugin_Mget;
/**
 * @generated from message plugins.redis.v1.Plugin.Hget
 */
class Plugin_Hget extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string field = 2;
     */
    field = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hget";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hget().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hget().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hget().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hget, a, b);
    }
}
exports.Plugin_Hget = Plugin_Hget;
/**
 * @generated from message plugins.redis.v1.Plugin.Hmget
 */
class Plugin_Hmget extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * comma-separated list
     *
     * @generated from field: string fields = 2;
     */
    fields = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hmget";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "fields", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hmget().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hmget().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hmget().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hmget, a, b);
    }
}
exports.Plugin_Hmget = Plugin_Hmget;
/**
 * @generated from message plugins.redis.v1.Plugin.Hgetall
 */
class Plugin_Hgetall extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hgetall";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hgetall().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hgetall().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hgetall().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hgetall, a, b);
    }
}
exports.Plugin_Hgetall = Plugin_Hgetall;
/**
 * @generated from message plugins.redis.v1.Plugin.Hset
 */
class Plugin_Hset extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string field = 2;
     */
    field = "";
    /**
     * @generated from field: string value = 3;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hset";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hset().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hset().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hset().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hset, a, b);
    }
}
exports.Plugin_Hset = Plugin_Hset;
/**
 * @generated from message plugins.redis.v1.Plugin.Hsetnx
 */
class Plugin_Hsetnx extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string field = 2;
     */
    field = "";
    /**
     * @generated from field: string value = 3;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hsetnx";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hsetnx().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hsetnx().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hsetnx().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hsetnx, a, b);
    }
}
exports.Plugin_Hsetnx = Plugin_Hsetnx;
/**
 * @generated from message plugins.redis.v1.Plugin.Hlen
 */
class Plugin_Hlen extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hlen";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hlen().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hlen().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hlen().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hlen, a, b);
    }
}
exports.Plugin_Hlen = Plugin_Hlen;
/**
 * @generated from message plugins.redis.v1.Plugin.Hdel
 */
class Plugin_Hdel extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string field = 2;
     */
    field = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hdel";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hdel().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hdel().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hdel().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hdel, a, b);
    }
}
exports.Plugin_Hdel = Plugin_Hdel;
/**
 * @generated from message plugins.redis.v1.Plugin.Hkeys
 */
class Plugin_Hkeys extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hkeys";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hkeys().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hkeys().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hkeys().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hkeys, a, b);
    }
}
exports.Plugin_Hkeys = Plugin_Hkeys;
/**
 * @generated from message plugins.redis.v1.Plugin.Hvals
 */
class Plugin_Hvals extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Hvals";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Hvals().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Hvals().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Hvals().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Hvals, a, b);
    }
}
exports.Plugin_Hvals = Plugin_Hvals;
/**
 * @generated from message plugins.redis.v1.Plugin.Lindex
 */
class Plugin_Lindex extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 index = 2;
     */
    index = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Lindex";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "index", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Lindex().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Lindex().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Lindex().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Lindex, a, b);
    }
}
exports.Plugin_Lindex = Plugin_Lindex;
/**
 * @generated from message plugins.redis.v1.Plugin.Llen
 */
class Plugin_Llen extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Llen";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Llen().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Llen().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Llen().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Llen, a, b);
    }
}
exports.Plugin_Llen = Plugin_Llen;
/**
 * @generated from message plugins.redis.v1.Plugin.Lpush
 */
class Plugin_Lpush extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string value = 2;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Lpush";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Lpush().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Lpush().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Lpush().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Lpush, a, b);
    }
}
exports.Plugin_Lpush = Plugin_Lpush;
/**
 * @generated from message plugins.redis.v1.Plugin.Lrem
 */
class Plugin_Lrem extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 count = 2;
     */
    count = 0;
    /**
     * @generated from field: string value = 3;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Lrem";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Lrem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Lrem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Lrem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Lrem, a, b);
    }
}
exports.Plugin_Lrem = Plugin_Lrem;
/**
 * @generated from message plugins.redis.v1.Plugin.Lrange
 */
class Plugin_Lrange extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 start = 2;
     */
    start = 0;
    /**
     * @generated from field: int32 stop = 3;
     */
    stop = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Lrange";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "start", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "stop", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Lrange().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Lrange().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Lrange().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Lrange, a, b);
    }
}
exports.Plugin_Lrange = Plugin_Lrange;
/**
 * @generated from message plugins.redis.v1.Plugin.Sadd
 */
class Plugin_Sadd extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Sadd";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Sadd().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Sadd().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Sadd().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Sadd, a, b);
    }
}
exports.Plugin_Sadd = Plugin_Sadd;
/**
 * @generated from message plugins.redis.v1.Plugin.Scard
 */
class Plugin_Scard extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Scard";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Scard().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Scard().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Scard().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Scard, a, b);
    }
}
exports.Plugin_Scard = Plugin_Scard;
/**
 * @generated from message plugins.redis.v1.Plugin.Smembers
 */
class Plugin_Smembers extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Smembers";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Smembers().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Smembers().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Smembers().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Smembers, a, b);
    }
}
exports.Plugin_Smembers = Plugin_Smembers;
/**
 * @generated from message plugins.redis.v1.Plugin.Sismember
 */
class Plugin_Sismember extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Sismember";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Sismember().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Sismember().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Sismember().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Sismember, a, b);
    }
}
exports.Plugin_Sismember = Plugin_Sismember;
/**
 * @generated from message plugins.redis.v1.Plugin.Srandmember
 */
class Plugin_Srandmember extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: optional int32 count = 2;
     */
    count;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Srandmember";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Srandmember().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Srandmember().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Srandmember().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Srandmember, a, b);
    }
}
exports.Plugin_Srandmember = Plugin_Srandmember;
/**
 * @generated from message plugins.redis.v1.Plugin.Srem
 */
class Plugin_Srem extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Srem";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Srem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Srem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Srem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Srem, a, b);
    }
}
exports.Plugin_Srem = Plugin_Srem;
/**
 * TODO: (joey) support options as well: https://redis.io/commands/zadd/
 *
 * @generated from message plugins.redis.v1.Plugin.Zadd
 */
class Plugin_Zadd extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: double score = 2;
     */
    score = 0;
    /**
     * @generated from field: string member = 3;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zadd";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "score", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
        { no: 3, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zadd().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zadd().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zadd().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zadd, a, b);
    }
}
exports.Plugin_Zadd = Plugin_Zadd;
/**
 * @generated from message plugins.redis.v1.Plugin.Zcard
 */
class Plugin_Zcard extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zcard";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zcard().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zcard().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zcard().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zcard, a, b);
    }
}
exports.Plugin_Zcard = Plugin_Zcard;
/**
 * @generated from message plugins.redis.v1.Plugin.Zcount
 */
class Plugin_Zcount extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: double min = 2;
     */
    min = 0;
    /**
     * @generated from field: double max = 3;
     */
    max = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zcount";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "min", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
        { no: 3, name: "max", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zcount().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zcount().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zcount().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zcount, a, b);
    }
}
exports.Plugin_Zcount = Plugin_Zcount;
/**
 * @generated from message plugins.redis.v1.Plugin.Zrange
 */
class Plugin_Zrange extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 start = 2;
     */
    start = 0;
    /**
     * @generated from field: int32 stop = 3;
     */
    stop = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zrange";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "start", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "stop", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zrange().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zrange().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zrange().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zrange, a, b);
    }
}
exports.Plugin_Zrange = Plugin_Zrange;
/**
 * TODO: (joey) add optional withscore
 *
 * @generated from message plugins.redis.v1.Plugin.Zrank
 */
class Plugin_Zrank extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zrank";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zrank().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zrank().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zrank().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zrank, a, b);
    }
}
exports.Plugin_Zrank = Plugin_Zrank;
/**
 * @generated from message plugins.redis.v1.Plugin.Zrem
 */
class Plugin_Zrem extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zrem";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zrem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zrem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zrem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zrem, a, b);
    }
}
exports.Plugin_Zrem = Plugin_Zrem;
/**
 * @generated from message plugins.redis.v1.Plugin.Zscore
 */
class Plugin_Zscore extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string member = 2;
     */
    member = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Zscore";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Zscore().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Zscore().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Zscore().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Zscore, a, b);
    }
}
exports.Plugin_Zscore = Plugin_Zscore;
/**
 * @generated from message plugins.redis.v1.Plugin.Expire
 */
class Plugin_Expire extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: int32 seconds = 2;
     */
    seconds = 0;
    /**
     * @generated from field: optional plugins.redis.v1.Plugin.Expire.Option option = 3;
     */
    option;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Expire";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 3, name: "option", kind: "enum", T: protobuf_1.proto3.getEnumType(Plugin_Expire_Option), opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Expire().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Expire().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Expire().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Expire, a, b);
    }
}
exports.Plugin_Expire = Plugin_Expire;
/**
 * @generated from enum plugins.redis.v1.Plugin.Expire.Option
 */
var Plugin_Expire_Option;
(function (Plugin_Expire_Option) {
    /**
     * @generated from enum value: OPTION_UNSPECIFIED = 0;
     */
    Plugin_Expire_Option[Plugin_Expire_Option["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: OPTION_NX = 1;
     */
    Plugin_Expire_Option[Plugin_Expire_Option["NX"] = 1] = "NX";
    /**
     * @generated from enum value: OPTION_XX = 2;
     */
    Plugin_Expire_Option[Plugin_Expire_Option["XX"] = 2] = "XX";
    /**
     * @generated from enum value: OPTION_GT = 3;
     */
    Plugin_Expire_Option[Plugin_Expire_Option["GT"] = 3] = "GT";
    /**
     * @generated from enum value: OPTION_LT = 4;
     */
    Plugin_Expire_Option[Plugin_Expire_Option["LT"] = 4] = "LT";
})(Plugin_Expire_Option || (exports.Plugin_Expire_Option = Plugin_Expire_Option = {}));
// Retrieve enum metadata with: proto3.getEnumType(Plugin_Expire_Option)
protobuf_1.proto3.util.setEnumType(Plugin_Expire_Option, "plugins.redis.v1.Plugin.Expire.Option", [
    { no: 0, name: "OPTION_UNSPECIFIED" },
    { no: 1, name: "OPTION_NX" },
    { no: 2, name: "OPTION_XX" },
    { no: 3, name: "OPTION_GT" },
    { no: 4, name: "OPTION_LT" },
]);
/**
 * @generated from message plugins.redis.v1.Plugin.Ttl
 */
class Plugin_Ttl extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.redis.v1.Plugin.Ttl";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Plugin_Ttl().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Plugin_Ttl().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Plugin_Ttl().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Plugin_Ttl, a, b);
    }
}
exports.Plugin_Ttl = Plugin_Ttl;
//# sourceMappingURL=plugin_pb.map