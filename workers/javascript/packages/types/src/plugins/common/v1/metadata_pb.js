"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/common/v1/metadata.proto (package plugins.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.BucketsMetadata_Minified = exports.BucketsMetadata = exports.SQLMetadata_Minified_Table = exports.SQLMetadata_Minified = exports.SQLMetadata = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * SQLMetadata represents metadata for any SQL based plugin.
 *
 * @generated from message plugins.common.v1.SQLMetadata
 */
class SQLMetadata extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.SQLMetadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new SQLMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SQLMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SQLMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SQLMetadata, a, b);
    }
}
exports.SQLMetadata = SQLMetadata;
/**
 * This is nested so we can intuitively access it (i.e. plugins.common.v1.SQLMetadata.Minified).
 *
 * @generated from message plugins.common.v1.SQLMetadata.Minified
 */
class SQLMetadata_Minified extends protobuf_1.Message {
    /**
     * If applicable, place the schema name here as well (i.e. my_schema.table_name).
     *
     * @generated from field: map<string, plugins.common.v1.SQLMetadata.Minified.Table> tables = 1;
     */
    tables = {};
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.SQLMetadata.Minified";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "tables", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: SQLMetadata_Minified_Table } },
    ]);
    static fromBinary(bytes, options) {
        return new SQLMetadata_Minified().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SQLMetadata_Minified().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SQLMetadata_Minified().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SQLMetadata_Minified, a, b);
    }
}
exports.SQLMetadata_Minified = SQLMetadata_Minified;
/**
 * @generated from message plugins.common.v1.SQLMetadata.Minified.Table
 */
class SQLMetadata_Minified_Table extends protobuf_1.Message {
    /**
     * <column_name>:<column_type>
     *
     * @generated from field: map<string, string> columns = 1;
     */
    columns = {};
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.SQLMetadata.Minified.Table";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "columns", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 9 /* ScalarType.STRING */ } },
    ]);
    static fromBinary(bytes, options) {
        return new SQLMetadata_Minified_Table().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SQLMetadata_Minified_Table().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SQLMetadata_Minified_Table().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SQLMetadata_Minified_Table, a, b);
    }
}
exports.SQLMetadata_Minified_Table = SQLMetadata_Minified_Table;
/**
 * BucketsMetadata represents metadata for any Bucket based plugin.
 *
 * @generated from message plugins.common.v1.BucketsMetadata
 */
class BucketsMetadata extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.BucketsMetadata";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new BucketsMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new BucketsMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new BucketsMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(BucketsMetadata, a, b);
    }
}
exports.BucketsMetadata = BucketsMetadata;
/**
 * This is nested so we can intuitively access it (i.e. plugins.common.v1.BucketsMetadata.Minified).
 *
 * @generated from message plugins.common.v1.BucketsMetadata.Minified
 */
class BucketsMetadata_Minified extends protobuf_1.Message {
    /**
     * @generated from field: repeated string names = 1;
     */
    names = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.BucketsMetadata.Minified";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new BucketsMetadata_Minified().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new BucketsMetadata_Minified().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new BucketsMetadata_Minified().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(BucketsMetadata_Minified, a, b);
    }
}
exports.BucketsMetadata_Minified = BucketsMetadata_Minified;
//# sourceMappingURL=metadata_pb.map