"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/common/v1/common.proto (package plugins.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SQLActionConfiguration = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * SQLActionConfiguration represents the action configuration for any SQL based plugin.
 *
 * @generated from message plugins.common.v1.SQLActionConfiguration
 */
class SQLActionConfiguration extends protobuf_1.Message {
    /**
     * @generated from field: string body = 1;
     */
    body = "";
    /**
     * @generated from field: bool usePreparedSql = 2;
     */
    usePreparedSql = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.SQLActionConfiguration";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "usePreparedSql", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new SQLActionConfiguration().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SQLActionConfiguration().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SQLActionConfiguration().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SQLActionConfiguration, a, b);
    }
}
exports.SQLActionConfiguration = SQLActionConfiguration;
//# sourceMappingURL=common_pb.map