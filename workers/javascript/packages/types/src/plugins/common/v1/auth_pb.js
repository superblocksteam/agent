"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file plugins/common/v1/auth.proto (package plugins.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Auth = exports.AkeylessAuth_Email = exports.AkeylessAuth_ApiKey = exports.AkeylessAuth = exports.GcpAuth = exports.AwsAuth_AssumeRole = exports.AwsAuth_Static = exports.AwsAuth = exports.Azure_ClientCredentials = exports.Azure_Key = exports.Azure = exports.Basic = exports.OAuth_AuthorizationCodeFlow = exports.OAuth_ClientCredentialsFlow = exports.OAuth_PasswordGrantFlow = exports.OAuth = exports.OAuthCommon = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message plugins.common.v1.OAuthCommon
 */
class OAuthCommon extends protobuf_1.Message {
    /**
     * @generated from field: string client_id = 1;
     */
    clientId = "";
    /**
     * @generated from field: string client_secret = 2;
     */
    clientSecret = "";
    /**
     * @generated from field: string token_url = 3;
     */
    tokenUrl = "";
    /**
     * @generated from field: string audience = 4;
     */
    audience = "";
    /**
     * @generated from field: string scope = 5;
     */
    scope = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.OAuthCommon";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "token_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "audience", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OAuthCommon().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuthCommon().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuthCommon().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OAuthCommon, a, b);
    }
}
exports.OAuthCommon = OAuthCommon;
/**
 * @generated from message plugins.common.v1.OAuth
 */
class OAuth extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.OAuth";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new OAuth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OAuth, a, b);
    }
}
exports.OAuth = OAuth;
/**
 * @generated from message plugins.common.v1.OAuth.PasswordGrantFlow
 */
class OAuth_PasswordGrantFlow extends protobuf_1.Message {
    /**
     * @generated from field: string client_id = 1;
     */
    clientId = "";
    /**
     * @generated from field: string client_secret = 2;
     */
    clientSecret = "";
    /**
     * @generated from field: string token_url = 3;
     */
    tokenUrl = "";
    /**
     * @generated from field: string username = 4;
     */
    username = "";
    /**
     * @generated from field: string password = 5;
     */
    password = "";
    /**
     * @generated from field: string audience = 6;
     */
    audience = "";
    /**
     * @generated from field: string scope = 7;
     */
    scope = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.OAuth.PasswordGrantFlow";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "token_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "audience", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OAuth_PasswordGrantFlow().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuth_PasswordGrantFlow().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuth_PasswordGrantFlow().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OAuth_PasswordGrantFlow, a, b);
    }
}
exports.OAuth_PasswordGrantFlow = OAuth_PasswordGrantFlow;
/**
 * @generated from message plugins.common.v1.OAuth.ClientCredentialsFlow
 */
class OAuth_ClientCredentialsFlow extends protobuf_1.Message {
    /**
     * @generated from field: string client_id = 1;
     */
    clientId = "";
    /**
     * @generated from field: string client_secret = 2;
     */
    clientSecret = "";
    /**
     * @generated from field: string token_url = 3;
     */
    tokenUrl = "";
    /**
     * @generated from field: string audience = 4;
     */
    audience = "";
    /**
     * @generated from field: string scope = 5;
     */
    scope = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.OAuth.ClientCredentialsFlow";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "token_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "audience", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OAuth_ClientCredentialsFlow().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuth_ClientCredentialsFlow().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuth_ClientCredentialsFlow().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OAuth_ClientCredentialsFlow, a, b);
    }
}
exports.OAuth_ClientCredentialsFlow = OAuth_ClientCredentialsFlow;
/**
 * @generated from message plugins.common.v1.OAuth.AuthorizationCodeFlow
 */
class OAuth_AuthorizationCodeFlow extends protobuf_1.Message {
    /**
     * @generated from field: string client_id = 1;
     */
    clientId = "";
    /**
     * @generated from field: string client_secret = 2;
     */
    clientSecret = "";
    /**
     * @generated from field: string token_url = 3;
     */
    tokenUrl = "";
    /**
     * @generated from field: string auth_url = 4;
     */
    authUrl = "";
    /**
     * @generated from field: string audience = 5;
     */
    audience = "";
    /**
     * @generated from field: string scope = 6;
     */
    scope = "";
    /**
     * @generated from field: string token_scope = 7;
     */
    tokenScope = "";
    /**
     * @generated from field: bool refresh_token_from_server = 8;
     */
    refreshTokenFromServer = false;
    /**
     * @generated from field: string client_auth_method = 9;
     */
    clientAuthMethod = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.OAuth.AuthorizationCodeFlow";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "token_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "auth_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "audience", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "token_scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "refresh_token_from_server", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 9, name: "client_auth_method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OAuth_AuthorizationCodeFlow().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuth_AuthorizationCodeFlow().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuth_AuthorizationCodeFlow().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OAuth_AuthorizationCodeFlow, a, b);
    }
}
exports.OAuth_AuthorizationCodeFlow = OAuth_AuthorizationCodeFlow;
/**
 * @generated from message plugins.common.v1.Basic
 */
class Basic extends protobuf_1.Message {
    /**
     * @generated from field: string username = 1;
     */
    username = "";
    /**
     * @generated from field: string password = 2;
     */
    password = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.Basic";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Basic().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Basic().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Basic().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Basic, a, b);
    }
}
exports.Basic = Basic;
/**
 * @generated from message plugins.common.v1.Azure
 */
class Azure extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.common.v1.Azure.config
     */
    config = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.Azure";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "message", T: Azure_Key, oneof: "config" },
        { no: 2, name: "client_credentials", kind: "message", T: Azure_ClientCredentials, oneof: "config" },
    ]);
    static fromBinary(bytes, options) {
        return new Azure().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Azure().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Azure().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Azure, a, b);
    }
}
exports.Azure = Azure;
/**
 * @generated from message plugins.common.v1.Azure.Key
 */
class Azure_Key extends protobuf_1.Message {
    /**
     * @generated from field: string master_key = 1;
     */
    masterKey = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.Azure.Key";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "master_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Azure_Key().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Azure_Key().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Azure_Key().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Azure_Key, a, b);
    }
}
exports.Azure_Key = Azure_Key;
/**
 * @generated from message plugins.common.v1.Azure.ClientCredentials
 */
class Azure_ClientCredentials extends protobuf_1.Message {
    /**
     * @generated from field: string client_id = 1;
     */
    clientId = "";
    /**
     * @generated from field: string client_secret = 2;
     */
    clientSecret = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.Azure.ClientCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Azure_ClientCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Azure_ClientCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Azure_ClientCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Azure_ClientCredentials, a, b);
    }
}
exports.Azure_ClientCredentials = Azure_ClientCredentials;
/**
 * @generated from message plugins.common.v1.AwsAuth
 */
class AwsAuth extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.common.v1.AwsAuth.config
     */
    config = { case: undefined };
    /**
     * @generated from field: string region = 3;
     */
    region = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AwsAuth";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "static", kind: "message", T: AwsAuth_Static, oneof: "config" },
        { no: 2, name: "assume_role", kind: "message", T: AwsAuth_AssumeRole, oneof: "config" },
        { no: 3, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AwsAuth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AwsAuth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AwsAuth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AwsAuth, a, b);
    }
}
exports.AwsAuth = AwsAuth;
/**
 * @generated from message plugins.common.v1.AwsAuth.Static
 */
class AwsAuth_Static extends protobuf_1.Message {
    /**
     * @generated from field: string access_key_id = 1;
     */
    accessKeyId = "";
    /**
     * @generated from field: string secret_access_key = 2;
     */
    secretAccessKey = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AwsAuth.Static";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "access_key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "secret_access_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AwsAuth_Static().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AwsAuth_Static().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AwsAuth_Static().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AwsAuth_Static, a, b);
    }
}
exports.AwsAuth_Static = AwsAuth_Static;
/**
 * @generated from message plugins.common.v1.AwsAuth.AssumeRole
 */
class AwsAuth_AssumeRole extends protobuf_1.Message {
    /**
     * @generated from field: string role_arn = 3;
     */
    roleArn = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AwsAuth.AssumeRole";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 3, name: "role_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AwsAuth_AssumeRole().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AwsAuth_AssumeRole().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AwsAuth_AssumeRole().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AwsAuth_AssumeRole, a, b);
    }
}
exports.AwsAuth_AssumeRole = AwsAuth_AssumeRole;
/**
 * @generated from message plugins.common.v1.GcpAuth
 */
class GcpAuth extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.common.v1.GcpAuth.config
     */
    config = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.GcpAuth";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "service_account", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "config" },
    ]);
    static fromBinary(bytes, options) {
        return new GcpAuth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GcpAuth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GcpAuth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GcpAuth, a, b);
    }
}
exports.GcpAuth = GcpAuth;
/**
 * @generated from message plugins.common.v1.AkeylessAuth
 */
class AkeylessAuth extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.common.v1.AkeylessAuth.config
     */
    config = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AkeylessAuth";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "api_key", kind: "message", T: AkeylessAuth_ApiKey, oneof: "config" },
        { no: 2, name: "email", kind: "message", T: AkeylessAuth_Email, oneof: "config" },
    ]);
    static fromBinary(bytes, options) {
        return new AkeylessAuth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AkeylessAuth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AkeylessAuth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AkeylessAuth, a, b);
    }
}
exports.AkeylessAuth = AkeylessAuth;
/**
 * @generated from message plugins.common.v1.AkeylessAuth.ApiKey
 */
class AkeylessAuth_ApiKey extends protobuf_1.Message {
    /**
     * @generated from field: string access_id = 1;
     */
    accessId = "";
    /**
     * @generated from field: string access_key = 2;
     */
    accessKey = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AkeylessAuth.ApiKey";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "access_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "access_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AkeylessAuth_ApiKey().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AkeylessAuth_ApiKey().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AkeylessAuth_ApiKey().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AkeylessAuth_ApiKey, a, b);
    }
}
exports.AkeylessAuth_ApiKey = AkeylessAuth_ApiKey;
/**
 * @generated from message plugins.common.v1.AkeylessAuth.Email
 */
class AkeylessAuth_Email extends protobuf_1.Message {
    /**
     * @generated from field: string email = 1;
     */
    email = "";
    /**
     * @generated from field: string password = 2;
     */
    password = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.AkeylessAuth.Email";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AkeylessAuth_Email().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AkeylessAuth_Email().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AkeylessAuth_Email().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AkeylessAuth_Email, a, b);
    }
}
exports.AkeylessAuth_Email = AkeylessAuth_Email;
/**
 * @generated from message plugins.common.v1.Auth
 */
class Auth extends protobuf_1.Message {
    /**
     * @generated from oneof plugins.common.v1.Auth.method
     */
    method = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "plugins.common.v1.Auth";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "password_grant_flow", kind: "message", T: OAuth_PasswordGrantFlow, oneof: "method" },
        { no: 2, name: "authorization_code_flow", kind: "message", T: OAuth_AuthorizationCodeFlow, oneof: "method" },
        { no: 3, name: "basic", kind: "message", T: Basic, oneof: "method" },
        { no: 4, name: "client_credentials_flow", kind: "message", T: OAuth_ClientCredentialsFlow, oneof: "method" },
        { no: 5, name: "key", kind: "message", T: Azure_Key, oneof: "method" },
    ]);
    static fromBinary(bytes, options) {
        return new Auth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Auth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Auth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Auth, a, b);
    }
}
exports.Auth = Auth;
//# sourceMappingURL=auth_pb.map