/* eslint-disable */
"use strict";export const validate = validate14;export default validate14;const schema16 = {"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/RowsSchema","definitions":{"RowsSchema":{"type":"array","items":{"type":"object","additionalProperties":{}}}}};const schema17 = {"type":"array","items":{"type":"object","additionalProperties":{}}};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(Array.isArray(data)){const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];if(data0 && typeof data0 == "object" && !Array.isArray(data0)){}else {const err0 = {instancePath:instancePath+"/" + i0,schemaPath:"#/definitions/RowsSchema/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}}else {const err1 = {instancePath,schemaPath:"#/definitions/RowsSchema/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}validate14.errors = vErrors;return errors === 0;}
