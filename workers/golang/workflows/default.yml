---
name: "Default"
on:
  push:
    branches:
      - '**'
permissions:
  id-token: write
  contents: write
env:
  IMAGE_NAME: ghcr.io/superblocksteam/worker.go
jobs:
  build:
    runs-on: ${{ matrix.platforms.runner }}
    strategy:
      fail-fast: true
      matrix:
        platforms:
          - {runner: blacksmith-4vcpu-ubuntu-2204, goarch: amd64}
          - {runner: blacksmith-4vcpu-ubuntu-2204-arm, goarch: arm64}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Inititalize Docker
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: superblocksadmin
          password: ${{ secrets.GH_ADMIN_TOKEN }}
      - name: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GH_ADMIN_SSH_KEY }}
      # TODO: Apply the arm image pattern
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}
          build-args: |
            GO_ARCH=${{ matrix.platforms.goarch }}
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platforms.goarch }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          merge-multiple: true
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=long
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
  integration:
    needs: [merge]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: init-go
        uses: actions/setup-go@v5
        with:
          go-version-file: .go-version
      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: superblocksadmin
          password: ${{ secrets.GH_ADMIN_TOKEN }}
      - name: start
        run: |
          make run-docker DOCKER_TEST_TAG=sha-${{ github.sha }}
          sleep 5
      - name: test
        run: |
          make test-integration
  publish:
    needs: [integration]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate release
        id: bump_semver
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Tag published image
        uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: superblocksteam/worker.go
          target: sha-${{ github.sha }}
          token: ${{ secrets.GHCR_TOKEN }}
          tags: |
            ${{ steps.bump_semver.outputs.tag }}
            latest
    outputs:
      semver: ${{ steps.bump_semver.outputs.tag }}
  staging:
    needs:
      - publish
    if: github.ref == 'refs/heads/main'
    uses: superblocksteam/internal-github-actions/.github/workflows/helm-deploy.yaml@main
    with:
      appVersion: ${{ needs.publish.outputs.semver }}
      opItemK8sConfig: EKS_STAGING_GITHUB_CI_KUBE_CONFIG
      opVault: Staging
      opEnvFile: .env.staging
      environment: staging
      name: worker-go
      namespace: cloud-agents
    secrets:
      OP_ACCOUNT: ${{ secrets.OP_ACCOUNT }}
      OP_PASSWORD: ${{ secrets.OP_PASSWORD }}
      OP_SECRET_KEY: ${{ secrets.OP_SECRET_KEY }}
      OP_DEVICE: ${{ secrets.OP_DEVICE }}
      SLACK_WEBHOOK_URL: ${{ secrets.STAGING_SLACK_WEBHOOK_URL }}
      OVPN_PROFILE_CONFIG_FILE: ${{ secrets.STAGING_VPN_OVPN_FILE }}
      OVPN_PASSWORD: ${{ secrets.STAGING_VPN_PASSWORD }}
      OVPN_USERNAME: ${{ secrets.STAGING_VPN_USERNAME }}
