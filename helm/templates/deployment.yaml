apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superblocks-agent.name" . }}
  labels:
    {{- include "superblocks-agent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "superblocks-agent.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      annotations:
      {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      {{- if .Values.commonPodAnnotations }}
        {{- toYaml .Values.commonPodAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "superblocks-agent.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.commonPodLabels | nindent 8 }}
        {{- end }}
        {{- if .Values.commonPodLabels }}
          {{- toYaml .Values.commonPodLabels | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 1800 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ default (include "superblocks-agent.name" $) .Values.serviceAccount.name }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.ports.http }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /liveness
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        envFrom:
        {{- include "superblocks-agent.key" . | indent 8 }}
        {{- with (concat .Values.envFrom .Values.envFrom) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        - name: SUPERBLOCKS_AGENT_PORT
          value: {{ required "controller.ports.http is required!" .Values.ports.http | quote }}
        - name: SUPERBLOCKS_AGENT_HOST_URL
          value: {{ required "superblocks.agentHostUrl is required!" .Values.superblocks.agentHostUrl | quote }}
        - name: SUPERBLOCKS_AGENT_ENVIRONMENT
          value: {{ default "*" .Values.superblocks.agentEnvironment | quote }}
        - name: SUPERBLOCKS_WORKER_TLS_INSECURE
          value: "true"
        - name: __SUPERBLOCKS_WORKER_LOCAL_ENABLED
          value: "true"
        {{- include "extra-env" (merge .Values.extraEnv .Values.extraEnv) | indent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
