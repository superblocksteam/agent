{{- range $k, $v := $.Values.worker.fleets }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superblocks-agent.worker.fleet.name" (dict "Global" $ "fleet" $k) }}
  labels:
    {{- include "superblocks-agent.labels" $ | nindent 4 }}
    {{- include "superblocks-agent.worker.labels" $k | nindent 4 }}
spec:
  {{- if not $.Values.worker.autoscaling.enabled }}
  replicas: {{ $v.replicaCount | default $.Values.worker.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "superblocks-agent.selectorLabels" $ | nindent 6 }}
      {{- include "superblocks-agent.worker.labels" $k | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "superblocks-agent.selectorLabels" $ | nindent 8 }}
        {{- include "superblocks-agent.worker.labels" $k | nindent 8 }}
        {{- if $.Values.podLabels }}
          {{ toYaml $.Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds | default 86400 }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.worker.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ $.Chart.Name }}-worker
        securityContext:
          {{- toYaml $.Values.worker.securityContext | nindent 10 }}
        image: "{{ $.Values.worker.image.repository }}:{{ $.Values.worker.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.worker.image.pullPolicy }}
        resources:
          {{- toYaml $v.resources | nindent 10 }}
        envFrom:
        {{- include "superblocks-agent.key" $ | indent 8 }}
        {{- with (concat $v.envFrom $.Values.worker.envFrom $.Values.envFrom) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        - name: SUPERBLOCKS_WORKER_TLS_CA_FILE
          value: /etc/config/tls/tls.ca
        - name: SUPERBLOCKS_WORKER_TLS_CERT_FILE
          value: /etc/config/tls/tls.crt
        - name: SUPERBLOCKS_WORKER_TLS_KEY_FILE
          value: /etc/config/tls/tls.key
        - name: SUPERBLOCKS_WORKER_PLUGINS
          value: {{ $v.plugins | quote }}
        {{- if $v.concurrency }}
        - name: SUPERBLOCKS_WORKER_CONCURRENCY
          value: {{ $v.concurrency | quote }}
        {{- end }}
        - name: SUPERBLOCKS_AGENT_ENVIRONMENT
          value: {{ default "*" $.Values.superblocks.agentEnvironment | quote }}
        {{- if (($v.resources | default dict ).limits | default dict).memory }}
        - name: NODE_OPTIONS
          value: "--max-old-space-size={{ include "superblocks-agent.heapSize" $v.resources.limits.memory }}"
        {{- end }}
        {{- include "extra-env" (merge $v.extraEnv $.Values.worker.extraEnv $.Values.extraEnv) | indent 8 }}
        volumeMounts:
        - name: tls
          mountPath: /etc/config/tls
      volumes:
      - name: tls
        secret:
          secretName: {{ include "superblocks-agent.worker.name" $ }}-tls
      {{- with $.Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
