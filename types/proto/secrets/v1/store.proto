syntax = "proto3";

package secrets.v1;

import "buf/validate/validate.proto";
import "common/v1/common.proto";
import "common/v1/errors.proto";
import "google/api/annotations.proto";
import "secrets/v1/secrets.proto";

option go_package = "github.com/superblocksteam/agent/types/gen/go/secrets/v1";

service StoreService {
  rpc Invalidate(InvalidateRequest) returns (InvalidateResponse) {
    option (google.api.http) = {
      post: "/v1/secrets/stores/{store}/invalidate"
      body: "*"
      additional_bindings: [
        {post: "/v1/secrets/stores/{store}/configurations/{configuration_id}/invalidate"},
        {post: "/v1/secrets/stores/{store}/configurations/{configuration_id}/secrets/{secret}/invalidate"}]
    };
  }
  rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse) {
    option (google.api.http) = {
      get: "/v1/secrets/stores/{store}"
      additional_bindings: [
        {
          post: "/v1/secrets/stores/{store}"
          body: "*"
        }
      ]
    };
  }
}

message InvalidateRequest {
  string store = 1 [(buf.validate.field).string = {min_len: 1}];
  string secret = 2;
  string configuration_id = 3;
}

message InvalidateResponse {
  repeated common.v1.Error errors = 1;
  repeated secrets.v1.Invalidation invalidations = 2;
  string message = 3;
}

message ListSecretsRequest {
  string store = 1 [(buf.validate.field).string = {min_len: 1}];
  common.v1.Profile profile = 2 [(buf.validate.field).required = true];
  optional secrets.v1.Provider provider = 3;
}

message ListSecretsResponse {
  repeated secrets.v1.Details secrets = 1;
}
