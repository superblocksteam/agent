syntax = "proto3";

package secrets.v1;

import "buf/validate/validate.proto";
import "common/v1/common.proto";
import "plugins/common/v1/auth.proto";

option go_package = "github.com/superblocksteam/agent/types/gen/go/secrets/v1";

message AwsSecretsManager {
  plugins.common.v1.AwsAuth auth = 1 [(buf.validate.field).required = true];
  optional string prefix = 2;
}

message GcpSecretManager {
  plugins.common.v1.GcpAuth auth = 1 [(buf.validate.field).required = true];
  string project_id = 2 [(buf.validate.field).required = true];
}

message AkeylessSecretsManager {
  plugins.common.v1.AkeylessAuth auth = 1 [(buf.validate.field).required = true];
  optional string host = 2;
  optional string prefix = 3;
}

message HashicorpVault {
  enum Version {
    VERSION_UNSPECIFIED = 0;
    VERSION_V1 = 1;
    VERSION_V2 = 2;
  }

  message Auth {
    message AppRole {
      string role_id = 1 [(buf.validate.field).required = true];
      string secret_id = 2 [(buf.validate.field).required = true];
    }

    oneof config {
      string token = 1;
      AppRole app_role = 2;
    }
  }

  Auth auth = 1 [(buf.validate.field).required = true];

  // The location of the vault server.
  string address = 2 [(buf.validate.field).required = true];

  // The path to the vault
  optional string path = 3;

  // The Hashicorp Vault namespace.
  optional string namespace = 4;

  // The engine version.
  Version version = 5;

  // the path to the secrets
  optional string secrets_path = 6;
}

message MockStore {
  map<string, string> data = 1;
}

message Provider {
  oneof config {
    MockStore mock = 1;
    AkeylessSecretsManager akeyless_secrets_manager = 2;
    AwsSecretsManager aws_secrets_manager = 3;
    GcpSecretManager gcp_secret_manager = 4;
    HashicorpVault hashicorp_vault = 5;
  }
}

message Store {
  common.v1.Metadata metadata = 1 [(buf.validate.field).required = true];
  Provider provider = 2 [(buf.validate.field).required = true];
  optional int32 ttl = 3;
  string configuration_id = 4 [(buf.validate.field).required = true];
  bool cache = 5;
}

// Details represents the details of a secret.
// It does not contain the value.
message Details {
  // i.e. "foo"
  string alias = 1;

  // i.e. "/projects/my-project/secrets/foo/versions/1"
  string name = 2;

  // Add other details like last rotation date, creation date, verison, etc.
}

message Invalidation {
  string alias = 1;
  string configuration_id = 2;
  string store = 3;
}
