syntax = "proto3";

package plugins.databricks.v1;

import "plugins/common/v1/plugin.proto";

option go_package = "github.com/superblocksteam/agent/types/gen/go/plugins/databricks/v1";

message Plugin {
  string name = 1;
  DatabricksConnection connection = 2;
  plugins.common.v1.SQLOperation operation = 3;
  plugins.common.v1.SQLExecution run_sql = 4;
  plugins.common.v1.SQLBulkEdit bulk_edit = 5;
  optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 6;

  message DatabricksConnection {
    optional string default_catalog = 1;
    optional string default_schema = 2;
    string host_url = 3;
    string path = 4;
    int32 port = 5;
    optional ConnectionType connection_type = 7;
    // PAT
    optional string token = 6;
    // M2M
    optional string oauth_client_id = 8;
    optional string oauth_client_secret = 9;
  }

  enum ConnectionType {
    CONNECTION_TYPE_UNSPECIFIED = 0;
    // PERSONAL ACCESS TOKEN
    // https://docs.databricks.com/en/dev-tools/nodejs-sql-driver.html#databricks-personal-access-token-authentication
    CONNECTION_TYPE_PAT = 1;
    // MACHINE TO MACHINE
    // https://docs.databricks.com/en/dev-tools/nodejs-sql-driver.html#oauth-machine-to-machine-m2m-authentication
    CONNECTION_TYPE_M2M = 2;
    // OAUTH TOKEN EXCHANGE (ON-BEHALF-OF)
    // OAuth Token Federation flow where an identity provider token is exchanged for a Databricks access token
    CONNECTION_TYPE_OAUTH_EXCHANGE = 3;
  }
}
