// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: api/v1/service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/superblocksteam/agent/types/gen/go/common/v1"
	v14 "github.com/superblocksteam/agent/types/gen/go/plugins/adls/v1"
	v13 "github.com/superblocksteam/agent/types/gen/go/plugins/cosmosdb/v1"
	v12 "github.com/superblocksteam/agent/types/gen/go/plugins/kafka/v1"
	v11 "github.com/superblocksteam/agent/types/gen/go/store/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ViewMode int32

const (
	ViewMode_VIEW_MODE_UNSPECIFIED ViewMode = 0
	ViewMode_VIEW_MODE_EDIT        ViewMode = 1
	ViewMode_VIEW_MODE_PREVIEW     ViewMode = 2
	ViewMode_VIEW_MODE_DEPLOYED    ViewMode = 3
)

// Enum value maps for ViewMode.
var (
	ViewMode_name = map[int32]string{
		0: "VIEW_MODE_UNSPECIFIED",
		1: "VIEW_MODE_EDIT",
		2: "VIEW_MODE_PREVIEW",
		3: "VIEW_MODE_DEPLOYED",
	}
	ViewMode_value = map[string]int32{
		"VIEW_MODE_UNSPECIFIED": 0,
		"VIEW_MODE_EDIT":        1,
		"VIEW_MODE_PREVIEW":     2,
		"VIEW_MODE_DEPLOYED":    3,
	}
)

func (x ViewMode) Enum() *ViewMode {
	p := new(ViewMode)
	*p = x
	return p
}

func (x ViewMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViewMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_service_proto_enumTypes[0].Descriptor()
}

func (ViewMode) Type() protoreflect.EnumType {
	return &file_api_v1_service_proto_enumTypes[0]
}

func (x ViewMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViewMode.Descriptor instead.
func (ViewMode) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{0}
}

type AwaitResponse_Status int32

const (
	AwaitResponse_STATUS_UNSPECIFIED AwaitResponse_Status = 0
	AwaitResponse_STATUS_COMPLETED   AwaitResponse_Status = 1
	AwaitResponse_STATUS_EXECUTING   AwaitResponse_Status = 2
)

// Enum value maps for AwaitResponse_Status.
var (
	AwaitResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_COMPLETED",
		2: "STATUS_EXECUTING",
	}
	AwaitResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_COMPLETED":   1,
		"STATUS_EXECUTING":   2,
	}
)

func (x AwaitResponse_Status) Enum() *AwaitResponse_Status {
	p := new(AwaitResponse_Status)
	*p = x
	return p
}

func (x AwaitResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwaitResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_service_proto_enumTypes[1].Descriptor()
}

func (AwaitResponse_Status) Type() protoreflect.EnumType {
	return &file_api_v1_service_proto_enumTypes[1]
}

func (x AwaitResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwaitResponse_Status.Descriptor instead.
func (AwaitResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{5, 0}
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detailed bool `protobuf:"varint,1,opt,name=detailed,proto3" json:"detailed,omitempty"`
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *HealthRequest) GetDetailed() bool {
	if x != nil {
		return x.Detailed
	}
	return false
}

type ValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api *Api `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *ValidateRequest) Reset() {
	*x = ValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRequest) ProtoMessage() {}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRequest.ProtoReflect.Descriptor instead.
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateRequest) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Request options.
	Options *ExecuteRequest_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	// Inputs that can be access in steps.
	Inputs map[string]*structpb.Value `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Request:
	//
	//	*ExecuteRequest_Definition
	//	*ExecuteRequest_Fetch_
	Request isExecuteRequest_Request `protobuf_oneof:"request"`
	Files   []*ExecuteRequest_File   `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Profile *v1.Profile              `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	Mocks   []*Mock                  `protobuf:"bytes,7,rep,name=mocks,proto3" json:"mocks,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteRequest) GetOptions() *ExecuteRequest_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ExecuteRequest) GetInputs() map[string]*structpb.Value {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (m *ExecuteRequest) GetRequest() isExecuteRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ExecuteRequest) GetDefinition() *Definition {
	if x, ok := x.GetRequest().(*ExecuteRequest_Definition); ok {
		return x.Definition
	}
	return nil
}

func (x *ExecuteRequest) GetFetch() *ExecuteRequest_Fetch {
	if x, ok := x.GetRequest().(*ExecuteRequest_Fetch_); ok {
		return x.Fetch
	}
	return nil
}

func (x *ExecuteRequest) GetFiles() []*ExecuteRequest_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ExecuteRequest) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ExecuteRequest) GetMocks() []*Mock {
	if x != nil {
		return x.Mocks
	}
	return nil
}

type isExecuteRequest_Request interface {
	isExecuteRequest_Request()
}

type ExecuteRequest_Definition struct {
	// The literal API specification.
	Definition *Definition `protobuf:"bytes,3,opt,name=definition,proto3,oneof"`
}

type ExecuteRequest_Fetch_ struct {
	// Details on how to fetch the API specification.
	Fetch *ExecuteRequest_Fetch `protobuf:"bytes,4,opt,name=fetch,proto3,oneof"`
}

func (*ExecuteRequest_Definition) isExecuteRequest_Request() {}

func (*ExecuteRequest_Fetch_) isExecuteRequest_Request() {}

type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          *Api                        `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Integrations map[string]*structpb.Struct `protobuf:"bytes,2,rep,name=integrations,proto3" json:"integrations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metadata     *Definition_Metadata        `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Stores       *v11.Stores                 `protobuf:"bytes,4,opt,name=stores,proto3" json:"stores,omitempty"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *Definition) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Definition) GetIntegrations() map[string]*structpb.Struct {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *Definition) GetMetadata() *Definition_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Definition) GetStores() *v11.Stores {
	if x != nil {
		return x.Stores
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution ID of an in-progress API execution.
	Execution string `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *StatusRequest) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

type AwaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution ID. This can be used to retrieve outputs after the fact.
	Execution string `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	// The block's output.
	Output *Output `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// The errors, if any.
	Errors []*v1.Error `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	// The current status of this execution. If response orginates
	// from an AwaitRequest, the status will always be comppleted.
	Status AwaitResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=api.v1.AwaitResponse_Status" json:"status,omitempty"`
	// Aggregated performance stats.
	Performance *Performance `protobuf:"bytes,5,opt,name=performance,proto3" json:"performance,omitempty"`
	// A log of the cuncurrent events that happened during this API's execution.
	Events []*Event `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *AwaitResponse) Reset() {
	*x = AwaitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwaitResponse) ProtoMessage() {}

func (x *AwaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwaitResponse.ProtoReflect.Descriptor instead.
func (*AwaitResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *AwaitResponse) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

func (x *AwaitResponse) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *AwaitResponse) GetErrors() []*v1.Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *AwaitResponse) GetStatus() AwaitResponse_Status {
	if x != nil {
		return x.Status
	}
	return AwaitResponse_STATUS_UNSPECIFIED
}

func (x *AwaitResponse) GetPerformance() *Performance {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *AwaitResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type AsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution ID. This can be used to retrieve outputs after the fact.
	Execution string    `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Error     *v1.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AsyncResponse) Reset() {
	*x = AsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncResponse) ProtoMessage() {}

func (x *AsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncResponse.ProtoReflect.Descriptor instead.
func (*AsyncResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *AsyncResponse) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

func (x *AsyncResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution ID. This can be used to retrieve outputs after the fact.
	Execution string `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Event     *Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *StreamResponse) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

func (x *StreamResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type OutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execution string `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Block     string `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *OutputRequest) Reset() {
	*x = OutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputRequest) ProtoMessage() {}

func (x *OutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputRequest.ProtoReflect.Descriptor instead.
func (*OutputRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *OutputRequest) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

func (x *OutputRequest) GetBlock() string {
	if x != nil {
		return x.Block
	}
	return ""
}

type OutputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The block's output.
	Output *Output `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// The error, if any.
	Error *v1.Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OutputResponse) Reset() {
	*x = OutputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputResponse) ProtoMessage() {}

func (x *OutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputResponse.ProtoReflect.Descriptor instead.
func (*OutputResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *OutputResponse) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OutputResponse) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *OutputResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execution string `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
}

func (x *CancelRequest) Reset() {
	*x = CancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRequest) ProtoMessage() {}

func (x *CancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRequest.ProtoReflect.Descriptor instead.
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *CancelRequest) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

type CancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *v1.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelResponse) Reset() {
	*x = CancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelResponse) ProtoMessage() {}

func (x *CancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelResponse.ProtoReflect.Descriptor instead.
func (*CancelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *CancelResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceConfig *structpb.Struct `protobuf:"bytes,1,opt,name=datasource_config,json=datasourceConfig,proto3" json:"datasource_config,omitempty"`
	IntegrationType  string           `protobuf:"bytes,2,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	ConfigurationId  string           `protobuf:"bytes,3,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	Profile          *v1.Profile      `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	ActionConfig     *structpb.Struct `protobuf:"bytes,5,opt,name=action_config,json=actionConfig,proto3,oneof" json:"action_config,omitempty"`
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *TestRequest) GetDatasourceConfig() *structpb.Struct {
	if x != nil {
		return x.DatasourceConfig
	}
	return nil
}

func (x *TestRequest) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *TestRequest) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *TestRequest) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *TestRequest) GetActionConfig() *structpb.Struct {
	if x != nil {
		return x.ActionConfig
	}
	return nil
}

type TestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{13}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration     string      `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	Profile         *v1.Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	ConfigurationId string      `protobuf:"bytes,3,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	PluginName      string      `protobuf:"bytes,4,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRequest) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *DeleteRequest) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *DeleteRequest) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *DeleteRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{15}
}

type Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Function) Reset() {
	*x = Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{16}
}

type TwoWayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*TwoWayRequest_Execute
	//	*TwoWayRequest_Function
	Type isTwoWayRequest_Type `protobuf_oneof:"type"`
}

func (x *TwoWayRequest) Reset() {
	*x = TwoWayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoWayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoWayRequest) ProtoMessage() {}

func (x *TwoWayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoWayRequest.ProtoReflect.Descriptor instead.
func (*TwoWayRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{17}
}

func (m *TwoWayRequest) GetType() isTwoWayRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TwoWayRequest) GetExecute() *ExecuteRequest {
	if x, ok := x.GetType().(*TwoWayRequest_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *TwoWayRequest) GetFunction() *Function_Response {
	if x, ok := x.GetType().(*TwoWayRequest_Function); ok {
		return x.Function
	}
	return nil
}

type isTwoWayRequest_Type interface {
	isTwoWayRequest_Type()
}

type TwoWayRequest_Execute struct {
	Execute *ExecuteRequest `protobuf:"bytes,1,opt,name=execute,proto3,oneof"`
}

type TwoWayRequest_Function struct {
	Function *Function_Response `protobuf:"bytes,2,opt,name=function,proto3,oneof"`
}

func (*TwoWayRequest_Execute) isTwoWayRequest_Type() {}

func (*TwoWayRequest_Function) isTwoWayRequest_Type() {}

type TwoWayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*TwoWayResponse_Stream
	//	*TwoWayResponse_Function
	Type isTwoWayResponse_Type `protobuf_oneof:"type"`
}

func (x *TwoWayResponse) Reset() {
	*x = TwoWayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoWayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoWayResponse) ProtoMessage() {}

func (x *TwoWayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoWayResponse.ProtoReflect.Descriptor instead.
func (*TwoWayResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{18}
}

func (m *TwoWayResponse) GetType() isTwoWayResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TwoWayResponse) GetStream() *StreamResponse {
	if x, ok := x.GetType().(*TwoWayResponse_Stream); ok {
		return x.Stream
	}
	return nil
}

func (x *TwoWayResponse) GetFunction() *Function_Request {
	if x, ok := x.GetType().(*TwoWayResponse_Function); ok {
		return x.Function
	}
	return nil
}

type isTwoWayResponse_Type interface {
	isTwoWayResponse_Type()
}

type TwoWayResponse_Stream struct {
	Stream *StreamResponse `protobuf:"bytes,1,opt,name=stream,proto3,oneof"`
}

type TwoWayResponse_Function struct {
	Function *Function_Request `protobuf:"bytes,2,opt,name=function,proto3,oneof"`
}

func (*TwoWayResponse_Stream) isTwoWayResponse_Type() {}

func (*TwoWayResponse_Function) isTwoWayResponse_Type() {}

type Mock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On     *Mock_On     `protobuf:"bytes,1,opt,name=on,proto3" json:"on,omitempty"`
	Return *Mock_Return `protobuf:"bytes,2,opt,name=return,proto3" json:"return,omitempty"`
}

func (x *Mock) Reset() {
	*x = Mock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock) ProtoMessage() {}

func (x *Mock) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock.ProtoReflect.Descriptor instead.
func (*Mock) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *Mock) GetOn() *Mock_On {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *Mock) GetReturn() *Mock_Return {
	if x != nil {
		return x.Return
	}
	return nil
}

// DEPRECATED
type MetadataRequestDeprecated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is confusing, but integration means integration id
	Integration string      `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	ApiId       string      `protobuf:"bytes,2,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	Profile     *v1.Profile `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *MetadataRequestDeprecated) Reset() {
	*x = MetadataRequestDeprecated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequestDeprecated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequestDeprecated) ProtoMessage() {}

func (x *MetadataRequestDeprecated) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequestDeprecated.ProtoReflect.Descriptor instead.
func (*MetadataRequestDeprecated) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *MetadataRequestDeprecated) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *MetadataRequestDeprecated) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *MetadataRequestDeprecated) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type MetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The integration id
	Integration       string           `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	Profile           *v1.Profile      `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	StepConfiguration *structpb.Struct `protobuf:"bytes,3,opt,name=step_configuration,json=stepConfiguration,proto3" json:"step_configuration,omitempty"`
}

func (x *MetadataRequest) Reset() {
	*x = MetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest) ProtoMessage() {}

func (x *MetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest.ProtoReflect.Descriptor instead.
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{21}
}

func (x *MetadataRequest) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *MetadataRequest) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *MetadataRequest) GetStepConfiguration() *structpb.Struct {
	if x != nil {
		return x.StepConfiguration
	}
	return nil
}

type MetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Metadata:
	//
	//	*MetadataResponse_DatabaseSchemaMetadata_
	//	*MetadataResponse_BucketsMetadata_
	//	*MetadataResponse_Kafka
	//	*MetadataResponse_Cosmosdb
	//	*MetadataResponse_Adls
	Metadata             isMetadataResponse_Metadata `protobuf_oneof:"metadata"`
	GSheetsNextPageToken string                      `protobuf:"bytes,6,opt,name=g_sheets_next_page_token,json=gSheetsNextPageToken,proto3" json:"g_sheets_next_page_token,omitempty"`
}

func (x *MetadataResponse) Reset() {
	*x = MetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse) ProtoMessage() {}

func (x *MetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse.ProtoReflect.Descriptor instead.
func (*MetadataResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22}
}

func (m *MetadataResponse) GetMetadata() isMetadataResponse_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *MetadataResponse) GetDatabaseSchemaMetadata() *MetadataResponse_DatabaseSchemaMetadata {
	if x, ok := x.GetMetadata().(*MetadataResponse_DatabaseSchemaMetadata_); ok {
		return x.DatabaseSchemaMetadata
	}
	return nil
}

func (x *MetadataResponse) GetBucketsMetadata() *MetadataResponse_BucketsMetadata {
	if x, ok := x.GetMetadata().(*MetadataResponse_BucketsMetadata_); ok {
		return x.BucketsMetadata
	}
	return nil
}

func (x *MetadataResponse) GetKafka() *v12.Metadata {
	if x, ok := x.GetMetadata().(*MetadataResponse_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *MetadataResponse) GetCosmosdb() *v13.Plugin_Metadata {
	if x, ok := x.GetMetadata().(*MetadataResponse_Cosmosdb); ok {
		return x.Cosmosdb
	}
	return nil
}

func (x *MetadataResponse) GetAdls() *v14.Plugin_Metadata {
	if x, ok := x.GetMetadata().(*MetadataResponse_Adls); ok {
		return x.Adls
	}
	return nil
}

func (x *MetadataResponse) GetGSheetsNextPageToken() string {
	if x != nil {
		return x.GSheetsNextPageToken
	}
	return ""
}

type isMetadataResponse_Metadata interface {
	isMetadataResponse_Metadata()
}

type MetadataResponse_DatabaseSchemaMetadata_ struct {
	DatabaseSchemaMetadata *MetadataResponse_DatabaseSchemaMetadata `protobuf:"bytes,1,opt,name=database_schema_metadata,json=databaseSchemaMetadata,proto3,oneof"`
}

type MetadataResponse_BucketsMetadata_ struct {
	BucketsMetadata *MetadataResponse_BucketsMetadata `protobuf:"bytes,2,opt,name=buckets_metadata,json=bucketsMetadata,proto3,oneof"`
}

type MetadataResponse_Kafka struct {
	Kafka *v12.Metadata `protobuf:"bytes,3,opt,name=kafka,proto3,oneof"`
}

type MetadataResponse_Cosmosdb struct {
	Cosmosdb *v13.Plugin_Metadata `protobuf:"bytes,4,opt,name=cosmosdb,proto3,oneof"`
}

type MetadataResponse_Adls struct {
	Adls *v14.Plugin_Metadata `protobuf:"bytes,5,opt,name=adls,proto3,oneof"`
}

func (*MetadataResponse_DatabaseSchemaMetadata_) isMetadataResponse_Metadata() {}

func (*MetadataResponse_BucketsMetadata_) isMetadataResponse_Metadata() {}

func (*MetadataResponse_Kafka) isMetadataResponse_Metadata() {}

func (*MetadataResponse_Cosmosdb) isMetadataResponse_Metadata() {}

func (*MetadataResponse_Adls) isMetadataResponse_Metadata() {}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *DownloadRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{24}
}

func (x *DownloadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// DEPRECATED
type WorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data         *structpb.Value                `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ResponseMeta *WorkflowResponse_ResponseMeta `protobuf:"bytes,2,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
}

func (x *WorkflowResponse) Reset() {
	*x = WorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse) ProtoMessage() {}

func (x *WorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse.ProtoReflect.Descriptor instead.
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{25}
}

func (x *WorkflowResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorkflowResponse) GetResponseMeta() *WorkflowResponse_ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

type ExecuteRequest_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, the primary output will not be returned.
	ExcludeOutput bool `protobuf:"varint,1,opt,name=exclude_output,json=excludeOutput,proto3" json:"exclude_output,omitempty"`
	// If true, all outputs will be returned. If false (default):
	//
	//	     STREAM: The block output will not be returned.
	//	ASYNC/AWAIT: Only the final block's output will be returned.
	//
	// WARNING: Returning more than the final block's output may
	//
	//	result in a significant performance regressions.
	//
	// NOTE: If 'exclude_events' is enabled, this flag has no effect.
	IncludeEventOutputs bool `protobuf:"varint,2,opt,name=include_event_outputs,json=includeEventOutputs,proto3" json:"include_event_outputs,omitempty"`
	// Include system events.
	IncludeEvents bool `protobuf:"varint,3,opt,name=include_events,json=includeEvents,proto3" json:"include_events,omitempty"`
	// The block ID to start execution at.
	Start string `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	// The block ID to stop execution at.
	Stop string `protobuf:"bytes,5,opt,name=stop,proto3" json:"stop,omitempty"`
	// If true, values for resolved bindings will be included.
	IncludeResolved bool `protobuf:"varint,6,opt,name=include_resolved,json=includeResolved,proto3" json:"include_resolved,omitempty"`
	// If true, the api will immediately return and execution will continue in a detached manner.
	Async bool `protobuf:"varint,7,opt,name=async,proto3" json:"async,omitempty"`
	// If true, the begin and complete events will be sent. This flag is need to retain backwards compatibility.
	IncludeApiEvents bool `protobuf:"varint,8,opt,name=include_api_events,json=includeApiEvents,proto3" json:"include_api_events,omitempty"`
}

func (x *ExecuteRequest_Options) Reset() {
	*x = ExecuteRequest_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest_Options) ProtoMessage() {}

func (x *ExecuteRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest_Options.ProtoReflect.Descriptor instead.
func (*ExecuteRequest_Options) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ExecuteRequest_Options) GetExcludeOutput() bool {
	if x != nil {
		return x.ExcludeOutput
	}
	return false
}

func (x *ExecuteRequest_Options) GetIncludeEventOutputs() bool {
	if x != nil {
		return x.IncludeEventOutputs
	}
	return false
}

func (x *ExecuteRequest_Options) GetIncludeEvents() bool {
	if x != nil {
		return x.IncludeEvents
	}
	return false
}

func (x *ExecuteRequest_Options) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *ExecuteRequest_Options) GetStop() string {
	if x != nil {
		return x.Stop
	}
	return ""
}

func (x *ExecuteRequest_Options) GetIncludeResolved() bool {
	if x != nil {
		return x.IncludeResolved
	}
	return false
}

func (x *ExecuteRequest_Options) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

func (x *ExecuteRequest_Options) GetIncludeApiEvents() bool {
	if x != nil {
		return x.IncludeApiEvents
	}
	return false
}

type ExecuteRequest_Fetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the API by ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The integration profile to use.
	Profile *v1.Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	// Use unpublished changes.
	Test *bool `protobuf:"varint,3,opt,name=test,proto3,oneof" json:"test,omitempty"`
	// The auth token to use when fetching the definition.
	// Used for workflows only.
	Token *string `protobuf:"bytes,4,opt,name=token,proto3,oneof" json:"token,omitempty"`
	// The view mode that this resource should be executed against.
	ViewMode ViewMode `protobuf:"varint,5,opt,name=view_mode,json=viewMode,proto3,enum=api.v1.ViewMode" json:"view_mode,omitempty"`
	// The commit ID to use when fetching the API.
	CommitId *string `protobuf:"bytes,6,opt,name=commit_id,json=commitId,proto3,oneof" json:"commit_id,omitempty"`
	// The branch name to use when fetching the API
	BranchName *string `protobuf:"bytes,7,opt,name=branch_name,json=branchName,proto3,oneof" json:"branch_name,omitempty"`
}

func (x *ExecuteRequest_Fetch) Reset() {
	*x = ExecuteRequest_Fetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest_Fetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest_Fetch) ProtoMessage() {}

func (x *ExecuteRequest_Fetch) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest_Fetch.ProtoReflect.Descriptor instead.
func (*ExecuteRequest_Fetch) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ExecuteRequest_Fetch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecuteRequest_Fetch) GetProfile() *v1.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ExecuteRequest_Fetch) GetTest() bool {
	if x != nil && x.Test != nil {
		return *x.Test
	}
	return false
}

func (x *ExecuteRequest_Fetch) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *ExecuteRequest_Fetch) GetViewMode() ViewMode {
	if x != nil {
		return x.ViewMode
	}
	return ViewMode_VIEW_MODE_UNSPECIFIED
}

func (x *ExecuteRequest_Fetch) GetCommitId() string {
	if x != nil && x.CommitId != nil {
		return *x.CommitId
	}
	return ""
}

func (x *ExecuteRequest_Fetch) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

type ExecuteRequest_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalName string `protobuf:"bytes,1,opt,name=originalName,proto3" json:"originalName,omitempty"`
	Buffer       []byte `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Encoding     string `protobuf:"bytes,3,opt,name=encoding,proto3" json:"encoding,omitempty"`
	MimeType     string `protobuf:"bytes,4,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Size         string `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ExecuteRequest_File) Reset() {
	*x = ExecuteRequest_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest_File) ProtoMessage() {}

func (x *ExecuteRequest_File) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest_File.ProtoReflect.Descriptor instead.
func (*ExecuteRequest_File) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ExecuteRequest_File) GetOriginalName() string {
	if x != nil {
		return x.OriginalName
	}
	return ""
}

func (x *ExecuteRequest_File) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *ExecuteRequest_File) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *ExecuteRequest_File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ExecuteRequest_File) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type Definition_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester        string       `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"` // This is the email
	Profile          string       `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`     // Because profile isn't a required execution parameter, the default will be different per org.
	OrganizationPlan string       `protobuf:"bytes,3,opt,name=organization_plan,json=organizationPlan,proto3" json:"organization_plan,omitempty"`
	OrganizationName string       `protobuf:"bytes,4,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	RequesterType    *v1.UserType `protobuf:"varint,5,opt,name=requester_type,json=requesterType,proto3,enum=common.v1.UserType,oneof" json:"requester_type,omitempty"` // This is requester type since the same email could be used by external user as well as by internal
}

func (x *Definition_Metadata) Reset() {
	*x = Definition_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition_Metadata) ProtoMessage() {}

func (x *Definition_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition_Metadata.ProtoReflect.Descriptor instead.
func (*Definition_Metadata) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Definition_Metadata) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *Definition_Metadata) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *Definition_Metadata) GetOrganizationPlan() string {
	if x != nil {
		return x.OrganizationPlan
	}
	return ""
}

func (x *Definition_Metadata) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *Definition_Metadata) GetRequesterType() v1.UserType {
	if x != nil && x.RequesterType != nil {
		return *x.RequesterType
	}
	return v1.UserType(0)
}

type Function_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parameters []*structpb.Value `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Function_Request) Reset() {
	*x = Function_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function_Request) ProtoMessage() {}

func (x *Function_Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function_Request.ProtoReflect.Descriptor instead.
func (*Function_Request) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Function_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Function_Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Function_Request) GetParameters() []*structpb.Value {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type Function_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value *structpb.Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error *v1.Error       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Function_Response) Reset() {
	*x = Function_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function_Response) ProtoMessage() {}

func (x *Function_Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function_Response.ProtoReflect.Descriptor instead.
func (*Function_Response) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{16, 1}
}

func (x *Function_Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Function_Response) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Function_Response) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Mock_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationType *string         `protobuf:"bytes,1,opt,name=integration_type,json=integrationType,proto3,oneof" json:"integration_type,omitempty"`
	StepName        *string         `protobuf:"bytes,2,opt,name=step_name,json=stepName,proto3,oneof" json:"step_name,omitempty"`
	Inputs          *structpb.Value `protobuf:"bytes,3,opt,name=inputs,proto3,oneof" json:"inputs,omitempty"`
}

func (x *Mock_Params) Reset() {
	*x = Mock_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_Params) ProtoMessage() {}

func (x *Mock_Params) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_Params.ProtoReflect.Descriptor instead.
func (*Mock_Params) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{19, 0}
}

func (x *Mock_Params) GetIntegrationType() string {
	if x != nil && x.IntegrationType != nil {
		return *x.IntegrationType
	}
	return ""
}

func (x *Mock_Params) GetStepName() string {
	if x != nil && x.StepName != nil {
		return *x.StepName
	}
	return ""
}

func (x *Mock_Params) GetInputs() *structpb.Value {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type Mock_On struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Static  *Mock_Params `protobuf:"bytes,1,opt,name=static,proto3,oneof" json:"static,omitempty"`
	Dynamic *string      `protobuf:"bytes,2,opt,name=dynamic,proto3,oneof" json:"dynamic,omitempty"` // function name
}

func (x *Mock_On) Reset() {
	*x = Mock_On{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_On) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_On) ProtoMessage() {}

func (x *Mock_On) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_On.ProtoReflect.Descriptor instead.
func (*Mock_On) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{19, 1}
}

func (x *Mock_On) GetStatic() *Mock_Params {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *Mock_On) GetDynamic() string {
	if x != nil && x.Dynamic != nil {
		return *x.Dynamic
	}
	return ""
}

type Mock_Return struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Mock_Return_Static
	//	*Mock_Return_Dynamic
	Type isMock_Return_Type `protobuf_oneof:"type"`
}

func (x *Mock_Return) Reset() {
	*x = Mock_Return{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_Return) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_Return) ProtoMessage() {}

func (x *Mock_Return) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_Return.ProtoReflect.Descriptor instead.
func (*Mock_Return) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{19, 2}
}

func (m *Mock_Return) GetType() isMock_Return_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Mock_Return) GetStatic() *structpb.Value {
	if x, ok := x.GetType().(*Mock_Return_Static); ok {
		return x.Static
	}
	return nil
}

func (x *Mock_Return) GetDynamic() string {
	if x, ok := x.GetType().(*Mock_Return_Dynamic); ok {
		return x.Dynamic
	}
	return ""
}

type isMock_Return_Type interface {
	isMock_Return_Type()
}

type Mock_Return_Static struct {
	Static *structpb.Value `protobuf:"bytes,1,opt,name=static,proto3,oneof"`
}

type Mock_Return_Dynamic struct {
	Dynamic string `protobuf:"bytes,2,opt,name=dynamic,proto3,oneof"` // function name
}

func (*Mock_Return_Static) isMock_Return_Type() {}

func (*Mock_Return_Dynamic) isMock_Return_Type() {}

type MetadataResponse_DatabaseSchemaMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*MetadataResponse_DatabaseSchemaMetadata_Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	// NOTE: (joey) this is optional in the TS version of this model. should be here as well
	Schemas []*MetadataResponse_DatabaseSchemaMetadata_Schema `protobuf:"bytes,2,rep,name=schemas,proto3" json:"schemas,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0}
}

func (x *MetadataResponse_DatabaseSchemaMetadata) GetTables() []*MetadataResponse_DatabaseSchemaMetadata_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *MetadataResponse_DatabaseSchemaMetadata) GetSchemas() []*MetadataResponse_DatabaseSchemaMetadata_Schema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type MetadataResponse_BucketMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MetadataResponse_BucketMetadata) Reset() {
	*x = MetadataResponse_BucketMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_BucketMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_BucketMetadata) ProtoMessage() {}

func (x *MetadataResponse_BucketMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_BucketMetadata.ProtoReflect.Descriptor instead.
func (*MetadataResponse_BucketMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 1}
}

func (x *MetadataResponse_BucketMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MetadataResponse_BucketsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*MetadataResponse_BucketMetadata `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *MetadataResponse_BucketsMetadata) Reset() {
	*x = MetadataResponse_BucketsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_BucketsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_BucketsMetadata) ProtoMessage() {}

func (x *MetadataResponse_BucketsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_BucketsMetadata.ProtoReflect.Descriptor instead.
func (*MetadataResponse_BucketsMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 2}
}

func (x *MetadataResponse_BucketsMetadata) GetBuckets() []*MetadataResponse_BucketMetadata {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type MetadataResponse_DatabaseSchemaMetadata_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	EscapedName string `protobuf:"bytes,3,opt,name=escaped_name,json=escapedName,proto3" json:"escaped_name,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata_Column) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata_Column.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata_Column) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0, 0}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Column) GetEscapedName() string {
	if x != nil {
		return x.EscapedName
	}
	return ""
}

type MetadataResponse_DatabaseSchemaMetadata_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Columns []string `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata_Key) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata_Key.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata_Key) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0, 1}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Key) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

type MetadataResponse_DatabaseSchemaMetadata_Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Template) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata_Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata_Template) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata_Template) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata_Template.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata_Template) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0, 2}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Template) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Template) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type MetadataResponse_DatabaseSchemaMetadata_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string                                              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name      string                                              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Columns   []*MetadataResponse_DatabaseSchemaMetadata_Column   `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	Keys      []*MetadataResponse_DatabaseSchemaMetadata_Key      `protobuf:"bytes,5,rep,name=keys,proto3" json:"keys,omitempty"`
	Templates []*MetadataResponse_DatabaseSchemaMetadata_Template `protobuf:"bytes,6,rep,name=templates,proto3" json:"templates,omitempty"`
	// NOTE: (joey) this is optional in the TS version of this model. should be here as well
	Schema string `protobuf:"bytes,7,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata_Table) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata_Table.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata_Table) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0, 3}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetColumns() []*MetadataResponse_DatabaseSchemaMetadata_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetKeys() []*MetadataResponse_DatabaseSchemaMetadata_Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetTemplates() []*MetadataResponse_DatabaseSchemaMetadata_Template {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Table) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type MetadataResponse_DatabaseSchemaMetadata_Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Schema) Reset() {
	*x = MetadataResponse_DatabaseSchemaMetadata_Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse_DatabaseSchemaMetadata_Schema) ProtoMessage() {}

func (x *MetadataResponse_DatabaseSchemaMetadata_Schema) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse_DatabaseSchemaMetadata_Schema.ProtoReflect.Descriptor instead.
func (*MetadataResponse_DatabaseSchemaMetadata_Schema) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{22, 0, 4}
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Schema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetadataResponse_DatabaseSchemaMetadata_Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WorkflowResponse_ResponseMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // NOTE(frank): I'm omitting the timing. This may not be good. I'll revisit.
}

func (x *WorkflowResponse_ResponseMeta) Reset() {
	*x = WorkflowResponse_ResponseMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowResponse_ResponseMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse_ResponseMeta) ProtoMessage() {}

func (x *WorkflowResponse_ResponseMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse_ResponseMeta.ProtoReflect.Descriptor instead.
func (*WorkflowResponse_ResponseMeta) Descriptor() ([]byte, []int) {
	return file_api_v1_service_proto_rawDescGZIP(), []int{25, 0}
}

func (x *WorkflowResponse_ResponseMeta) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkflowResponse_ResponseMeta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorkflowResponse_ResponseMeta) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_api_v1_service_proto protoreflect.FileDescriptor

var file_api_v1_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x10,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x64, 0x6c, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2b, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x30, 0x0a,
	0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22,
	0xbb, 0x09, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x05, 0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x63, 0x6b, 0x52, 0x05, 0x6d, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0xa4, 0x02, 0x0a, 0x07, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x6f,
	0x70, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x70, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0xa1, 0x02, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x09,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x51, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8e, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x13, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x08, 0xf8, 0x42, 0x01, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xb5, 0x04,
	0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x48, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0xf0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x58, 0x0a, 0x11, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x02, 0x0a, 0x0d, 0x41, 0x77, 0x61, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x55, 0x0a, 0x0d, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x53, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x0e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x2d, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38,
	0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xac, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29,
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x0e, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x79, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x8b, 0x01, 0x0a, 0x0d, 0x54, 0x77, 0x6f, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x89, 0x01,
	0x0a, 0x0e, 0x54, 0x77, 0x6f, 0x57, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xe2, 0x03, 0x0a, 0x04, 0x4d, 0x6f,
	0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x6e, 0x52,
	0x02, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x63,
	0x6b, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x1a, 0xbd, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x10, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73,
	0x74, 0x65, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x65, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x1a, 0x6c, 0x0a, 0x02, 0x4f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x1a, 0x5e,
	0x0a, 0x06, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x07, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x82,
	0x01, 0x0a, 0x19, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x12, 0x73, 0x74, 0x65, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x73, 0x74,
	0x65, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xd1, 0x0a, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x55, 0x0a, 0x10, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x42, 0x0a, 0x08,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62,
	0x12, 0x36, 0x0a, 0x04, 0x61, 0x64, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x61, 0x64, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x18, 0x67, 0x5f, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x53, 0x68, 0x65,
	0x65, 0x74, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x88, 0x06, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0x53, 0x0a, 0x06,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x47, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x34, 0x0a, 0x08, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x1a, 0xca, 0x02, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x47, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x56, 0x0a,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x2c, 0x0a,
	0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x24, 0x0a, 0x0e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x54, 0x0a, 0x0f, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x10, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x5a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2a, 0x68, 0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x56,
	0x49, 0x45, 0x57, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x45, 0x44, 0x10, 0x03, 0x32, 0x71, 0x0a,
	0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x92, 0x41,
	0x10, 0x2a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x32, 0xbc, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa6, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92, 0x41, 0x19, 0x2a, 0x17, 0x53, 0x79, 0x6e, 0x63,
	0x20, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x3a, 0x01, 0x2a, 0x5a, 0x25, 0x3a, 0x01,
	0x2a, 0x22, 0x20, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x69, 0x64,
	0x3d, 0x2a, 0x7d, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x32,
	0xdd, 0x0b, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x05, 0x41, 0x77, 0x61, 0x69, 0x74, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x92, 0x41,
	0x10, 0x12, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x50,
	0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x5a, 0x1d, 0x3a, 0x01, 0x2a, 0x22,
	0x18, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2f, 0x7b, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x2e, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x22, 0x0b, 0x2f, 0x76, 0x32, 0x2f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x0c, 0x54, 0x77, 0x6f, 0x57, 0x61, 0x79,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x77, 0x6f, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x6f, 0x57, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x92, 0x41, 0x13, 0x2a, 0x11, 0x54, 0x77, 0x6f, 0x20,
	0x57, 0x61, 0x79, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x2f, 0x74, 0x77, 0x6f, 0x77, 0x61, 0x79, 0x28, 0x01, 0x30, 0x01, 0x12, 0x80,
	0x01, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x92, 0x41, 0x16, 0x2a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x6f, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x92, 0x41, 0x16, 0x2a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x66, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x92, 0x41, 0x1d, 0x2a, 0x1b, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x54, 0x65, 0x73, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a,
	0x22, 0x08, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x92, 0x41, 0x19, 0x2a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x20, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x6f, 0x6f,
	0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x32, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x05, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x92, 0x41, 0x11, 0x2a, 0x0f, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f,
	0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2f, 0x61, 0x73, 0x79, 0x6e, 0x63,
	0x12, 0x94, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x92, 0x41, 0x12,
	0x2a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x3a, 0x01, 0x2a, 0x5a, 0x24, 0x3a, 0x01, 0x2a,
	0x22, 0x1f, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x69, 0x64, 0x3d, 0x2a,
	0x7d, 0x22, 0x12, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x92, 0x41, 0x12, 0x2a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76,
	0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5c, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x23, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x32, 0x2f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x64, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x92, 0x41, 0x0f, 0x2a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12,
	0x09, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x92, 0x41, 0x1b, 0x2a, 0x19, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x50, 0x49, 0x27, 0x73, 0x20, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f, 0x76, 0x32,
	0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x76, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x92, 0x41, 0x1f, 0x2a, 0x1d, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x50, 0x49, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01,
	0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x86, 0x02, 0x92, 0x41, 0xcc, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x20, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x65, 0x73, 0x2e, 0x22, 0x17, 0x1a, 0x15, 0x66, 0x72, 0x61, 0x6e, 0x6b, 0x40,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x32,
	0x03, 0x31, 0x2e, 0x30, 0x1a, 0x15, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_service_proto_rawDescOnce sync.Once
	file_api_v1_service_proto_rawDescData = file_api_v1_service_proto_rawDesc
)

func file_api_v1_service_proto_rawDescGZIP() []byte {
	file_api_v1_service_proto_rawDescOnce.Do(func() {
		file_api_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_service_proto_rawDescData)
	})
	return file_api_v1_service_proto_rawDescData
}

var file_api_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_api_v1_service_proto_goTypes = []interface{}{
	(ViewMode)(0),                                   // 0: api.v1.ViewMode
	(AwaitResponse_Status)(0),                       // 1: api.v1.AwaitResponse.Status
	(*HealthRequest)(nil),                           // 2: api.v1.HealthRequest
	(*ValidateRequest)(nil),                         // 3: api.v1.ValidateRequest
	(*ExecuteRequest)(nil),                          // 4: api.v1.ExecuteRequest
	(*Definition)(nil),                              // 5: api.v1.Definition
	(*StatusRequest)(nil),                           // 6: api.v1.StatusRequest
	(*AwaitResponse)(nil),                           // 7: api.v1.AwaitResponse
	(*AsyncResponse)(nil),                           // 8: api.v1.AsyncResponse
	(*StreamResponse)(nil),                          // 9: api.v1.StreamResponse
	(*OutputRequest)(nil),                           // 10: api.v1.OutputRequest
	(*OutputResponse)(nil),                          // 11: api.v1.OutputResponse
	(*CancelRequest)(nil),                           // 12: api.v1.CancelRequest
	(*CancelResponse)(nil),                          // 13: api.v1.CancelResponse
	(*TestRequest)(nil),                             // 14: api.v1.TestRequest
	(*TestResponse)(nil),                            // 15: api.v1.TestResponse
	(*DeleteRequest)(nil),                           // 16: api.v1.DeleteRequest
	(*DeleteResponse)(nil),                          // 17: api.v1.DeleteResponse
	(*Function)(nil),                                // 18: api.v1.Function
	(*TwoWayRequest)(nil),                           // 19: api.v1.TwoWayRequest
	(*TwoWayResponse)(nil),                          // 20: api.v1.TwoWayResponse
	(*Mock)(nil),                                    // 21: api.v1.Mock
	(*MetadataRequestDeprecated)(nil),               // 22: api.v1.MetadataRequestDeprecated
	(*MetadataRequest)(nil),                         // 23: api.v1.MetadataRequest
	(*MetadataResponse)(nil),                        // 24: api.v1.MetadataResponse
	(*DownloadRequest)(nil),                         // 25: api.v1.DownloadRequest
	(*DownloadResponse)(nil),                        // 26: api.v1.DownloadResponse
	(*WorkflowResponse)(nil),                        // 27: api.v1.WorkflowResponse
	(*ExecuteRequest_Options)(nil),                  // 28: api.v1.ExecuteRequest.Options
	(*ExecuteRequest_Fetch)(nil),                    // 29: api.v1.ExecuteRequest.Fetch
	nil,                                             // 30: api.v1.ExecuteRequest.InputsEntry
	(*ExecuteRequest_File)(nil),                     // 31: api.v1.ExecuteRequest.File
	(*Definition_Metadata)(nil),                     // 32: api.v1.Definition.Metadata
	nil,                                             // 33: api.v1.Definition.IntegrationsEntry
	(*Function_Request)(nil),                        // 34: api.v1.Function.Request
	(*Function_Response)(nil),                       // 35: api.v1.Function.Response
	(*Mock_Params)(nil),                             // 36: api.v1.Mock.Params
	(*Mock_On)(nil),                                 // 37: api.v1.Mock.On
	(*Mock_Return)(nil),                             // 38: api.v1.Mock.Return
	(*MetadataResponse_DatabaseSchemaMetadata)(nil), // 39: api.v1.MetadataResponse.DatabaseSchemaMetadata
	(*MetadataResponse_BucketMetadata)(nil),         // 40: api.v1.MetadataResponse.BucketMetadata
	(*MetadataResponse_BucketsMetadata)(nil),        // 41: api.v1.MetadataResponse.BucketsMetadata
	(*MetadataResponse_DatabaseSchemaMetadata_Column)(nil),   // 42: api.v1.MetadataResponse.DatabaseSchemaMetadata.Column
	(*MetadataResponse_DatabaseSchemaMetadata_Key)(nil),      // 43: api.v1.MetadataResponse.DatabaseSchemaMetadata.Key
	(*MetadataResponse_DatabaseSchemaMetadata_Template)(nil), // 44: api.v1.MetadataResponse.DatabaseSchemaMetadata.Template
	(*MetadataResponse_DatabaseSchemaMetadata_Table)(nil),    // 45: api.v1.MetadataResponse.DatabaseSchemaMetadata.Table
	(*MetadataResponse_DatabaseSchemaMetadata_Schema)(nil),   // 46: api.v1.MetadataResponse.DatabaseSchemaMetadata.Schema
	(*WorkflowResponse_ResponseMeta)(nil),                    // 47: api.v1.WorkflowResponse.ResponseMeta
	(*Api)(nil),                                              // 48: api.v1.Api
	(*v1.Profile)(nil),                                       // 49: common.v1.Profile
	(*v11.Stores)(nil),                                       // 50: store.v1.Stores
	(*Output)(nil),                                           // 51: api.v1.Output
	(*v1.Error)(nil),                                         // 52: common.v1.Error
	(*Performance)(nil),                                      // 53: api.v1.Performance
	(*Event)(nil),                                            // 54: api.v1.Event
	(*v1.Metadata)(nil),                                      // 55: common.v1.Metadata
	(*structpb.Struct)(nil),                                  // 56: google.protobuf.Struct
	(*v12.Metadata)(nil),                                     // 57: plugins.kafka.v1.Metadata
	(*v13.Plugin_Metadata)(nil),                              // 58: plugins.cosmosdb.v1.Plugin.Metadata
	(*v14.Plugin_Metadata)(nil),                              // 59: plugins.adls.v1.Plugin.Metadata
	(*structpb.Value)(nil),                                   // 60: google.protobuf.Value
	(v1.UserType)(0),                                         // 61: common.v1.UserType
	(*v1.HealthResponse)(nil),                                // 62: common.v1.HealthResponse
	(*emptypb.Empty)(nil),                                    // 63: google.protobuf.Empty
}
var file_api_v1_service_proto_depIdxs = []int32{
	48, // 0: api.v1.ValidateRequest.api:type_name -> api.v1.Api
	28, // 1: api.v1.ExecuteRequest.options:type_name -> api.v1.ExecuteRequest.Options
	30, // 2: api.v1.ExecuteRequest.inputs:type_name -> api.v1.ExecuteRequest.InputsEntry
	5,  // 3: api.v1.ExecuteRequest.definition:type_name -> api.v1.Definition
	29, // 4: api.v1.ExecuteRequest.fetch:type_name -> api.v1.ExecuteRequest.Fetch
	31, // 5: api.v1.ExecuteRequest.files:type_name -> api.v1.ExecuteRequest.File
	49, // 6: api.v1.ExecuteRequest.profile:type_name -> common.v1.Profile
	21, // 7: api.v1.ExecuteRequest.mocks:type_name -> api.v1.Mock
	48, // 8: api.v1.Definition.api:type_name -> api.v1.Api
	33, // 9: api.v1.Definition.integrations:type_name -> api.v1.Definition.IntegrationsEntry
	32, // 10: api.v1.Definition.metadata:type_name -> api.v1.Definition.Metadata
	50, // 11: api.v1.Definition.stores:type_name -> store.v1.Stores
	51, // 12: api.v1.AwaitResponse.output:type_name -> api.v1.Output
	52, // 13: api.v1.AwaitResponse.errors:type_name -> common.v1.Error
	1,  // 14: api.v1.AwaitResponse.status:type_name -> api.v1.AwaitResponse.Status
	53, // 15: api.v1.AwaitResponse.performance:type_name -> api.v1.Performance
	54, // 16: api.v1.AwaitResponse.events:type_name -> api.v1.Event
	52, // 17: api.v1.AsyncResponse.error:type_name -> common.v1.Error
	54, // 18: api.v1.StreamResponse.event:type_name -> api.v1.Event
	55, // 19: api.v1.OutputResponse.metadata:type_name -> common.v1.Metadata
	51, // 20: api.v1.OutputResponse.output:type_name -> api.v1.Output
	52, // 21: api.v1.OutputResponse.error:type_name -> common.v1.Error
	52, // 22: api.v1.CancelResponse.error:type_name -> common.v1.Error
	56, // 23: api.v1.TestRequest.datasource_config:type_name -> google.protobuf.Struct
	49, // 24: api.v1.TestRequest.profile:type_name -> common.v1.Profile
	56, // 25: api.v1.TestRequest.action_config:type_name -> google.protobuf.Struct
	49, // 26: api.v1.DeleteRequest.profile:type_name -> common.v1.Profile
	4,  // 27: api.v1.TwoWayRequest.execute:type_name -> api.v1.ExecuteRequest
	35, // 28: api.v1.TwoWayRequest.function:type_name -> api.v1.Function.Response
	9,  // 29: api.v1.TwoWayResponse.stream:type_name -> api.v1.StreamResponse
	34, // 30: api.v1.TwoWayResponse.function:type_name -> api.v1.Function.Request
	37, // 31: api.v1.Mock.on:type_name -> api.v1.Mock.On
	38, // 32: api.v1.Mock.return:type_name -> api.v1.Mock.Return
	49, // 33: api.v1.MetadataRequestDeprecated.profile:type_name -> common.v1.Profile
	49, // 34: api.v1.MetadataRequest.profile:type_name -> common.v1.Profile
	56, // 35: api.v1.MetadataRequest.step_configuration:type_name -> google.protobuf.Struct
	39, // 36: api.v1.MetadataResponse.database_schema_metadata:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata
	41, // 37: api.v1.MetadataResponse.buckets_metadata:type_name -> api.v1.MetadataResponse.BucketsMetadata
	57, // 38: api.v1.MetadataResponse.kafka:type_name -> plugins.kafka.v1.Metadata
	58, // 39: api.v1.MetadataResponse.cosmosdb:type_name -> plugins.cosmosdb.v1.Plugin.Metadata
	59, // 40: api.v1.MetadataResponse.adls:type_name -> plugins.adls.v1.Plugin.Metadata
	60, // 41: api.v1.WorkflowResponse.data:type_name -> google.protobuf.Value
	47, // 42: api.v1.WorkflowResponse.response_meta:type_name -> api.v1.WorkflowResponse.ResponseMeta
	49, // 43: api.v1.ExecuteRequest.Fetch.profile:type_name -> common.v1.Profile
	0,  // 44: api.v1.ExecuteRequest.Fetch.view_mode:type_name -> api.v1.ViewMode
	60, // 45: api.v1.ExecuteRequest.InputsEntry.value:type_name -> google.protobuf.Value
	61, // 46: api.v1.Definition.Metadata.requester_type:type_name -> common.v1.UserType
	56, // 47: api.v1.Definition.IntegrationsEntry.value:type_name -> google.protobuf.Struct
	60, // 48: api.v1.Function.Request.parameters:type_name -> google.protobuf.Value
	60, // 49: api.v1.Function.Response.value:type_name -> google.protobuf.Value
	52, // 50: api.v1.Function.Response.error:type_name -> common.v1.Error
	60, // 51: api.v1.Mock.Params.inputs:type_name -> google.protobuf.Value
	36, // 52: api.v1.Mock.On.static:type_name -> api.v1.Mock.Params
	60, // 53: api.v1.Mock.Return.static:type_name -> google.protobuf.Value
	45, // 54: api.v1.MetadataResponse.DatabaseSchemaMetadata.tables:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata.Table
	46, // 55: api.v1.MetadataResponse.DatabaseSchemaMetadata.schemas:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata.Schema
	40, // 56: api.v1.MetadataResponse.BucketsMetadata.buckets:type_name -> api.v1.MetadataResponse.BucketMetadata
	42, // 57: api.v1.MetadataResponse.DatabaseSchemaMetadata.Table.columns:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata.Column
	43, // 58: api.v1.MetadataResponse.DatabaseSchemaMetadata.Table.keys:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata.Key
	44, // 59: api.v1.MetadataResponse.DatabaseSchemaMetadata.Table.templates:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata.Template
	2,  // 60: api.v1.MetadataService.Health:input_type -> api.v1.HealthRequest
	4,  // 61: api.v1.DeprecatedService.Workflow:input_type -> api.v1.ExecuteRequest
	4,  // 62: api.v1.ExecutorService.Await:input_type -> api.v1.ExecuteRequest
	19, // 63: api.v1.ExecutorService.TwoWayStream:input_type -> api.v1.TwoWayRequest
	22, // 64: api.v1.ExecutorService.MetadataDeprecated:input_type -> api.v1.MetadataRequestDeprecated
	23, // 65: api.v1.ExecutorService.Metadata:input_type -> api.v1.MetadataRequest
	14, // 66: api.v1.ExecutorService.Test:input_type -> api.v1.TestRequest
	16, // 67: api.v1.ExecutorService.Delete:input_type -> api.v1.DeleteRequest
	4,  // 68: api.v1.ExecutorService.Async:input_type -> api.v1.ExecuteRequest
	4,  // 69: api.v1.ExecutorService.Stream:input_type -> api.v1.ExecuteRequest
	6,  // 70: api.v1.ExecutorService.Status:input_type -> api.v1.StatusRequest
	10, // 71: api.v1.ExecutorService.Output:input_type -> api.v1.OutputRequest
	25, // 72: api.v1.ExecutorService.Download:input_type -> api.v1.DownloadRequest
	12, // 73: api.v1.ExecutorService.Cancel:input_type -> api.v1.CancelRequest
	3,  // 74: api.v1.ExecutorService.Validate:input_type -> api.v1.ValidateRequest
	62, // 75: api.v1.MetadataService.Health:output_type -> common.v1.HealthResponse
	27, // 76: api.v1.DeprecatedService.Workflow:output_type -> api.v1.WorkflowResponse
	7,  // 77: api.v1.ExecutorService.Await:output_type -> api.v1.AwaitResponse
	20, // 78: api.v1.ExecutorService.TwoWayStream:output_type -> api.v1.TwoWayResponse
	24, // 79: api.v1.ExecutorService.MetadataDeprecated:output_type -> api.v1.MetadataResponse
	24, // 80: api.v1.ExecutorService.Metadata:output_type -> api.v1.MetadataResponse
	15, // 81: api.v1.ExecutorService.Test:output_type -> api.v1.TestResponse
	17, // 82: api.v1.ExecutorService.Delete:output_type -> api.v1.DeleteResponse
	8,  // 83: api.v1.ExecutorService.Async:output_type -> api.v1.AsyncResponse
	9,  // 84: api.v1.ExecutorService.Stream:output_type -> api.v1.StreamResponse
	7,  // 85: api.v1.ExecutorService.Status:output_type -> api.v1.AwaitResponse
	11, // 86: api.v1.ExecutorService.Output:output_type -> api.v1.OutputResponse
	26, // 87: api.v1.ExecutorService.Download:output_type -> api.v1.DownloadResponse
	13, // 88: api.v1.ExecutorService.Cancel:output_type -> api.v1.CancelResponse
	63, // 89: api.v1.ExecutorService.Validate:output_type -> google.protobuf.Empty
	75, // [75:90] is the sub-list for method output_type
	60, // [60:75] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_api_v1_service_proto_init() }
func file_api_v1_service_proto_init() {
	if File_api_v1_service_proto != nil {
		return
	}
	file_api_v1_api_proto_init()
	file_api_v1_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwaitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoWayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoWayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequestDeprecated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest_Fetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_On); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_Return); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_BucketMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_BucketsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata_Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse_DatabaseSchemaMetadata_Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowResponse_ResponseMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ExecuteRequest_Definition)(nil),
		(*ExecuteRequest_Fetch_)(nil),
	}
	file_api_v1_service_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_api_v1_service_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*TwoWayRequest_Execute)(nil),
		(*TwoWayRequest_Function)(nil),
	}
	file_api_v1_service_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*TwoWayResponse_Stream)(nil),
		(*TwoWayResponse_Function)(nil),
	}
	file_api_v1_service_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*MetadataResponse_DatabaseSchemaMetadata_)(nil),
		(*MetadataResponse_BucketsMetadata_)(nil),
		(*MetadataResponse_Kafka)(nil),
		(*MetadataResponse_Cosmosdb)(nil),
		(*MetadataResponse_Adls)(nil),
	}
	file_api_v1_service_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_api_v1_service_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_api_v1_service_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_api_v1_service_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_api_v1_service_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*Mock_Return_Static)(nil),
		(*Mock_Return_Dynamic)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_v1_service_proto_goTypes,
		DependencyIndexes: file_api_v1_service_proto_depIdxs,
		EnumInfos:         file_api_v1_service_proto_enumTypes,
		MessageInfos:      file_api_v1_service_proto_msgTypes,
	}.Build()
	File_api_v1_service_proto = out.File
	file_api_v1_service_proto_rawDesc = nil
	file_api_v1_service_proto_goTypes = nil
	file_api_v1_service_proto_depIdxs = nil
}
