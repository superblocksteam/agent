// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: api/v1/event.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/superblocksteam/agent/types/gen/go/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockStatus int32

const (
	BlockStatus_BLOCK_STATUS_UNSPECIFIED BlockStatus = 0
	BlockStatus_BLOCK_STATUS_SUCCEEDED   BlockStatus = 1
	BlockStatus_BLOCK_STATUS_ERRORED     BlockStatus = 2
)

// Enum value maps for BlockStatus.
var (
	BlockStatus_name = map[int32]string{
		0: "BLOCK_STATUS_UNSPECIFIED",
		1: "BLOCK_STATUS_SUCCEEDED",
		2: "BLOCK_STATUS_ERRORED",
	}
	BlockStatus_value = map[string]int32{
		"BLOCK_STATUS_UNSPECIFIED": 0,
		"BLOCK_STATUS_SUCCEEDED":   1,
		"BLOCK_STATUS_ERRORED":     2,
	}
)

func (x BlockStatus) Enum() *BlockStatus {
	p := new(BlockStatus)
	*p = x
	return p
}

func (x BlockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_event_proto_enumTypes[0].Descriptor()
}

func (BlockStatus) Type() protoreflect.EnumType {
	return &file_api_v1_event_proto_enumTypes[0]
}

func (x BlockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockStatus.Descriptor instead.
func (BlockStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{0}
}

type BlockType int32

const (
	BlockType_BLOCK_TYPE_UNSPECIFIED BlockType = 0
	BlockType_BLOCK_TYPE_BREAK       BlockType = 1
	BlockType_BLOCK_TYPE_RETURN      BlockType = 2
	BlockType_BLOCK_TYPE_WAIT        BlockType = 3
	BlockType_BLOCK_TYPE_PARALLEL    BlockType = 4
	BlockType_BLOCK_TYPE_CONDITIONAL BlockType = 5
	BlockType_BLOCK_TYPE_LOOP        BlockType = 6
	BlockType_BLOCK_TYPE_TRYCATCH    BlockType = 7
	BlockType_BLOCK_TYPE_STEP        BlockType = 8
	BlockType_BLOCK_TYPE_VARIABLES   BlockType = 9
	BlockType_BLOCK_TYPE_THROW       BlockType = 10
	BlockType_BLOCK_TYPE_SEND        BlockType = 11
	BlockType_BLOCK_TYPE_STREAM      BlockType = 12
)

// Enum value maps for BlockType.
var (
	BlockType_name = map[int32]string{
		0:  "BLOCK_TYPE_UNSPECIFIED",
		1:  "BLOCK_TYPE_BREAK",
		2:  "BLOCK_TYPE_RETURN",
		3:  "BLOCK_TYPE_WAIT",
		4:  "BLOCK_TYPE_PARALLEL",
		5:  "BLOCK_TYPE_CONDITIONAL",
		6:  "BLOCK_TYPE_LOOP",
		7:  "BLOCK_TYPE_TRYCATCH",
		8:  "BLOCK_TYPE_STEP",
		9:  "BLOCK_TYPE_VARIABLES",
		10: "BLOCK_TYPE_THROW",
		11: "BLOCK_TYPE_SEND",
		12: "BLOCK_TYPE_STREAM",
	}
	BlockType_value = map[string]int32{
		"BLOCK_TYPE_UNSPECIFIED": 0,
		"BLOCK_TYPE_BREAK":       1,
		"BLOCK_TYPE_RETURN":      2,
		"BLOCK_TYPE_WAIT":        3,
		"BLOCK_TYPE_PARALLEL":    4,
		"BLOCK_TYPE_CONDITIONAL": 5,
		"BLOCK_TYPE_LOOP":        6,
		"BLOCK_TYPE_TRYCATCH":    7,
		"BLOCK_TYPE_STEP":        8,
		"BLOCK_TYPE_VARIABLES":   9,
		"BLOCK_TYPE_THROW":       10,
		"BLOCK_TYPE_SEND":        11,
		"BLOCK_TYPE_STREAM":      12,
	}
)

func (x BlockType) Enum() *BlockType {
	p := new(BlockType)
	*p = x
	return p
}

func (x BlockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_event_proto_enumTypes[1].Descriptor()
}

func (BlockType) Type() protoreflect.EnumType {
	return &file_api_v1_event_proto_enumTypes[1]
}

func (x BlockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockType.Descriptor instead.
func (BlockType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1}
}

type Resolved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *structpb.Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// If the value was comprised of more than one bindings, the individual resolutions will be here.
	Bindings []*structpb.Value `protobuf:"bytes,2,rep,name=bindings,proto3" json:"bindings,omitempty"`
}

func (x *Resolved) Reset() {
	*x = Resolved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resolved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resolved) ProtoMessage() {}

func (x *Resolved) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resolved.ProtoReflect.Descriptor instead.
func (*Resolved) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *Resolved) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Resolved) GetBindings() []*structpb.Value {
	if x != nil {
		return x.Bindings
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      BlockType              `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.BlockType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//
	//	*Event_Start_
	//	*Event_End_
	//	*Event_Data_
	//	*Event_Request_
	//	*Event_Response_
	Event isEvent_Event `protobuf_oneof:"event"`
	// The name of the parent block, if any.
	Parent *string `protobuf:"bytes,6,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	// *
	// The execution index if this is child step of parallels and loops.
	ExecutionIndex *string `protobuf:"bytes,8,opt,name=execution_index,json=executionIndex,proto3,oneof" json:"execution_index,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetType() BlockType {
	if x != nil {
		return x.Type
	}
	return BlockType_BLOCK_TYPE_UNSPECIFIED
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetStart() *Event_Start {
	if x, ok := x.GetEvent().(*Event_Start_); ok {
		return x.Start
	}
	return nil
}

func (x *Event) GetEnd() *Event_End {
	if x, ok := x.GetEvent().(*Event_End_); ok {
		return x.End
	}
	return nil
}

func (x *Event) GetData() *Event_Data {
	if x, ok := x.GetEvent().(*Event_Data_); ok {
		return x.Data
	}
	return nil
}

func (x *Event) GetRequest() *Event_Request {
	if x, ok := x.GetEvent().(*Event_Request_); ok {
		return x.Request
	}
	return nil
}

func (x *Event) GetResponse() *Event_Response {
	if x, ok := x.GetEvent().(*Event_Response_); ok {
		return x.Response
	}
	return nil
}

func (x *Event) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *Event) GetExecutionIndex() string {
	if x != nil && x.ExecutionIndex != nil {
		return *x.ExecutionIndex
	}
	return ""
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Start_ struct {
	Start *Event_Start `protobuf:"bytes,4,opt,name=start,proto3,oneof"`
}

type Event_End_ struct {
	End *Event_End `protobuf:"bytes,5,opt,name=end,proto3,oneof"`
}

type Event_Data_ struct {
	Data *Event_Data `protobuf:"bytes,7,opt,name=data,proto3,oneof"`
}

type Event_Request_ struct {
	Request *Event_Request `protobuf:"bytes,9,opt,name=request,proto3,oneof"`
}

type Event_Response_ struct {
	Response *Event_Response `protobuf:"bytes,10,opt,name=response,proto3,oneof"` // TODO(frank): Whoops; move function requests here.
}

func (*Event_Start_) isEvent_Event() {}

func (*Event_End_) isEvent_Event() {}

func (*Event_Data_) isEvent_Event() {}

func (*Event_Request_) isEvent_Event() {}

func (*Event_Response_) isEvent_Event() {}

type Performance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start     int64            `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Finish    int64            `protobuf:"varint,2,opt,name=finish,proto3" json:"finish,omitempty"`
	Total     int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Execution int64            `protobuf:"varint,4,opt,name=execution,proto3" json:"execution,omitempty"`
	Overhead  int64            `protobuf:"varint,5,opt,name=overhead,proto3" json:"overhead,omitempty"`
	Custom    map[string]int64 `protobuf:"bytes,6,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Performance) Reset() {
	*x = Performance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Performance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Performance) ProtoMessage() {}

func (x *Performance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Performance.ProtoReflect.Descriptor instead.
func (*Performance) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *Performance) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Performance) GetFinish() int64 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *Performance) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Performance) GetExecution() int64 {
	if x != nil {
		return x.Execution
	}
	return 0
}

func (x *Performance) GetOverhead() int64 {
	if x != nil {
		return x.Overhead
	}
	return 0
}

func (x *Performance) GetCustom() map[string]int64 {
	if x != nil {
		return x.Custom
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The JSON encoded response.
	Result *structpb.Value `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// The original request.
	Request   string          `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Stdout    []string        `protobuf:"bytes,3,rep,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr    []string        `protobuf:"bytes,4,rep,name=stderr,proto3" json:"stderr,omitempty"`
	RequestV2 *Output_Request `protobuf:"bytes,5,opt,name=request_v2,json=requestV2,proto3" json:"request_v2,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetResult() *structpb.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Output) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *Output) GetStdout() []string {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Output) GetStderr() []string {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Output) GetRequestV2() *Output_Request {
	if x != nil {
		return x.RequestV2
	}
	return nil
}

type OutputOld struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output           *structpb.Value `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Log              []string        `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty"`
	Request          string          `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	PlaceHoldersInfo *structpb.Value `protobuf:"bytes,4,opt,name=place_holders_info,json=placeHoldersInfo,proto3" json:"place_holders_info,omitempty"`
}

func (x *OutputOld) Reset() {
	*x = OutputOld{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputOld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputOld) ProtoMessage() {}

func (x *OutputOld) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputOld.ProtoReflect.Descriptor instead.
func (*OutputOld) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *OutputOld) GetOutput() *structpb.Value {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *OutputOld) GetLog() []string {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *OutputOld) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *OutputOld) GetPlaceHoldersInfo() *structpb.Value {
	if x != nil {
		return x.PlaceHoldersInfo
	}
	return nil
}

type Event_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *structpb.Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Event_Data) Reset() {
	*x = Event_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Data) ProtoMessage() {}

func (x *Event_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Data.ProtoReflect.Descriptor instead.
func (*Event_Data) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Event_Data) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// Represents the start of an Api.
type Event_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Event_Request) Reset() {
	*x = Event_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Request) ProtoMessage() {}

func (x *Event_Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Request.ProtoReflect.Descriptor instead.
func (*Event_Request) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1, 1}
}

// Represents the completion of an Api.
type Event_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the block that represents the response of the Api.
	Last string `protobuf:"bytes,1,opt,name=last,proto3" json:"last,omitempty"`
	// The errors, if any.
	Errors []*v1.Error `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *Event_Response) Reset() {
	*x = Event_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Response) ProtoMessage() {}

func (x *Event_Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Response.ProtoReflect.Descriptor instead.
func (*Event_Response) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Event_Response) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

func (x *Event_Response) GetErrors() []*v1.Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Event_Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Event_Start) Reset() {
	*x = Event_Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Start) ProtoMessage() {}

func (x *Event_Start) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Start.ProtoReflect.Descriptor instead.
func (*Event_Start) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1, 3}
}

type Event_End struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Performance data for the block that just ended.
	Performance *Performance `protobuf:"bytes,1,opt,name=performance,proto3" json:"performance,omitempty"`
	// The block's output.
	Output *Output `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// The error, if any.
	Error  *v1.Error   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Status BlockStatus `protobuf:"varint,4,opt,name=status,proto3,enum=api.v1.BlockStatus" json:"status,omitempty"`
	// Any resolved bindings.
	Resolved map[string]*Resolved `protobuf:"bytes,5,rep,name=resolved,proto3" json:"resolved,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Event_End) Reset() {
	*x = Event_End{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_End) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_End) ProtoMessage() {}

func (x *Event_End) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_End.ProtoReflect.Descriptor instead.
func (*Event_End) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Event_End) GetPerformance() *Performance {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *Event_End) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *Event_End) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Event_End) GetStatus() BlockStatus {
	if x != nil {
		return x.Status
	}
	return BlockStatus_BLOCK_STATUS_UNSPECIFIED
}

func (x *Event_End) GetResolved() map[string]*Resolved {
	if x != nil {
		return x.Resolved
	}
	return nil
}

type Output_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary  string           `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Metadata *structpb.Struct `protobuf:"bytes,5,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *Output_Request) Reset() {
	*x = Output_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output_Request) ProtoMessage() {}

func (x *Output_Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output_Request.ProtoReflect.Descriptor instead.
func (*Output_Request) Descriptor() ([]byte, []int) {
	return file_api_v1_event_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Output_Request) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Output_Request) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_api_v1_event_proto protoreflect.FileDescriptor

var file_api_v1_event_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xd0, 0x07, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0xba, 0x48, 0x06, 0x82, 0x01, 0x03, 0x22, 0x01,
	0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x31, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x1a, 0x34, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x07,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x1a, 0xd8, 0x02, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x12,
	0x35, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x11, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x20, 0x00, 0xba, 0x48, 0x06, 0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x1a, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xff, 0x01, 0x0a, 0x0b, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02, 0x0a,
	0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x6a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f,
	0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x12, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x61, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xbd, 0x02, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x52, 0x45, 0x41, 0x4b, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x10, 0x06, 0x12, 0x17, 0x0a,
	0x13, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x59, 0x43,
	0x41, 0x54, 0x43, 0x48, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x53, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x4f, 0x57, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x0b,
	0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x0c, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_event_proto_rawDescOnce sync.Once
	file_api_v1_event_proto_rawDescData = file_api_v1_event_proto_rawDesc
)

func file_api_v1_event_proto_rawDescGZIP() []byte {
	file_api_v1_event_proto_rawDescOnce.Do(func() {
		file_api_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_event_proto_rawDescData)
	})
	return file_api_v1_event_proto_rawDescData
}

var file_api_v1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v1_event_proto_goTypes = []interface{}{
	(BlockStatus)(0),              // 0: api.v1.BlockStatus
	(BlockType)(0),                // 1: api.v1.BlockType
	(*Resolved)(nil),              // 2: api.v1.Resolved
	(*Event)(nil),                 // 3: api.v1.Event
	(*Performance)(nil),           // 4: api.v1.Performance
	(*Output)(nil),                // 5: api.v1.Output
	(*OutputOld)(nil),             // 6: api.v1.OutputOld
	(*Event_Data)(nil),            // 7: api.v1.Event.Data
	(*Event_Request)(nil),         // 8: api.v1.Event.Request
	(*Event_Response)(nil),        // 9: api.v1.Event.Response
	(*Event_Start)(nil),           // 10: api.v1.Event.Start
	(*Event_End)(nil),             // 11: api.v1.Event.End
	nil,                           // 12: api.v1.Event.End.ResolvedEntry
	nil,                           // 13: api.v1.Performance.CustomEntry
	(*Output_Request)(nil),        // 14: api.v1.Output.Request
	(*structpb.Value)(nil),        // 15: google.protobuf.Value
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
	(*v1.Error)(nil),              // 17: common.v1.Error
	(*structpb.Struct)(nil),       // 18: google.protobuf.Struct
}
var file_api_v1_event_proto_depIdxs = []int32{
	15, // 0: api.v1.Resolved.value:type_name -> google.protobuf.Value
	15, // 1: api.v1.Resolved.bindings:type_name -> google.protobuf.Value
	1,  // 2: api.v1.Event.type:type_name -> api.v1.BlockType
	16, // 3: api.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	10, // 4: api.v1.Event.start:type_name -> api.v1.Event.Start
	11, // 5: api.v1.Event.end:type_name -> api.v1.Event.End
	7,  // 6: api.v1.Event.data:type_name -> api.v1.Event.Data
	8,  // 7: api.v1.Event.request:type_name -> api.v1.Event.Request
	9,  // 8: api.v1.Event.response:type_name -> api.v1.Event.Response
	13, // 9: api.v1.Performance.custom:type_name -> api.v1.Performance.CustomEntry
	15, // 10: api.v1.Output.result:type_name -> google.protobuf.Value
	14, // 11: api.v1.Output.request_v2:type_name -> api.v1.Output.Request
	15, // 12: api.v1.OutputOld.output:type_name -> google.protobuf.Value
	15, // 13: api.v1.OutputOld.place_holders_info:type_name -> google.protobuf.Value
	15, // 14: api.v1.Event.Data.value:type_name -> google.protobuf.Value
	17, // 15: api.v1.Event.Response.errors:type_name -> common.v1.Error
	4,  // 16: api.v1.Event.End.performance:type_name -> api.v1.Performance
	5,  // 17: api.v1.Event.End.output:type_name -> api.v1.Output
	17, // 18: api.v1.Event.End.error:type_name -> common.v1.Error
	0,  // 19: api.v1.Event.End.status:type_name -> api.v1.BlockStatus
	12, // 20: api.v1.Event.End.resolved:type_name -> api.v1.Event.End.ResolvedEntry
	2,  // 21: api.v1.Event.End.ResolvedEntry.value:type_name -> api.v1.Resolved
	18, // 22: api.v1.Output.Request.metadata:type_name -> google.protobuf.Struct
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_v1_event_proto_init() }
func file_api_v1_event_proto_init() {
	if File_api_v1_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resolved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Performance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputOld); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_End); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_event_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Event_Start_)(nil),
		(*Event_End_)(nil),
		(*Event_Data_)(nil),
		(*Event_Request_)(nil),
		(*Event_Response_)(nil),
	}
	file_api_v1_event_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_event_proto_goTypes,
		DependencyIndexes: file_api_v1_event_proto_depIdxs,
		EnumInfos:         file_api_v1_event_proto_enumTypes,
		MessageInfos:      file_api_v1_event_proto_msgTypes,
	}.Build()
	File_api_v1_event_proto = out.File
	file_api_v1_event_proto_rawDesc = nil
	file_api_v1_event_proto_goTypes = nil
	file_api_v1_event_proto_depIdxs = nil
}
