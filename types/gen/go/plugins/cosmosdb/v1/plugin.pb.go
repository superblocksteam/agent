// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/cosmosdb/v1/plugin.proto

package v1

import (
	v1 "github.com/superblocksteam/agent/types/gen/go/plugins/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                         *string                          `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	DynamicWorkflowConfiguration *v1.DynamicWorkflowConfiguration `protobuf:"bytes,2,opt,name=dynamic_workflow_configuration,json=dynamicWorkflowConfiguration,proto3,oneof" json:"dynamic_workflow_configuration,omitempty"`
	Connection                   *Plugin_CosmosDbConnection       `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
	// ideally, this would be inside the connection_type but due to our auth flow we do this.
	//
	// Types that are assignable to CosmosdbAction:
	//
	//	*Plugin_Sql_
	//	*Plugin_PointOperation_
	CosmosdbAction isPlugin_CosmosdbAction `protobuf_oneof:"cosmosdb_action"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Plugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plugin) GetDynamicWorkflowConfiguration() *v1.DynamicWorkflowConfiguration {
	if x != nil {
		return x.DynamicWorkflowConfiguration
	}
	return nil
}

func (x *Plugin) GetConnection() *Plugin_CosmosDbConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (m *Plugin) GetCosmosdbAction() isPlugin_CosmosdbAction {
	if m != nil {
		return m.CosmosdbAction
	}
	return nil
}

func (x *Plugin) GetSql() *Plugin_Sql {
	if x, ok := x.GetCosmosdbAction().(*Plugin_Sql_); ok {
		return x.Sql
	}
	return nil
}

func (x *Plugin) GetPointOperation() *Plugin_PointOperation {
	if x, ok := x.GetCosmosdbAction().(*Plugin_PointOperation_); ok {
		return x.PointOperation
	}
	return nil
}

type isPlugin_CosmosdbAction interface {
	isPlugin_CosmosdbAction()
}

type Plugin_Sql_ struct {
	Sql *Plugin_Sql `protobuf:"bytes,5,opt,name=sql,proto3,oneof"`
}

type Plugin_PointOperation_ struct {
	// these operations will only ever affect a single item
	PointOperation *Plugin_PointOperation `protobuf:"bytes,6,opt,name=point_operation,json=pointOperation,proto3,oneof"`
}

func (*Plugin_Sql_) isPlugin_CosmosdbAction() {}

func (*Plugin_PointOperation_) isPlugin_CosmosdbAction() {}

type Plugin_CosmosDbConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port       int32     `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	DatabaseId string    `protobuf:"bytes,3,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	Auth       *v1.Azure `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *Plugin_CosmosDbConnection) Reset() {
	*x = Plugin_CosmosDbConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CosmosDbConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CosmosDbConnection) ProtoMessage() {}

func (x *Plugin_CosmosDbConnection) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CosmosDbConnection.ProtoReflect.Descriptor instead.
func (*Plugin_CosmosDbConnection) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Plugin_CosmosDbConnection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Plugin_CosmosDbConnection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Plugin_CosmosDbConnection) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *Plugin_CosmosDbConnection) GetAuth() *v1.Azure {
	if x != nil {
		return x.Auth
	}
	return nil
}

type Plugin_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*Plugin_Metadata_Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *Plugin_Metadata) Reset() {
	*x = Plugin_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata) ProtoMessage() {}

func (x *Plugin_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Plugin_Metadata) GetContainers() []*Plugin_Metadata_Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

// Action Fields
type Plugin_Sql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*Plugin_Sql_Singleton_
	Action isPlugin_Sql_Action `protobuf_oneof:"action"`
}

func (x *Plugin_Sql) Reset() {
	*x = Plugin_Sql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Sql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Sql) ProtoMessage() {}

func (x *Plugin_Sql) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Sql.ProtoReflect.Descriptor instead.
func (*Plugin_Sql) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (m *Plugin_Sql) GetAction() isPlugin_Sql_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Plugin_Sql) GetSingleton() *Plugin_Sql_Singleton {
	if x, ok := x.GetAction().(*Plugin_Sql_Singleton_); ok {
		return x.Singleton
	}
	return nil
}

type isPlugin_Sql_Action interface {
	isPlugin_Sql_Action()
}

type Plugin_Sql_Singleton_ struct {
	Singleton *Plugin_Sql_Singleton `protobuf:"bytes,1,opt,name=singleton,proto3,oneof"`
}

func (*Plugin_Sql_Singleton_) isPlugin_Sql_Action() {}

type Plugin_PointOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Types that are assignable to Action:
	//
	//	*Plugin_PointOperation_Read_
	//	*Plugin_PointOperation_Replace_
	//	*Plugin_PointOperation_Upsert_
	//	*Plugin_PointOperation_Delete_
	//	*Plugin_PointOperation_Create_
	Action isPlugin_PointOperation_Action `protobuf_oneof:"action"`
}

func (x *Plugin_PointOperation) Reset() {
	*x = Plugin_PointOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation) ProtoMessage() {}

func (x *Plugin_PointOperation) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Plugin_PointOperation) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (m *Plugin_PointOperation) GetAction() isPlugin_PointOperation_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Plugin_PointOperation) GetRead() *Plugin_PointOperation_Read {
	if x, ok := x.GetAction().(*Plugin_PointOperation_Read_); ok {
		return x.Read
	}
	return nil
}

func (x *Plugin_PointOperation) GetReplace() *Plugin_PointOperation_Replace {
	if x, ok := x.GetAction().(*Plugin_PointOperation_Replace_); ok {
		return x.Replace
	}
	return nil
}

func (x *Plugin_PointOperation) GetUpsert() *Plugin_PointOperation_Upsert {
	if x, ok := x.GetAction().(*Plugin_PointOperation_Upsert_); ok {
		return x.Upsert
	}
	return nil
}

func (x *Plugin_PointOperation) GetDelete() *Plugin_PointOperation_Delete {
	if x, ok := x.GetAction().(*Plugin_PointOperation_Delete_); ok {
		return x.Delete
	}
	return nil
}

func (x *Plugin_PointOperation) GetCreate() *Plugin_PointOperation_Create {
	if x, ok := x.GetAction().(*Plugin_PointOperation_Create_); ok {
		return x.Create
	}
	return nil
}

type isPlugin_PointOperation_Action interface {
	isPlugin_PointOperation_Action()
}

type Plugin_PointOperation_Read_ struct {
	Read *Plugin_PointOperation_Read `protobuf:"bytes,2,opt,name=read,proto3,oneof"`
}

type Plugin_PointOperation_Replace_ struct {
	Replace *Plugin_PointOperation_Replace `protobuf:"bytes,3,opt,name=replace,proto3,oneof"`
}

type Plugin_PointOperation_Upsert_ struct {
	Upsert *Plugin_PointOperation_Upsert `protobuf:"bytes,4,opt,name=upsert,proto3,oneof"`
}

type Plugin_PointOperation_Delete_ struct {
	Delete *Plugin_PointOperation_Delete `protobuf:"bytes,5,opt,name=delete,proto3,oneof"`
}

type Plugin_PointOperation_Create_ struct {
	Create *Plugin_PointOperation_Create `protobuf:"bytes,6,opt,name=create,proto3,oneof"`
}

func (*Plugin_PointOperation_Read_) isPlugin_PointOperation_Action() {}

func (*Plugin_PointOperation_Replace_) isPlugin_PointOperation_Action() {}

func (*Plugin_PointOperation_Upsert_) isPlugin_PointOperation_Action() {}

func (*Plugin_PointOperation_Delete_) isPlugin_PointOperation_Action() {}

func (*Plugin_PointOperation_Create_) isPlugin_PointOperation_Action() {}

type Plugin_Metadata_Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartitionKey *Plugin_Metadata_Container_PartitionKey `protobuf:"bytes,2,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
}

func (x *Plugin_Metadata_Container) Reset() {
	*x = Plugin_Metadata_Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata_Container) ProtoMessage() {}

func (x *Plugin_Metadata_Container) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata_Container.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata_Container) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Plugin_Metadata_Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Plugin_Metadata_Container) GetPartitionKey() *Plugin_Metadata_Container_PartitionKey {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

type Plugin_Metadata_Container_PartitionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths   []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	Kind    string   `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Version *int32   `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *Plugin_Metadata_Container_PartitionKey) Reset() {
	*x = Plugin_Metadata_Container_PartitionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata_Container_PartitionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata_Container_PartitionKey) ProtoMessage() {}

func (x *Plugin_Metadata_Container_PartitionKey) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata_Container_PartitionKey.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata_Container_PartitionKey) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Plugin_Metadata_Container_PartitionKey) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *Plugin_Metadata_Container_PartitionKey) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Plugin_Metadata_Container_PartitionKey) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Items.ts#L87
type Plugin_Sql_Singleton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId    string  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Query          string  `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	CrossPartition bool    `protobuf:"varint,3,opt,name=cross_partition,json=crossPartition,proto3" json:"cross_partition,omitempty"`
	PartitionKey   *string `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_Sql_Singleton) Reset() {
	*x = Plugin_Sql_Singleton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Sql_Singleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Sql_Singleton) ProtoMessage() {}

func (x *Plugin_Sql_Singleton) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Sql_Singleton.ProtoReflect.Descriptor instead.
func (*Plugin_Sql_Singleton) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Plugin_Sql_Singleton) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Plugin_Sql_Singleton) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *Plugin_Sql_Singleton) GetCrossPartition() bool {
	if x != nil {
		return x.CrossPartition
	}
	return false
}

func (x *Plugin_Sql_Singleton) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Item.ts#L78
type Plugin_PointOperation_Read struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_PointOperation_Read) Reset() {
	*x = Plugin_PointOperation_Read{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation_Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation_Read) ProtoMessage() {}

func (x *Plugin_PointOperation_Read) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation_Read.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation_Read) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Plugin_PointOperation_Read) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Plugin_PointOperation_Read) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Item.ts#L196
type Plugin_PointOperation_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_PointOperation_Delete) Reset() {
	*x = Plugin_PointOperation_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation_Delete) ProtoMessage() {}

func (x *Plugin_PointOperation_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation_Delete.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation_Delete) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *Plugin_PointOperation_Delete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Plugin_PointOperation_Delete) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Item.ts#L128
type Plugin_PointOperation_Replace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body         string  `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_PointOperation_Replace) Reset() {
	*x = Plugin_PointOperation_Replace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation_Replace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation_Replace) ProtoMessage() {}

func (x *Plugin_PointOperation_Replace) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation_Replace.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation_Replace) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 2}
}

func (x *Plugin_PointOperation_Replace) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Plugin_PointOperation_Replace) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Items.ts#L355
type Plugin_PointOperation_Upsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body         string  `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_PointOperation_Upsert) Reset() {
	*x = Plugin_PointOperation_Upsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation_Upsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation_Upsert) ProtoMessage() {}

func (x *Plugin_PointOperation_Upsert) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation_Upsert.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation_Upsert) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 3}
}

func (x *Plugin_PointOperation_Upsert) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Plugin_PointOperation_Upsert) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

// https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/cosmosdb/cosmos/src/client/Item/Items.ts#L295
type Plugin_PointOperation_Create struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body         string  `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
}

func (x *Plugin_PointOperation_Create) Reset() {
	*x = Plugin_PointOperation_Create{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_PointOperation_Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_PointOperation_Create) ProtoMessage() {}

func (x *Plugin_PointOperation_Create) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_cosmosdb_v1_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_PointOperation_Create.ProtoReflect.Descriptor instead.
func (*Plugin_PointOperation_Create) Descriptor() ([]byte, []int) {
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 4}
}

func (x *Plugin_PointOperation_Create) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Plugin_PointOperation_Create) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

var File_plugins_cosmosdb_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_cosmosdb_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x10, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x7a, 0x0a, 0x1e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x02, 0x52, 0x1c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x44, 0x62, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x53, 0x71, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x55, 0x0a, 0x0f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x8b, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x44, 0x62, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a,
	0xbf, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0xe2, 0x01, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0x63, 0x0a, 0x0c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x86, 0x02, 0x0a, 0x03, 0x53, 0x71, 0x6c, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x71, 0x6c, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x1a, 0xa9, 0x01, 0x0a, 0x09, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf4, 0x06, 0x0a, 0x0e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x45, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x4e, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x52,
	0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x1a, 0x54, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0d,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x1a, 0x58, 0x0a, 0x06, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x1a, 0x58, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x21, 0x0a,
	0x1f, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_cosmosdb_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_cosmosdb_v1_plugin_proto_rawDescData = file_plugins_cosmosdb_v1_plugin_proto_rawDesc
)

func file_plugins_cosmosdb_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_cosmosdb_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_cosmosdb_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_cosmosdb_v1_plugin_proto_rawDescData)
	})
	return file_plugins_cosmosdb_v1_plugin_proto_rawDescData
}

var file_plugins_cosmosdb_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_plugins_cosmosdb_v1_plugin_proto_goTypes = []interface{}{
	(*Plugin)(nil),                                 // 0: plugins.cosmosdb.v1.Plugin
	(*Plugin_CosmosDbConnection)(nil),              // 1: plugins.cosmosdb.v1.Plugin.CosmosDbConnection
	(*Plugin_Metadata)(nil),                        // 2: plugins.cosmosdb.v1.Plugin.Metadata
	(*Plugin_Sql)(nil),                             // 3: plugins.cosmosdb.v1.Plugin.Sql
	(*Plugin_PointOperation)(nil),                  // 4: plugins.cosmosdb.v1.Plugin.PointOperation
	(*Plugin_Metadata_Container)(nil),              // 5: plugins.cosmosdb.v1.Plugin.Metadata.Container
	(*Plugin_Metadata_Container_PartitionKey)(nil), // 6: plugins.cosmosdb.v1.Plugin.Metadata.Container.PartitionKey
	(*Plugin_Sql_Singleton)(nil),                   // 7: plugins.cosmosdb.v1.Plugin.Sql.Singleton
	(*Plugin_PointOperation_Read)(nil),             // 8: plugins.cosmosdb.v1.Plugin.PointOperation.Read
	(*Plugin_PointOperation_Delete)(nil),           // 9: plugins.cosmosdb.v1.Plugin.PointOperation.Delete
	(*Plugin_PointOperation_Replace)(nil),          // 10: plugins.cosmosdb.v1.Plugin.PointOperation.Replace
	(*Plugin_PointOperation_Upsert)(nil),           // 11: plugins.cosmosdb.v1.Plugin.PointOperation.Upsert
	(*Plugin_PointOperation_Create)(nil),           // 12: plugins.cosmosdb.v1.Plugin.PointOperation.Create
	(*v1.DynamicWorkflowConfiguration)(nil),        // 13: plugins.common.v1.DynamicWorkflowConfiguration
	(*v1.Azure)(nil),                               // 14: plugins.common.v1.Azure
}
var file_plugins_cosmosdb_v1_plugin_proto_depIdxs = []int32{
	13, // 0: plugins.cosmosdb.v1.Plugin.dynamic_workflow_configuration:type_name -> plugins.common.v1.DynamicWorkflowConfiguration
	1,  // 1: plugins.cosmosdb.v1.Plugin.connection:type_name -> plugins.cosmosdb.v1.Plugin.CosmosDbConnection
	3,  // 2: plugins.cosmosdb.v1.Plugin.sql:type_name -> plugins.cosmosdb.v1.Plugin.Sql
	4,  // 3: plugins.cosmosdb.v1.Plugin.point_operation:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation
	14, // 4: plugins.cosmosdb.v1.Plugin.CosmosDbConnection.auth:type_name -> plugins.common.v1.Azure
	5,  // 5: plugins.cosmosdb.v1.Plugin.Metadata.containers:type_name -> plugins.cosmosdb.v1.Plugin.Metadata.Container
	7,  // 6: plugins.cosmosdb.v1.Plugin.Sql.singleton:type_name -> plugins.cosmosdb.v1.Plugin.Sql.Singleton
	8,  // 7: plugins.cosmosdb.v1.Plugin.PointOperation.read:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation.Read
	10, // 8: plugins.cosmosdb.v1.Plugin.PointOperation.replace:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation.Replace
	11, // 9: plugins.cosmosdb.v1.Plugin.PointOperation.upsert:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation.Upsert
	9,  // 10: plugins.cosmosdb.v1.Plugin.PointOperation.delete:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation.Delete
	12, // 11: plugins.cosmosdb.v1.Plugin.PointOperation.create:type_name -> plugins.cosmosdb.v1.Plugin.PointOperation.Create
	6,  // 12: plugins.cosmosdb.v1.Plugin.Metadata.Container.partition_key:type_name -> plugins.cosmosdb.v1.Plugin.Metadata.Container.PartitionKey
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_plugins_cosmosdb_v1_plugin_proto_init() }
func file_plugins_cosmosdb_v1_plugin_proto_init() {
	if File_plugins_cosmosdb_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CosmosDbConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Sql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata_Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata_Container_PartitionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Sql_Singleton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation_Read); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation_Replace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation_Upsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_cosmosdb_v1_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_PointOperation_Create); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Plugin_Sql_)(nil),
		(*Plugin_PointOperation_)(nil),
	}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Plugin_Sql_Singleton_)(nil),
	}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Plugin_PointOperation_Read_)(nil),
		(*Plugin_PointOperation_Replace_)(nil),
		(*Plugin_PointOperation_Upsert_)(nil),
		(*Plugin_PointOperation_Delete_)(nil),
		(*Plugin_PointOperation_Create_)(nil),
	}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_plugins_cosmosdb_v1_plugin_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_cosmosdb_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_cosmosdb_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_cosmosdb_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_cosmosdb_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_cosmosdb_v1_plugin_proto = out.File
	file_plugins_cosmosdb_v1_plugin_proto_rawDesc = nil
	file_plugins_cosmosdb_v1_plugin_proto_goTypes = nil
	file_plugins_cosmosdb_v1_plugin_proto_depIdxs = nil
}
