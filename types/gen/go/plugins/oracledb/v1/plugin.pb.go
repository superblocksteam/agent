// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/oracledb/v1/plugin.proto

package v1

import (
	v1 "github.com/superblocksteam/agent/types/gen/go/plugins/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                         string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Connection                   *Plugin_OracleDbConnection       `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	DynamicWorkflowConfiguration *v1.DynamicWorkflowConfiguration `protobuf:"bytes,3,opt,name=dynamic_workflow_configuration,json=dynamicWorkflowConfiguration,proto3,oneof" json:"dynamic_workflow_configuration,omitempty"`
	RunSql                       *v1.SQLExecution                 `protobuf:"bytes,4,opt,name=run_sql,json=runSql,proto3" json:"run_sql,omitempty"`
	BulkEdit                     *v1.SQLBulkEdit                  `protobuf:"bytes,5,opt,name=bulk_edit,json=bulkEdit,proto3" json:"bulk_edit,omitempty"`
	Operation                    v1.SQLOperation                  `protobuf:"varint,6,opt,name=operation,proto3,enum=plugins.common.v1.SQLOperation" json:"operation,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_oracledb_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_oracledb_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_oracledb_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetConnection() *Plugin_OracleDbConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *Plugin) GetDynamicWorkflowConfiguration() *v1.DynamicWorkflowConfiguration {
	if x != nil {
		return x.DynamicWorkflowConfiguration
	}
	return nil
}

func (x *Plugin) GetRunSql() *v1.SQLExecution {
	if x != nil {
		return x.RunSql
	}
	return nil
}

func (x *Plugin) GetBulkEdit() *v1.SQLBulkEdit {
	if x != nil {
		return x.BulkEdit
	}
	return nil
}

func (x *Plugin) GetOperation() v1.SQLOperation {
	if x != nil {
		return x.Operation
	}
	return v1.SQLOperation(0)
}

type Plugin_OracleDbConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostUrl         string `protobuf:"bytes,1,opt,name=host_url,json=hostUrl,proto3" json:"host_url,omitempty"`
	Port            int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	User            string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Password        string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	DatabaseService string `protobuf:"bytes,5,opt,name=database_service,json=databaseService,proto3" json:"database_service,omitempty"`
	UseTcps         bool   `protobuf:"varint,6,opt,name=use_tcps,json=useTcps,proto3" json:"use_tcps,omitempty"`
	ConnectionType  string `protobuf:"bytes,7,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ConnectionUrl   string `protobuf:"bytes,8,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
}

func (x *Plugin_OracleDbConnection) Reset() {
	*x = Plugin_OracleDbConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_oracledb_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_OracleDbConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_OracleDbConnection) ProtoMessage() {}

func (x *Plugin_OracleDbConnection) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_oracledb_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_OracleDbConnection.ProtoReflect.Descriptor instead.
func (*Plugin_OracleDbConnection) Descriptor() ([]byte, []int) {
	return file_plugins_oracledb_v1_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Plugin_OracleDbConnection) GetHostUrl() string {
	if x != nil {
		return x.HostUrl
	}
	return ""
}

func (x *Plugin_OracleDbConnection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Plugin_OracleDbConnection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Plugin_OracleDbConnection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Plugin_OracleDbConnection) GetDatabaseService() string {
	if x != nil {
		return x.DatabaseService
	}
	return ""
}

func (x *Plugin_OracleDbConnection) GetUseTcps() bool {
	if x != nil {
		return x.UseTcps
	}
	return false
}

func (x *Plugin_OracleDbConnection) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *Plugin_OracleDbConnection) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

var File_plugins_oracledb_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_oracledb_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x05, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x62,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x1e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x1c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x71, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x53, 0x71, 0x6c, 0x12, 0x3b, 0x0a, 0x09,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x51, 0x4c, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x08, 0x62, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x51, 0x4c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x89, 0x02, 0x0a, 0x12, 0x4f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x44, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x5f, 0x74, 0x63, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x54, 0x63, 0x70, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_oracledb_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_oracledb_v1_plugin_proto_rawDescData = file_plugins_oracledb_v1_plugin_proto_rawDesc
)

func file_plugins_oracledb_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_oracledb_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_oracledb_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_oracledb_v1_plugin_proto_rawDescData)
	})
	return file_plugins_oracledb_v1_plugin_proto_rawDescData
}

var file_plugins_oracledb_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_plugins_oracledb_v1_plugin_proto_goTypes = []interface{}{
	(*Plugin)(nil),                          // 0: plugins.oracledb.v1.Plugin
	(*Plugin_OracleDbConnection)(nil),       // 1: plugins.oracledb.v1.Plugin.OracleDbConnection
	(*v1.DynamicWorkflowConfiguration)(nil), // 2: plugins.common.v1.DynamicWorkflowConfiguration
	(*v1.SQLExecution)(nil),                 // 3: plugins.common.v1.SQLExecution
	(*v1.SQLBulkEdit)(nil),                  // 4: plugins.common.v1.SQLBulkEdit
	(v1.SQLOperation)(0),                    // 5: plugins.common.v1.SQLOperation
}
var file_plugins_oracledb_v1_plugin_proto_depIdxs = []int32{
	1, // 0: plugins.oracledb.v1.Plugin.connection:type_name -> plugins.oracledb.v1.Plugin.OracleDbConnection
	2, // 1: plugins.oracledb.v1.Plugin.dynamic_workflow_configuration:type_name -> plugins.common.v1.DynamicWorkflowConfiguration
	3, // 2: plugins.oracledb.v1.Plugin.run_sql:type_name -> plugins.common.v1.SQLExecution
	4, // 3: plugins.oracledb.v1.Plugin.bulk_edit:type_name -> plugins.common.v1.SQLBulkEdit
	5, // 4: plugins.oracledb.v1.Plugin.operation:type_name -> plugins.common.v1.SQLOperation
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_plugins_oracledb_v1_plugin_proto_init() }
func file_plugins_oracledb_v1_plugin_proto_init() {
	if File_plugins_oracledb_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_oracledb_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_oracledb_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_OracleDbConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_oracledb_v1_plugin_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_oracledb_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_oracledb_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_oracledb_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_oracledb_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_oracledb_v1_plugin_proto = out.File
	file_plugins_oracledb_v1_plugin_proto_rawDesc = nil
	file_plugins_oracledb_v1_plugin_proto_goTypes = nil
	file_plugins_oracledb_v1_plugin_proto_depIdxs = nil
}
