// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/common/v1/auth.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OAuthCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl     string `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	Audience     string `protobuf:"bytes,4,opt,name=audience,proto3" json:"audience,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *OAuthCommon) Reset() {
	*x = OAuthCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuthCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthCommon) ProtoMessage() {}

func (x *OAuthCommon) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthCommon.ProtoReflect.Descriptor instead.
func (*OAuthCommon) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *OAuthCommon) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuthCommon) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuthCommon) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuthCommon) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *OAuthCommon) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type OAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OAuth) Reset() {
	*x = OAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth) ProtoMessage() {}

func (x *OAuth) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth.ProtoReflect.Descriptor instead.
func (*OAuth) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{1}
}

type Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Basic) Reset() {
	*x = Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic) ProtoMessage() {}

func (x *Basic) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic.ProtoReflect.Descriptor instead.
func (*Basic) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *Basic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Basic) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//
	//	*Azure_Key_
	//	*Azure_ClientCredentials_
	Config isAzure_Config `protobuf_oneof:"config"`
}

func (x *Azure) Reset() {
	*x = Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Azure) ProtoMessage() {}

func (x *Azure) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Azure.ProtoReflect.Descriptor instead.
func (*Azure) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (m *Azure) GetConfig() isAzure_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *Azure) GetKey() *Azure_Key {
	if x, ok := x.GetConfig().(*Azure_Key_); ok {
		return x.Key
	}
	return nil
}

func (x *Azure) GetClientCredentials() *Azure_ClientCredentials {
	if x, ok := x.GetConfig().(*Azure_ClientCredentials_); ok {
		return x.ClientCredentials
	}
	return nil
}

type isAzure_Config interface {
	isAzure_Config()
}

type Azure_Key_ struct {
	Key *Azure_Key `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type Azure_ClientCredentials_ struct {
	ClientCredentials *Azure_ClientCredentials `protobuf:"bytes,2,opt,name=client_credentials,json=clientCredentials,proto3,oneof"`
}

func (*Azure_Key_) isAzure_Config() {}

func (*Azure_ClientCredentials_) isAzure_Config() {}

type AwsAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//
	//	*AwsAuth_Static_
	//	*AwsAuth_AssumeRole_
	Config isAwsAuth_Config `protobuf_oneof:"config"`
	Region string           `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *AwsAuth) Reset() {
	*x = AwsAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsAuth) ProtoMessage() {}

func (x *AwsAuth) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsAuth.ProtoReflect.Descriptor instead.
func (*AwsAuth) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (m *AwsAuth) GetConfig() isAwsAuth_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *AwsAuth) GetStatic() *AwsAuth_Static {
	if x, ok := x.GetConfig().(*AwsAuth_Static_); ok {
		return x.Static
	}
	return nil
}

func (x *AwsAuth) GetAssumeRole() *AwsAuth_AssumeRole {
	if x, ok := x.GetConfig().(*AwsAuth_AssumeRole_); ok {
		return x.AssumeRole
	}
	return nil
}

func (x *AwsAuth) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type isAwsAuth_Config interface {
	isAwsAuth_Config()
}

type AwsAuth_Static_ struct {
	Static *AwsAuth_Static `protobuf:"bytes,1,opt,name=static,proto3,oneof"`
}

type AwsAuth_AssumeRole_ struct {
	AssumeRole *AwsAuth_AssumeRole `protobuf:"bytes,2,opt,name=assume_role,json=assumeRole,proto3,oneof"`
}

func (*AwsAuth_Static_) isAwsAuth_Config() {}

func (*AwsAuth_AssumeRole_) isAwsAuth_Config() {}

type GcpAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//
	//	*GcpAuth_ServiceAccount
	Config isGcpAuth_Config `protobuf_oneof:"config"`
}

func (x *GcpAuth) Reset() {
	*x = GcpAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GcpAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpAuth) ProtoMessage() {}

func (x *GcpAuth) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpAuth.ProtoReflect.Descriptor instead.
func (*GcpAuth) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{5}
}

func (m *GcpAuth) GetConfig() isGcpAuth_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *GcpAuth) GetServiceAccount() []byte {
	if x, ok := x.GetConfig().(*GcpAuth_ServiceAccount); ok {
		return x.ServiceAccount
	}
	return nil
}

type isGcpAuth_Config interface {
	isGcpAuth_Config()
}

type GcpAuth_ServiceAccount struct {
	ServiceAccount []byte `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3,oneof"`
}

func (*GcpAuth_ServiceAccount) isGcpAuth_Config() {}

type AkeylessAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//
	//	*AkeylessAuth_ApiKey_
	//	*AkeylessAuth_Email_
	Config isAkeylessAuth_Config `protobuf_oneof:"config"`
}

func (x *AkeylessAuth) Reset() {
	*x = AkeylessAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkeylessAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkeylessAuth) ProtoMessage() {}

func (x *AkeylessAuth) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkeylessAuth.ProtoReflect.Descriptor instead.
func (*AkeylessAuth) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{6}
}

func (m *AkeylessAuth) GetConfig() isAkeylessAuth_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *AkeylessAuth) GetApiKey() *AkeylessAuth_ApiKey {
	if x, ok := x.GetConfig().(*AkeylessAuth_ApiKey_); ok {
		return x.ApiKey
	}
	return nil
}

func (x *AkeylessAuth) GetEmail() *AkeylessAuth_Email {
	if x, ok := x.GetConfig().(*AkeylessAuth_Email_); ok {
		return x.Email
	}
	return nil
}

type isAkeylessAuth_Config interface {
	isAkeylessAuth_Config()
}

type AkeylessAuth_ApiKey_ struct {
	ApiKey *AkeylessAuth_ApiKey `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3,oneof"`
}

type AkeylessAuth_Email_ struct {
	Email *AkeylessAuth_Email `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

func (*AkeylessAuth_ApiKey_) isAkeylessAuth_Config() {}

func (*AkeylessAuth_Email_) isAkeylessAuth_Config() {}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Method:
	//
	//	*Auth_PasswordGrantFlow
	//	*Auth_AuthorizationCodeFlow
	//	*Auth_Basic
	//	*Auth_ClientCredentialsFlow
	//	*Auth_Key
	Method isAuth_Method `protobuf_oneof:"method"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{7}
}

func (m *Auth) GetMethod() isAuth_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *Auth) GetPasswordGrantFlow() *OAuth_PasswordGrantFlow {
	if x, ok := x.GetMethod().(*Auth_PasswordGrantFlow); ok {
		return x.PasswordGrantFlow
	}
	return nil
}

func (x *Auth) GetAuthorizationCodeFlow() *OAuth_AuthorizationCodeFlow {
	if x, ok := x.GetMethod().(*Auth_AuthorizationCodeFlow); ok {
		return x.AuthorizationCodeFlow
	}
	return nil
}

func (x *Auth) GetBasic() *Basic {
	if x, ok := x.GetMethod().(*Auth_Basic); ok {
		return x.Basic
	}
	return nil
}

func (x *Auth) GetClientCredentialsFlow() *OAuth_ClientCredentialsFlow {
	if x, ok := x.GetMethod().(*Auth_ClientCredentialsFlow); ok {
		return x.ClientCredentialsFlow
	}
	return nil
}

func (x *Auth) GetKey() *Azure_Key {
	if x, ok := x.GetMethod().(*Auth_Key); ok {
		return x.Key
	}
	return nil
}

type isAuth_Method interface {
	isAuth_Method()
}

type Auth_PasswordGrantFlow struct {
	PasswordGrantFlow *OAuth_PasswordGrantFlow `protobuf:"bytes,1,opt,name=password_grant_flow,json=passwordGrantFlow,proto3,oneof"`
}

type Auth_AuthorizationCodeFlow struct {
	AuthorizationCodeFlow *OAuth_AuthorizationCodeFlow `protobuf:"bytes,2,opt,name=authorization_code_flow,json=authorizationCodeFlow,proto3,oneof"`
}

type Auth_Basic struct {
	Basic *Basic `protobuf:"bytes,3,opt,name=basic,proto3,oneof"`
}

type Auth_ClientCredentialsFlow struct {
	ClientCredentialsFlow *OAuth_ClientCredentialsFlow `protobuf:"bytes,4,opt,name=client_credentials_flow,json=clientCredentialsFlow,proto3,oneof"`
}

type Auth_Key struct {
	Key *Azure_Key `protobuf:"bytes,5,opt,name=key,proto3,oneof"` // todo: remove me when cosmos updates
}

func (*Auth_PasswordGrantFlow) isAuth_Method() {}

func (*Auth_AuthorizationCodeFlow) isAuth_Method() {}

func (*Auth_Basic) isAuth_Method() {}

func (*Auth_ClientCredentialsFlow) isAuth_Method() {}

func (*Auth_Key) isAuth_Method() {}

type OAuth_PasswordGrantFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl     string `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password     string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Audience     string `protobuf:"bytes,6,opt,name=audience,proto3" json:"audience,omitempty"`
	Scope        string `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *OAuth_PasswordGrantFlow) Reset() {
	*x = OAuth_PasswordGrantFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth_PasswordGrantFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth_PasswordGrantFlow) ProtoMessage() {}

func (x *OAuth_PasswordGrantFlow) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth_PasswordGrantFlow.ProtoReflect.Descriptor instead.
func (*OAuth_PasswordGrantFlow) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OAuth_PasswordGrantFlow) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *OAuth_PasswordGrantFlow) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type OAuth_ClientCredentialsFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl     string `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	Audience     string `protobuf:"bytes,4,opt,name=audience,proto3" json:"audience,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *OAuth_ClientCredentialsFlow) Reset() {
	*x = OAuth_ClientCredentialsFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth_ClientCredentialsFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth_ClientCredentialsFlow) ProtoMessage() {}

func (x *OAuth_ClientCredentialsFlow) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth_ClientCredentialsFlow.ProtoReflect.Descriptor instead.
func (*OAuth_ClientCredentialsFlow) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{1, 1}
}

func (x *OAuth_ClientCredentialsFlow) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth_ClientCredentialsFlow) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth_ClientCredentialsFlow) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuth_ClientCredentialsFlow) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *OAuth_ClientCredentialsFlow) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type OAuth_AuthorizationCodeFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId               string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret           string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl               string `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	AuthUrl                string `protobuf:"bytes,4,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	Audience               string `protobuf:"bytes,5,opt,name=audience,proto3" json:"audience,omitempty"`
	Scope                  string `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	TokenScope             string `protobuf:"bytes,7,opt,name=token_scope,json=tokenScope,proto3" json:"token_scope,omitempty"`
	RefreshTokenFromServer bool   `protobuf:"varint,8,opt,name=refresh_token_from_server,json=refreshTokenFromServer,proto3" json:"refresh_token_from_server,omitempty"`
	ClientAuthMethod       string `protobuf:"bytes,9,opt,name=client_auth_method,json=clientAuthMethod,proto3" json:"client_auth_method,omitempty"`
}

func (x *OAuth_AuthorizationCodeFlow) Reset() {
	*x = OAuth_AuthorizationCodeFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth_AuthorizationCodeFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth_AuthorizationCodeFlow) ProtoMessage() {}

func (x *OAuth_AuthorizationCodeFlow) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth_AuthorizationCodeFlow.ProtoReflect.Descriptor instead.
func (*OAuth_AuthorizationCodeFlow) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{1, 2}
}

func (x *OAuth_AuthorizationCodeFlow) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetTokenScope() string {
	if x != nil {
		return x.TokenScope
	}
	return ""
}

func (x *OAuth_AuthorizationCodeFlow) GetRefreshTokenFromServer() bool {
	if x != nil {
		return x.RefreshTokenFromServer
	}
	return false
}

func (x *OAuth_AuthorizationCodeFlow) GetClientAuthMethod() string {
	if x != nil {
		return x.ClientAuthMethod
	}
	return ""
}

type Azure_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterKey string `protobuf:"bytes,1,opt,name=master_key,json=masterKey,proto3" json:"master_key,omitempty"`
}

func (x *Azure_Key) Reset() {
	*x = Azure_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Azure_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Azure_Key) ProtoMessage() {}

func (x *Azure_Key) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Azure_Key.ProtoReflect.Descriptor instead.
func (*Azure_Key) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Azure_Key) GetMasterKey() string {
	if x != nil {
		return x.MasterKey
	}
	return ""
}

type Azure_ClientCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *Azure_ClientCredentials) Reset() {
	*x = Azure_ClientCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Azure_ClientCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Azure_ClientCredentials) ProtoMessage() {}

func (x *Azure_ClientCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Azure_ClientCredentials.ProtoReflect.Descriptor instead.
func (*Azure_ClientCredentials) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Azure_ClientCredentials) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Azure_ClientCredentials) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type AwsAuth_Static struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
}

func (x *AwsAuth_Static) Reset() {
	*x = AwsAuth_Static{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsAuth_Static) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsAuth_Static) ProtoMessage() {}

func (x *AwsAuth_Static) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsAuth_Static.ProtoReflect.Descriptor instead.
func (*AwsAuth_Static) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AwsAuth_Static) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AwsAuth_Static) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

type AwsAuth_AssumeRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleArn string `protobuf:"bytes,3,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`
}

func (x *AwsAuth_AssumeRole) Reset() {
	*x = AwsAuth_AssumeRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsAuth_AssumeRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsAuth_AssumeRole) ProtoMessage() {}

func (x *AwsAuth_AssumeRole) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsAuth_AssumeRole.ProtoReflect.Descriptor instead.
func (*AwsAuth_AssumeRole) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{4, 1}
}

func (x *AwsAuth_AssumeRole) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

type AkeylessAuth_ApiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessId  string `protobuf:"bytes,1,opt,name=access_id,json=accessId,proto3" json:"access_id,omitempty"`
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
}

func (x *AkeylessAuth_ApiKey) Reset() {
	*x = AkeylessAuth_ApiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkeylessAuth_ApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkeylessAuth_ApiKey) ProtoMessage() {}

func (x *AkeylessAuth_ApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkeylessAuth_ApiKey.ProtoReflect.Descriptor instead.
func (*AkeylessAuth_ApiKey) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AkeylessAuth_ApiKey) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *AkeylessAuth_ApiKey) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type AkeylessAuth_Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AkeylessAuth_Email) Reset() {
	*x = AkeylessAuth_Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_common_v1_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkeylessAuth_Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkeylessAuth_Email) ProtoMessage() {}

func (x *AkeylessAuth_Email) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_common_v1_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkeylessAuth_Email.ProtoReflect.Descriptor instead.
func (*AkeylessAuth_Email) Descriptor() ([]byte, []int) {
	return file_plugins_common_v1_auth_proto_rawDescGZIP(), []int{6, 1}
}

func (x *AkeylessAuth_Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AkeylessAuth_Email) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_plugins_common_v1_auth_proto protoreflect.FileDescriptor

var file_plugins_common_v1_auth_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x22, 0x9e, 0x01, 0x0a, 0x0b, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x22, 0xe1, 0x05, 0x0a, 0x05, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x1a, 0xdc, 0x01, 0x0a,
	0x11, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0xa8, 0x01, 0x0a, 0x15,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0xcd, 0x02, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6c, 0x6f, 0x77,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x19, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x3f, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x12, 0x30, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x5b, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x1a, 0x24, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a, 0x55, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb5, 0x02, 0x0a, 0x07, 0x41, 0x77, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x12, 0x48, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x2e, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x1a, 0x58, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x27, 0x0a, 0x0a,
	0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x41, 0x72, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x3e, 0x0a, 0x07, 0x47, 0x63, 0x70, 0x41, 0x75, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x9b, 0x02, 0x0a, 0x0c, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x41, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x1a, 0x44, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x39, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa6, 0x03,
	0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x5c, 0x0a, 0x13, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x48,
	0x00, 0x52, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x68, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x30,
	0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x68, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_plugins_common_v1_auth_proto_rawDescOnce sync.Once
	file_plugins_common_v1_auth_proto_rawDescData = file_plugins_common_v1_auth_proto_rawDesc
)

func file_plugins_common_v1_auth_proto_rawDescGZIP() []byte {
	file_plugins_common_v1_auth_proto_rawDescOnce.Do(func() {
		file_plugins_common_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_common_v1_auth_proto_rawDescData)
	})
	return file_plugins_common_v1_auth_proto_rawDescData
}

var file_plugins_common_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_plugins_common_v1_auth_proto_goTypes = []interface{}{
	(*OAuthCommon)(nil),                 // 0: plugins.common.v1.OAuthCommon
	(*OAuth)(nil),                       // 1: plugins.common.v1.OAuth
	(*Basic)(nil),                       // 2: plugins.common.v1.Basic
	(*Azure)(nil),                       // 3: plugins.common.v1.Azure
	(*AwsAuth)(nil),                     // 4: plugins.common.v1.AwsAuth
	(*GcpAuth)(nil),                     // 5: plugins.common.v1.GcpAuth
	(*AkeylessAuth)(nil),                // 6: plugins.common.v1.AkeylessAuth
	(*Auth)(nil),                        // 7: plugins.common.v1.Auth
	(*OAuth_PasswordGrantFlow)(nil),     // 8: plugins.common.v1.OAuth.PasswordGrantFlow
	(*OAuth_ClientCredentialsFlow)(nil), // 9: plugins.common.v1.OAuth.ClientCredentialsFlow
	(*OAuth_AuthorizationCodeFlow)(nil), // 10: plugins.common.v1.OAuth.AuthorizationCodeFlow
	(*Azure_Key)(nil),                   // 11: plugins.common.v1.Azure.Key
	(*Azure_ClientCredentials)(nil),     // 12: plugins.common.v1.Azure.ClientCredentials
	(*AwsAuth_Static)(nil),              // 13: plugins.common.v1.AwsAuth.Static
	(*AwsAuth_AssumeRole)(nil),          // 14: plugins.common.v1.AwsAuth.AssumeRole
	(*AkeylessAuth_ApiKey)(nil),         // 15: plugins.common.v1.AkeylessAuth.ApiKey
	(*AkeylessAuth_Email)(nil),          // 16: plugins.common.v1.AkeylessAuth.Email
}
var file_plugins_common_v1_auth_proto_depIdxs = []int32{
	11, // 0: plugins.common.v1.Azure.key:type_name -> plugins.common.v1.Azure.Key
	12, // 1: plugins.common.v1.Azure.client_credentials:type_name -> plugins.common.v1.Azure.ClientCredentials
	13, // 2: plugins.common.v1.AwsAuth.static:type_name -> plugins.common.v1.AwsAuth.Static
	14, // 3: plugins.common.v1.AwsAuth.assume_role:type_name -> plugins.common.v1.AwsAuth.AssumeRole
	15, // 4: plugins.common.v1.AkeylessAuth.api_key:type_name -> plugins.common.v1.AkeylessAuth.ApiKey
	16, // 5: plugins.common.v1.AkeylessAuth.email:type_name -> plugins.common.v1.AkeylessAuth.Email
	8,  // 6: plugins.common.v1.Auth.password_grant_flow:type_name -> plugins.common.v1.OAuth.PasswordGrantFlow
	10, // 7: plugins.common.v1.Auth.authorization_code_flow:type_name -> plugins.common.v1.OAuth.AuthorizationCodeFlow
	2,  // 8: plugins.common.v1.Auth.basic:type_name -> plugins.common.v1.Basic
	9,  // 9: plugins.common.v1.Auth.client_credentials_flow:type_name -> plugins.common.v1.OAuth.ClientCredentialsFlow
	11, // 10: plugins.common.v1.Auth.key:type_name -> plugins.common.v1.Azure.Key
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_plugins_common_v1_auth_proto_init() }
func file_plugins_common_v1_auth_proto_init() {
	if File_plugins_common_v1_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_common_v1_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuthCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GcpAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkeylessAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth_PasswordGrantFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth_ClientCredentialsFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth_AuthorizationCodeFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Azure_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Azure_ClientCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsAuth_Static); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsAuth_AssumeRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkeylessAuth_ApiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_common_v1_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkeylessAuth_Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_common_v1_auth_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Azure_Key_)(nil),
		(*Azure_ClientCredentials_)(nil),
	}
	file_plugins_common_v1_auth_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AwsAuth_Static_)(nil),
		(*AwsAuth_AssumeRole_)(nil),
	}
	file_plugins_common_v1_auth_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GcpAuth_ServiceAccount)(nil),
	}
	file_plugins_common_v1_auth_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AkeylessAuth_ApiKey_)(nil),
		(*AkeylessAuth_Email_)(nil),
	}
	file_plugins_common_v1_auth_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Auth_PasswordGrantFlow)(nil),
		(*Auth_AuthorizationCodeFlow)(nil),
		(*Auth_Basic)(nil),
		(*Auth_ClientCredentialsFlow)(nil),
		(*Auth_Key)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_common_v1_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_common_v1_auth_proto_goTypes,
		DependencyIndexes: file_plugins_common_v1_auth_proto_depIdxs,
		MessageInfos:      file_plugins_common_v1_auth_proto_msgTypes,
	}.Build()
	File_plugins_common_v1_auth_proto = out.File
	file_plugins_common_v1_auth_proto_rawDesc = nil
	file_plugins_common_v1_auth_proto_goTypes = nil
	file_plugins_common_v1_auth_proto_depIdxs = nil
}
