// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/adls/v1/plugin.proto

package v1

import (
	v1 "github.com/superblocksteam/agent/types/gen/go/plugins/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                         *string                          `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	DynamicWorkflowConfiguration *v1.DynamicWorkflowConfiguration `protobuf:"bytes,2,opt,name=dynamic_workflow_configuration,json=dynamicWorkflowConfiguration,proto3,oneof" json:"dynamic_workflow_configuration,omitempty"`
	Connection                   *Plugin_AdlsConnection           `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
	// Types that are assignable to AdlsAction:
	//
	//	*Plugin_CreateContainer_
	//	*Plugin_CreateDirectory_
	//	*Plugin_RenameDirectory_
	//	*Plugin_DeleteDirectory_
	//	*Plugin_ListDirectoryContents_
	//	*Plugin_UploadFile_
	//	*Plugin_DownloadFile_
	//	*Plugin_DeleteFile_
	AdlsAction isPlugin_AdlsAction `protobuf_oneof:"adls_action"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Plugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plugin) GetDynamicWorkflowConfiguration() *v1.DynamicWorkflowConfiguration {
	if x != nil {
		return x.DynamicWorkflowConfiguration
	}
	return nil
}

func (x *Plugin) GetConnection() *Plugin_AdlsConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (m *Plugin) GetAdlsAction() isPlugin_AdlsAction {
	if m != nil {
		return m.AdlsAction
	}
	return nil
}

func (x *Plugin) GetCreateContainer() *Plugin_CreateContainer {
	if x, ok := x.GetAdlsAction().(*Plugin_CreateContainer_); ok {
		return x.CreateContainer
	}
	return nil
}

func (x *Plugin) GetCreateDirectory() *Plugin_CreateDirectory {
	if x, ok := x.GetAdlsAction().(*Plugin_CreateDirectory_); ok {
		return x.CreateDirectory
	}
	return nil
}

func (x *Plugin) GetRenameDirectory() *Plugin_RenameDirectory {
	if x, ok := x.GetAdlsAction().(*Plugin_RenameDirectory_); ok {
		return x.RenameDirectory
	}
	return nil
}

func (x *Plugin) GetDeleteDirectory() *Plugin_DeleteDirectory {
	if x, ok := x.GetAdlsAction().(*Plugin_DeleteDirectory_); ok {
		return x.DeleteDirectory
	}
	return nil
}

func (x *Plugin) GetListDirectoryContents() *Plugin_ListDirectoryContents {
	if x, ok := x.GetAdlsAction().(*Plugin_ListDirectoryContents_); ok {
		return x.ListDirectoryContents
	}
	return nil
}

func (x *Plugin) GetUploadFile() *Plugin_UploadFile {
	if x, ok := x.GetAdlsAction().(*Plugin_UploadFile_); ok {
		return x.UploadFile
	}
	return nil
}

func (x *Plugin) GetDownloadFile() *Plugin_DownloadFile {
	if x, ok := x.GetAdlsAction().(*Plugin_DownloadFile_); ok {
		return x.DownloadFile
	}
	return nil
}

func (x *Plugin) GetDeleteFile() *Plugin_DeleteFile {
	if x, ok := x.GetAdlsAction().(*Plugin_DeleteFile_); ok {
		return x.DeleteFile
	}
	return nil
}

type isPlugin_AdlsAction interface {
	isPlugin_AdlsAction()
}

type Plugin_CreateContainer_ struct {
	CreateContainer *Plugin_CreateContainer `protobuf:"bytes,4,opt,name=create_container,json=createContainer,proto3,oneof"`
}

type Plugin_CreateDirectory_ struct {
	CreateDirectory *Plugin_CreateDirectory `protobuf:"bytes,5,opt,name=create_directory,json=createDirectory,proto3,oneof"`
}

type Plugin_RenameDirectory_ struct {
	RenameDirectory *Plugin_RenameDirectory `protobuf:"bytes,6,opt,name=rename_directory,json=renameDirectory,proto3,oneof"`
}

type Plugin_DeleteDirectory_ struct {
	DeleteDirectory *Plugin_DeleteDirectory `protobuf:"bytes,7,opt,name=delete_directory,json=deleteDirectory,proto3,oneof"`
}

type Plugin_ListDirectoryContents_ struct {
	ListDirectoryContents *Plugin_ListDirectoryContents `protobuf:"bytes,8,opt,name=list_directory_contents,json=listDirectoryContents,proto3,oneof"`
}

type Plugin_UploadFile_ struct {
	UploadFile *Plugin_UploadFile `protobuf:"bytes,9,opt,name=upload_file,json=uploadFile,proto3,oneof"`
}

type Plugin_DownloadFile_ struct {
	DownloadFile *Plugin_DownloadFile `protobuf:"bytes,10,opt,name=download_file,json=downloadFile,proto3,oneof"`
}

type Plugin_DeleteFile_ struct {
	DeleteFile *Plugin_DeleteFile `protobuf:"bytes,11,opt,name=delete_file,json=deleteFile,proto3,oneof"`
}

func (*Plugin_CreateContainer_) isPlugin_AdlsAction() {}

func (*Plugin_CreateDirectory_) isPlugin_AdlsAction() {}

func (*Plugin_RenameDirectory_) isPlugin_AdlsAction() {}

func (*Plugin_DeleteDirectory_) isPlugin_AdlsAction() {}

func (*Plugin_ListDirectoryContents_) isPlugin_AdlsAction() {}

func (*Plugin_UploadFile_) isPlugin_AdlsAction() {}

func (*Plugin_DownloadFile_) isPlugin_AdlsAction() {}

func (*Plugin_DeleteFile_) isPlugin_AdlsAction() {}

// We need to repeat that it's Adls because of the schema checker that's built
// based off of these types. It errors out when there is a duplicate type
// name.
type Plugin_AdlsConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName string    `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	Tenant      string    `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Auth        *v1.Azure `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *Plugin_AdlsConnection) Reset() {
	*x = Plugin_AdlsConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_AdlsConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_AdlsConnection) ProtoMessage() {}

func (x *Plugin_AdlsConnection) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_AdlsConnection.ProtoReflect.Descriptor instead.
func (*Plugin_AdlsConnection) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Plugin_AdlsConnection) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *Plugin_AdlsConnection) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Plugin_AdlsConnection) GetAuth() *v1.Azure {
	if x != nil {
		return x.Auth
	}
	return nil
}

// Actions
type Plugin_CreateContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,2,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
}

func (x *Plugin_CreateContainer) Reset() {
	*x = Plugin_CreateContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CreateContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CreateContainer) ProtoMessage() {}

func (x *Plugin_CreateContainer) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CreateContainer.ProtoReflect.Descriptor instead.
func (*Plugin_CreateContainer) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Plugin_CreateContainer) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

type Plugin_CreateDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Plugin_CreateDirectory) Reset() {
	*x = Plugin_CreateDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CreateDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CreateDirectory) ProtoMessage() {}

func (x *Plugin_CreateDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CreateDirectory.ProtoReflect.Descriptor instead.
func (*Plugin_CreateDirectory) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Plugin_CreateDirectory) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_CreateDirectory) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plugin_RenameDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	NewPath    string `protobuf:"bytes,3,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
}

func (x *Plugin_RenameDirectory) Reset() {
	*x = Plugin_RenameDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_RenameDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_RenameDirectory) ProtoMessage() {}

func (x *Plugin_RenameDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_RenameDirectory.ProtoReflect.Descriptor instead.
func (*Plugin_RenameDirectory) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Plugin_RenameDirectory) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_RenameDirectory) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Plugin_RenameDirectory) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type Plugin_DeleteDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Plugin_DeleteDirectory) Reset() {
	*x = Plugin_DeleteDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_DeleteDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_DeleteDirectory) ProtoMessage() {}

func (x *Plugin_DeleteDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_DeleteDirectory.ProtoReflect.Descriptor instead.
func (*Plugin_DeleteDirectory) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Plugin_DeleteDirectory) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_DeleteDirectory) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plugin_ListDirectoryContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Plugin_ListDirectoryContents) Reset() {
	*x = Plugin_ListDirectoryContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_ListDirectoryContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_ListDirectoryContents) ProtoMessage() {}

func (x *Plugin_ListDirectoryContents) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_ListDirectoryContents.ProtoReflect.Descriptor instead.
func (*Plugin_ListDirectoryContents) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Plugin_ListDirectoryContents) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_ListDirectoryContents) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plugin_UploadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Plugin_UploadFile) Reset() {
	*x = Plugin_UploadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_UploadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_UploadFile) ProtoMessage() {}

func (x *Plugin_UploadFile) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_UploadFile.ProtoReflect.Descriptor instead.
func (*Plugin_UploadFile) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Plugin_UploadFile) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_UploadFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Plugin_UploadFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Plugin_DownloadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Plugin_DownloadFile) Reset() {
	*x = Plugin_DownloadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_DownloadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_DownloadFile) ProtoMessage() {}

func (x *Plugin_DownloadFile) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_DownloadFile.ProtoReflect.Descriptor instead.
func (*Plugin_DownloadFile) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Plugin_DownloadFile) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_DownloadFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plugin_DeleteFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem string `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Plugin_DeleteFile) Reset() {
	*x = Plugin_DeleteFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_DeleteFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_DeleteFile) ProtoMessage() {}

func (x *Plugin_DeleteFile) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_DeleteFile.ProtoReflect.Descriptor instead.
func (*Plugin_DeleteFile) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Plugin_DeleteFile) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *Plugin_DeleteFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plugin_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystems []string `protobuf:"bytes,1,rep,name=file_systems,json=fileSystems,proto3" json:"file_systems,omitempty"`
}

func (x *Plugin_Metadata) Reset() {
	*x = Plugin_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_adls_v1_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata) ProtoMessage() {}

func (x *Plugin_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_adls_v1_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata) Descriptor() ([]byte, []int) {
	return file_plugins_adls_v1_plugin_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Plugin_Metadata) GetFileSystems() []string {
	if x != nil {
		return x.FileSystems
	}
	return nil
}

var File_plugins_adls_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_adls_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x64, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x0d,
	0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x7a, 0x0a, 0x1e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x1c, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x54, 0x0a, 0x10, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x67, 0x0a,
	0x17, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52,
	0x15, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4b, 0x0a,
	0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61,
	0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x1a, 0x79, 0x0a, 0x0e, 0x41, 0x64, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x32, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x1a, 0x46, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x61, 0x0a, 0x0f, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x46, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x1a, 0x4c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x1a, 0x5b, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x43,
	0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x1a, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x2d, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x64, 0x6c, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x21, 0x0a,
	0x1f, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x64, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_adls_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_adls_v1_plugin_proto_rawDescData = file_plugins_adls_v1_plugin_proto_rawDesc
)

func file_plugins_adls_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_adls_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_adls_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_adls_v1_plugin_proto_rawDescData)
	})
	return file_plugins_adls_v1_plugin_proto_rawDescData
}

var file_plugins_adls_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_plugins_adls_v1_plugin_proto_goTypes = []interface{}{
	(*Plugin)(nil),                          // 0: plugins.adls.v1.Plugin
	(*Plugin_AdlsConnection)(nil),           // 1: plugins.adls.v1.Plugin.AdlsConnection
	(*Plugin_CreateContainer)(nil),          // 2: plugins.adls.v1.Plugin.CreateContainer
	(*Plugin_CreateDirectory)(nil),          // 3: plugins.adls.v1.Plugin.CreateDirectory
	(*Plugin_RenameDirectory)(nil),          // 4: plugins.adls.v1.Plugin.RenameDirectory
	(*Plugin_DeleteDirectory)(nil),          // 5: plugins.adls.v1.Plugin.DeleteDirectory
	(*Plugin_ListDirectoryContents)(nil),    // 6: plugins.adls.v1.Plugin.ListDirectoryContents
	(*Plugin_UploadFile)(nil),               // 7: plugins.adls.v1.Plugin.UploadFile
	(*Plugin_DownloadFile)(nil),             // 8: plugins.adls.v1.Plugin.DownloadFile
	(*Plugin_DeleteFile)(nil),               // 9: plugins.adls.v1.Plugin.DeleteFile
	(*Plugin_Metadata)(nil),                 // 10: plugins.adls.v1.Plugin.Metadata
	(*v1.DynamicWorkflowConfiguration)(nil), // 11: plugins.common.v1.DynamicWorkflowConfiguration
	(*v1.Azure)(nil),                        // 12: plugins.common.v1.Azure
}
var file_plugins_adls_v1_plugin_proto_depIdxs = []int32{
	11, // 0: plugins.adls.v1.Plugin.dynamic_workflow_configuration:type_name -> plugins.common.v1.DynamicWorkflowConfiguration
	1,  // 1: plugins.adls.v1.Plugin.connection:type_name -> plugins.adls.v1.Plugin.AdlsConnection
	2,  // 2: plugins.adls.v1.Plugin.create_container:type_name -> plugins.adls.v1.Plugin.CreateContainer
	3,  // 3: plugins.adls.v1.Plugin.create_directory:type_name -> plugins.adls.v1.Plugin.CreateDirectory
	4,  // 4: plugins.adls.v1.Plugin.rename_directory:type_name -> plugins.adls.v1.Plugin.RenameDirectory
	5,  // 5: plugins.adls.v1.Plugin.delete_directory:type_name -> plugins.adls.v1.Plugin.DeleteDirectory
	6,  // 6: plugins.adls.v1.Plugin.list_directory_contents:type_name -> plugins.adls.v1.Plugin.ListDirectoryContents
	7,  // 7: plugins.adls.v1.Plugin.upload_file:type_name -> plugins.adls.v1.Plugin.UploadFile
	8,  // 8: plugins.adls.v1.Plugin.download_file:type_name -> plugins.adls.v1.Plugin.DownloadFile
	9,  // 9: plugins.adls.v1.Plugin.delete_file:type_name -> plugins.adls.v1.Plugin.DeleteFile
	12, // 10: plugins.adls.v1.Plugin.AdlsConnection.auth:type_name -> plugins.common.v1.Azure
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_plugins_adls_v1_plugin_proto_init() }
func file_plugins_adls_v1_plugin_proto_init() {
	if File_plugins_adls_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_adls_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_AdlsConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CreateContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CreateDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_RenameDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_DeleteDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_ListDirectoryContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_UploadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_DownloadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_DeleteFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_adls_v1_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_adls_v1_plugin_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Plugin_CreateContainer_)(nil),
		(*Plugin_CreateDirectory_)(nil),
		(*Plugin_RenameDirectory_)(nil),
		(*Plugin_DeleteDirectory_)(nil),
		(*Plugin_ListDirectoryContents_)(nil),
		(*Plugin_UploadFile_)(nil),
		(*Plugin_DownloadFile_)(nil),
		(*Plugin_DeleteFile_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_adls_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_adls_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_adls_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_adls_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_adls_v1_plugin_proto = out.File
	file_plugins_adls_v1_plugin_proto_rawDesc = nil
	file_plugins_adls_v1_plugin_proto_goTypes = nil
	file_plugins_adls_v1_plugin_proto_depIdxs = nil
}
