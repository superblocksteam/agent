// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/salesforce/v1/plugin.proto

package v1

import (
	v1 "github.com/superblocksteam/agent/types/gen/go/plugins/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Specified for singleton types.
type Plugin_Soql_SoqlAction int32

const (
	Plugin_Soql_SOQL_ACTION_UNSPECIFIED Plugin_Soql_SoqlAction = 0
	Plugin_Soql_SOQL_ACTION_SOQL        Plugin_Soql_SoqlAction = 1
)

// Enum value maps for Plugin_Soql_SoqlAction.
var (
	Plugin_Soql_SoqlAction_name = map[int32]string{
		0: "SOQL_ACTION_UNSPECIFIED",
		1: "SOQL_ACTION_SOQL",
	}
	Plugin_Soql_SoqlAction_value = map[string]int32{
		"SOQL_ACTION_UNSPECIFIED": 0,
		"SOQL_ACTION_SOQL":        1,
	}
)

func (x Plugin_Soql_SoqlAction) Enum() *Plugin_Soql_SoqlAction {
	p := new(Plugin_Soql_SoqlAction)
	*p = x
	return p
}

func (x Plugin_Soql_SoqlAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plugin_Soql_SoqlAction) Descriptor() protoreflect.EnumDescriptor {
	return file_plugins_salesforce_v1_plugin_proto_enumTypes[0].Descriptor()
}

func (Plugin_Soql_SoqlAction) Type() protoreflect.EnumType {
	return &file_plugins_salesforce_v1_plugin_proto_enumTypes[0]
}

func (x Plugin_Soql_SoqlAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Plugin_Soql_SoqlAction.Descriptor instead.
func (Plugin_Soql_SoqlAction) EnumDescriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 2, 0}
}

type Plugin_Crud_CrudAction int32

const (
	Plugin_Crud_CRUD_ACTION_UNSPECIFIED Plugin_Crud_CrudAction = 0
	Plugin_Crud_CRUD_ACTION_CREATE      Plugin_Crud_CrudAction = 1
	Plugin_Crud_CRUD_ACTION_UPDATE      Plugin_Crud_CrudAction = 2
	Plugin_Crud_CRUD_ACTION_DELETE      Plugin_Crud_CrudAction = 3
	Plugin_Crud_CRUD_ACTION_READ        Plugin_Crud_CrudAction = 4
)

// Enum value maps for Plugin_Crud_CrudAction.
var (
	Plugin_Crud_CrudAction_name = map[int32]string{
		0: "CRUD_ACTION_UNSPECIFIED",
		1: "CRUD_ACTION_CREATE",
		2: "CRUD_ACTION_UPDATE",
		3: "CRUD_ACTION_DELETE",
		4: "CRUD_ACTION_READ",
	}
	Plugin_Crud_CrudAction_value = map[string]int32{
		"CRUD_ACTION_UNSPECIFIED": 0,
		"CRUD_ACTION_CREATE":      1,
		"CRUD_ACTION_UPDATE":      2,
		"CRUD_ACTION_DELETE":      3,
		"CRUD_ACTION_READ":        4,
	}
)

func (x Plugin_Crud_CrudAction) Enum() *Plugin_Crud_CrudAction {
	p := new(Plugin_Crud_CrudAction)
	*p = x
	return p
}

func (x Plugin_Crud_CrudAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plugin_Crud_CrudAction) Descriptor() protoreflect.EnumDescriptor {
	return file_plugins_salesforce_v1_plugin_proto_enumTypes[1].Descriptor()
}

func (Plugin_Crud_CrudAction) Type() protoreflect.EnumType {
	return &file_plugins_salesforce_v1_plugin_proto_enumTypes[1]
}

func (x Plugin_Crud_CrudAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Plugin_Crud_CrudAction.Descriptor instead.
func (Plugin_Crud_CrudAction) EnumDescriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 3, 0}
}

type Plugin_Bulk_BulkAction int32

const (
	Plugin_Bulk_BULK_ACTION_UNSPECIFIED Plugin_Bulk_BulkAction = 0
	Plugin_Bulk_BULK_ACTION_CREATE      Plugin_Bulk_BulkAction = 1
	Plugin_Bulk_BULK_ACTION_UPDATE      Plugin_Bulk_BulkAction = 2
	Plugin_Bulk_BULK_ACTION_DELETE      Plugin_Bulk_BulkAction = 3
	Plugin_Bulk_BULK_ACTION_UPSERT      Plugin_Bulk_BulkAction = 4
)

// Enum value maps for Plugin_Bulk_BulkAction.
var (
	Plugin_Bulk_BulkAction_name = map[int32]string{
		0: "BULK_ACTION_UNSPECIFIED",
		1: "BULK_ACTION_CREATE",
		2: "BULK_ACTION_UPDATE",
		3: "BULK_ACTION_DELETE",
		4: "BULK_ACTION_UPSERT",
	}
	Plugin_Bulk_BulkAction_value = map[string]int32{
		"BULK_ACTION_UNSPECIFIED": 0,
		"BULK_ACTION_CREATE":      1,
		"BULK_ACTION_UPDATE":      2,
		"BULK_ACTION_DELETE":      3,
		"BULK_ACTION_UPSERT":      4,
	}
)

func (x Plugin_Bulk_BulkAction) Enum() *Plugin_Bulk_BulkAction {
	p := new(Plugin_Bulk_BulkAction)
	*p = x
	return p
}

func (x Plugin_Bulk_BulkAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plugin_Bulk_BulkAction) Descriptor() protoreflect.EnumDescriptor {
	return file_plugins_salesforce_v1_plugin_proto_enumTypes[2].Descriptor()
}

func (Plugin_Bulk_BulkAction) Type() protoreflect.EnumType {
	return &file_plugins_salesforce_v1_plugin_proto_enumTypes[2]
}

func (x Plugin_Bulk_BulkAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Plugin_Bulk_BulkAction.Descriptor instead.
func (Plugin_Bulk_BulkAction) EnumDescriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Plugin fields
	Name       *string                      `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Connection *Plugin_SalesforceConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	// Types that are assignable to SalesforceAction:
	//
	//	*Plugin_Soql_
	//	*Plugin_Crud_
	//	*Plugin_Bulk_
	SalesforceAction             isPlugin_SalesforceAction        `protobuf_oneof:"salesforce_action"`
	DynamicWorkflowConfiguration *v1.DynamicWorkflowConfiguration `protobuf:"bytes,6,opt,name=dynamic_workflow_configuration,json=dynamicWorkflowConfiguration,proto3,oneof" json:"dynamic_workflow_configuration,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Plugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plugin) GetConnection() *Plugin_SalesforceConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (m *Plugin) GetSalesforceAction() isPlugin_SalesforceAction {
	if m != nil {
		return m.SalesforceAction
	}
	return nil
}

func (x *Plugin) GetSoql() *Plugin_Soql {
	if x, ok := x.GetSalesforceAction().(*Plugin_Soql_); ok {
		return x.Soql
	}
	return nil
}

func (x *Plugin) GetCrud() *Plugin_Crud {
	if x, ok := x.GetSalesforceAction().(*Plugin_Crud_); ok {
		return x.Crud
	}
	return nil
}

func (x *Plugin) GetBulk() *Plugin_Bulk {
	if x, ok := x.GetSalesforceAction().(*Plugin_Bulk_); ok {
		return x.Bulk
	}
	return nil
}

func (x *Plugin) GetDynamicWorkflowConfiguration() *v1.DynamicWorkflowConfiguration {
	if x != nil {
		return x.DynamicWorkflowConfiguration
	}
	return nil
}

type isPlugin_SalesforceAction interface {
	isPlugin_SalesforceAction()
}

type Plugin_Soql_ struct {
	Soql *Plugin_Soql `protobuf:"bytes,3,opt,name=soql,proto3,oneof"`
}

type Plugin_Crud_ struct {
	Crud *Plugin_Crud `protobuf:"bytes,4,opt,name=crud,proto3,oneof"`
}

type Plugin_Bulk_ struct {
	Bulk *Plugin_Bulk `protobuf:"bytes,5,opt,name=bulk,proto3,oneof"`
}

func (*Plugin_Soql_) isPlugin_SalesforceAction() {}

func (*Plugin_Crud_) isPlugin_SalesforceAction() {}

func (*Plugin_Bulk_) isPlugin_SalesforceAction() {}

// children messages
type Plugin_SalesforceConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceUrl string   `protobuf:"bytes,1,opt,name=instance_url,json=instanceUrl,proto3" json:"instance_url,omitempty"`
	Auth        *v1.Auth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *Plugin_SalesforceConnection) Reset() {
	*x = Plugin_SalesforceConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_SalesforceConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_SalesforceConnection) ProtoMessage() {}

func (x *Plugin_SalesforceConnection) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_SalesforceConnection.ProtoReflect.Descriptor instead.
func (*Plugin_SalesforceConnection) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Plugin_SalesforceConnection) GetInstanceUrl() string {
	if x != nil {
		return x.InstanceUrl
	}
	return ""
}

func (x *Plugin_SalesforceConnection) GetAuth() *v1.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type Plugin_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*Plugin_Metadata_Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *Plugin_Metadata) Reset() {
	*x = Plugin_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata) ProtoMessage() {}

func (x *Plugin_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Plugin_Metadata) GetObjects() []*Plugin_Metadata_Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

// Action Fields
type Plugin_Soql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SqlBody string                 `protobuf:"bytes,1,opt,name=sql_body,json=sqlBody,proto3" json:"sql_body,omitempty"`
	Action  Plugin_Soql_SoqlAction `protobuf:"varint,2,opt,name=action,proto3,enum=plugins.salesforce.v1.Plugin_Soql_SoqlAction" json:"action,omitempty"`
}

func (x *Plugin_Soql) Reset() {
	*x = Plugin_Soql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Soql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Soql) ProtoMessage() {}

func (x *Plugin_Soql) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Soql.ProtoReflect.Descriptor instead.
func (*Plugin_Soql) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Plugin_Soql) GetSqlBody() string {
	if x != nil {
		return x.SqlBody
	}
	return ""
}

func (x *Plugin_Soql) GetAction() Plugin_Soql_SoqlAction {
	if x != nil {
		return x.Action
	}
	return Plugin_Soql_SOQL_ACTION_UNSPECIFIED
}

type Plugin_Crud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string                 `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Action       Plugin_Crud_CrudAction `protobuf:"varint,2,opt,name=action,proto3,enum=plugins.salesforce.v1.Plugin_Crud_CrudAction" json:"action,omitempty"`
	// delete doesn't require body, other actions do
	ResourceBody string `protobuf:"bytes,3,opt,name=resource_body,json=resourceBody,proto3" json:"resource_body,omitempty"`
	// delete requires resource_id, other actions don't
	ResourceId string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Plugin_Crud) Reset() {
	*x = Plugin_Crud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Crud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Crud) ProtoMessage() {}

func (x *Plugin_Crud) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Crud.ProtoReflect.Descriptor instead.
func (*Plugin_Crud) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Plugin_Crud) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Plugin_Crud) GetAction() Plugin_Crud_CrudAction {
	if x != nil {
		return x.Action
	}
	return Plugin_Crud_CRUD_ACTION_UNSPECIFIED
}

func (x *Plugin_Crud) GetResourceBody() string {
	if x != nil {
		return x.ResourceBody
	}
	return ""
}

func (x *Plugin_Crud) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type Plugin_Bulk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string                 `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Action       Plugin_Bulk_BulkAction `protobuf:"varint,2,opt,name=action,proto3,enum=plugins.salesforce.v1.Plugin_Bulk_BulkAction" json:"action,omitempty"`
	// delete and update require Id, which will be part of body
	ResourceBody string `protobuf:"bytes,3,opt,name=resource_body,json=resourceBody,proto3" json:"resource_body,omitempty"`
	// only used for upsert https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/walkthrough_upsert.htm
	ExternalId string `protobuf:"bytes,4,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *Plugin_Bulk) Reset() {
	*x = Plugin_Bulk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Bulk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Bulk) ProtoMessage() {}

func (x *Plugin_Bulk) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Bulk.ProtoReflect.Descriptor instead.
func (*Plugin_Bulk) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Plugin_Bulk) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Plugin_Bulk) GetAction() Plugin_Bulk_BulkAction {
	if x != nil {
		return x.Action
	}
	return Plugin_Bulk_BULK_ACTION_UNSPECIFIED
}

func (x *Plugin_Bulk) GetResourceBody() string {
	if x != nil {
		return x.ResourceBody
	}
	return ""
}

func (x *Plugin_Bulk) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type Plugin_Metadata_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Plugin_Metadata_Object_Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Plugin_Metadata_Object) Reset() {
	*x = Plugin_Metadata_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata_Object) ProtoMessage() {}

func (x *Plugin_Metadata_Object) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata_Object.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata_Object) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Plugin_Metadata_Object) GetFields() []*Plugin_Metadata_Object_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Plugin_Metadata_Object_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Plugin_Metadata_Object_Field) Reset() {
	*x = Plugin_Metadata_Object_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Metadata_Object_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Metadata_Object_Field) ProtoMessage() {}

func (x *Plugin_Metadata_Object_Field) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_salesforce_v1_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Metadata_Object_Field.ProtoReflect.Descriptor instead.
func (*Plugin_Metadata_Object_Field) Descriptor() ([]byte, []int) {
	return file_plugins_salesforce_v1_plugin_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Plugin_Metadata_Object_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin_Metadata_Object_Field) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Plugin_Metadata_Object_Field) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_plugins_salesforce_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_salesforce_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x0c, 0x0a, 0x06, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x6f, 0x71, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53,
	0x6f, 0x71, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f, 0x71, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x63,
	0x72, 0x75, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x75, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x72, 0x75, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x75, 0x6c, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x62, 0x75, 0x6c, 0x6b, 0x12,
	0x7a, 0x0a, 0x1e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x1c, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0x66, 0x0a, 0x14, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x1a, 0xf2, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x47, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x9c, 0x01, 0x0a, 0x06, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x1a, 0x45, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xa9, 0x01, 0x0a, 0x04, 0x53, 0x6f, 0x71,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x71, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x71, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x45, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x71, 0x6c,
	0x2e, 0x53, 0x6f, 0x71, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0a, 0x53, 0x6f, 0x71, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x51, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x4f, 0x51, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f,
	0x51, 0x4c, 0x10, 0x01, 0x1a, 0xc2, 0x02, 0x0a, 0x04, 0x43, 0x72, 0x75, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x72, 0x75, 0x64, 0x2e, 0x43, 0x72, 0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x87, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x17, 0x43, 0x52, 0x55, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x52, 0x55, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52, 0x55, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x52, 0x55, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x55, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x1a, 0xc4, 0x02, 0x0a, 0x04, 0x42, 0x75,
	0x6c, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x2e, 0x42, 0x75, 0x6c, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x0a, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x4c, 0x4b,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x4c, 0x4b,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x53, 0x45, 0x52, 0x54, 0x10, 0x04,
	0x42, 0x13, 0x0a, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x21,
	0x0a, 0x1f, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_salesforce_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_salesforce_v1_plugin_proto_rawDescData = file_plugins_salesforce_v1_plugin_proto_rawDesc
)

func file_plugins_salesforce_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_salesforce_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_salesforce_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_salesforce_v1_plugin_proto_rawDescData)
	})
	return file_plugins_salesforce_v1_plugin_proto_rawDescData
}

var file_plugins_salesforce_v1_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plugins_salesforce_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_plugins_salesforce_v1_plugin_proto_goTypes = []interface{}{
	(Plugin_Soql_SoqlAction)(0),             // 0: plugins.salesforce.v1.Plugin.Soql.SoqlAction
	(Plugin_Crud_CrudAction)(0),             // 1: plugins.salesforce.v1.Plugin.Crud.CrudAction
	(Plugin_Bulk_BulkAction)(0),             // 2: plugins.salesforce.v1.Plugin.Bulk.BulkAction
	(*Plugin)(nil),                          // 3: plugins.salesforce.v1.Plugin
	(*Plugin_SalesforceConnection)(nil),     // 4: plugins.salesforce.v1.Plugin.SalesforceConnection
	(*Plugin_Metadata)(nil),                 // 5: plugins.salesforce.v1.Plugin.Metadata
	(*Plugin_Soql)(nil),                     // 6: plugins.salesforce.v1.Plugin.Soql
	(*Plugin_Crud)(nil),                     // 7: plugins.salesforce.v1.Plugin.Crud
	(*Plugin_Bulk)(nil),                     // 8: plugins.salesforce.v1.Plugin.Bulk
	(*Plugin_Metadata_Object)(nil),          // 9: plugins.salesforce.v1.Plugin.Metadata.Object
	(*Plugin_Metadata_Object_Field)(nil),    // 10: plugins.salesforce.v1.Plugin.Metadata.Object.Field
	(*v1.DynamicWorkflowConfiguration)(nil), // 11: plugins.common.v1.DynamicWorkflowConfiguration
	(*v1.Auth)(nil),                         // 12: plugins.common.v1.Auth
}
var file_plugins_salesforce_v1_plugin_proto_depIdxs = []int32{
	4,  // 0: plugins.salesforce.v1.Plugin.connection:type_name -> plugins.salesforce.v1.Plugin.SalesforceConnection
	6,  // 1: plugins.salesforce.v1.Plugin.soql:type_name -> plugins.salesforce.v1.Plugin.Soql
	7,  // 2: plugins.salesforce.v1.Plugin.crud:type_name -> plugins.salesforce.v1.Plugin.Crud
	8,  // 3: plugins.salesforce.v1.Plugin.bulk:type_name -> plugins.salesforce.v1.Plugin.Bulk
	11, // 4: plugins.salesforce.v1.Plugin.dynamic_workflow_configuration:type_name -> plugins.common.v1.DynamicWorkflowConfiguration
	12, // 5: plugins.salesforce.v1.Plugin.SalesforceConnection.auth:type_name -> plugins.common.v1.Auth
	9,  // 6: plugins.salesforce.v1.Plugin.Metadata.objects:type_name -> plugins.salesforce.v1.Plugin.Metadata.Object
	0,  // 7: plugins.salesforce.v1.Plugin.Soql.action:type_name -> plugins.salesforce.v1.Plugin.Soql.SoqlAction
	1,  // 8: plugins.salesforce.v1.Plugin.Crud.action:type_name -> plugins.salesforce.v1.Plugin.Crud.CrudAction
	2,  // 9: plugins.salesforce.v1.Plugin.Bulk.action:type_name -> plugins.salesforce.v1.Plugin.Bulk.BulkAction
	10, // 10: plugins.salesforce.v1.Plugin.Metadata.Object.fields:type_name -> plugins.salesforce.v1.Plugin.Metadata.Object.Field
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_plugins_salesforce_v1_plugin_proto_init() }
func file_plugins_salesforce_v1_plugin_proto_init() {
	if File_plugins_salesforce_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_salesforce_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_SalesforceConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Soql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Crud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Bulk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_salesforce_v1_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Metadata_Object_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_salesforce_v1_plugin_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Plugin_Soql_)(nil),
		(*Plugin_Crud_)(nil),
		(*Plugin_Bulk_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_salesforce_v1_plugin_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_salesforce_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_salesforce_v1_plugin_proto_depIdxs,
		EnumInfos:         file_plugins_salesforce_v1_plugin_proto_enumTypes,
		MessageInfos:      file_plugins_salesforce_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_salesforce_v1_plugin_proto = out.File
	file_plugins_salesforce_v1_plugin_proto_rawDesc = nil
	file_plugins_salesforce_v1_plugin_proto_goTypes = nil
	file_plugins_salesforce_v1_plugin_proto_depIdxs = nil
}
