// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/gsheets/v1/plugin.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuperblocksMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginVersion string `protobuf:"bytes,1,opt,name=pluginVersion,proto3" json:"pluginVersion,omitempty"`
}

func (x *SuperblocksMetadata) Reset() {
	*x = SuperblocksMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_gsheets_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperblocksMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperblocksMetadata) ProtoMessage() {}

func (x *SuperblocksMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_gsheets_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperblocksMetadata.ProtoReflect.Descriptor instead.
func (*SuperblocksMetadata) Descriptor() ([]byte, []int) {
	return file_plugins_gsheets_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *SuperblocksMetadata) GetPluginVersion() string {
	if x != nil {
		return x.PluginVersion
	}
	return ""
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpreadsheetId string  `protobuf:"bytes,1,opt,name=spreadsheetId,proto3" json:"spreadsheetId,omitempty"`
	SheetTitle    string  `protobuf:"bytes,2,opt,name=sheetTitle,proto3" json:"sheetTitle,omitempty"`
	Range         *string `protobuf:"bytes,3,opt,name=range,proto3,oneof" json:"range,omitempty"`
	// Super confusing but these are potentially bindings. Or stringified int
	// If this was not a binding, it would be best to keep it int32 here
	RowNumber             *string `protobuf:"bytes,4,opt,name=rowNumber,proto3,oneof" json:"rowNumber,omitempty"`
	ExtractFirstRowHeader bool    `protobuf:"varint,5,opt,name=extractFirstRowHeader,proto3" json:"extractFirstRowHeader,omitempty"`
	// Same as above comment
	HeaderRowNumber        *string              `protobuf:"bytes,6,opt,name=headerRowNumber,proto3,oneof" json:"headerRowNumber,omitempty"`
	Format                 *string              `protobuf:"bytes,7,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Data                   *string              `protobuf:"bytes,8,opt,name=data,proto3,oneof" json:"data,omitempty"`
	PreserveHeaderRow      bool                 `protobuf:"varint,9,opt,name=preserveHeaderRow,proto3" json:"preserveHeaderRow,omitempty"`
	IncludeHeaderRow       bool                 `protobuf:"varint,10,opt,name=includeHeaderRow,proto3" json:"includeHeaderRow,omitempty"`
	Action                 *string              `protobuf:"bytes,11,opt,name=action,proto3,oneof" json:"action,omitempty"`
	WriteToDestinationType *string              `protobuf:"bytes,12,opt,name=writeToDestinationType,proto3,oneof" json:"writeToDestinationType,omitempty"`
	Body                   *string              `protobuf:"bytes,13,opt,name=body,proto3,oneof" json:"body,omitempty"`
	SuperblocksMetadata    *SuperblocksMetadata `protobuf:"bytes,14,opt,name=superblocksMetadata,proto3" json:"superblocksMetadata,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_gsheets_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_gsheets_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_gsheets_v1_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Plugin) GetSpreadsheetId() string {
	if x != nil {
		return x.SpreadsheetId
	}
	return ""
}

func (x *Plugin) GetSheetTitle() string {
	if x != nil {
		return x.SheetTitle
	}
	return ""
}

func (x *Plugin) GetRange() string {
	if x != nil && x.Range != nil {
		return *x.Range
	}
	return ""
}

func (x *Plugin) GetRowNumber() string {
	if x != nil && x.RowNumber != nil {
		return *x.RowNumber
	}
	return ""
}

func (x *Plugin) GetExtractFirstRowHeader() bool {
	if x != nil {
		return x.ExtractFirstRowHeader
	}
	return false
}

func (x *Plugin) GetHeaderRowNumber() string {
	if x != nil && x.HeaderRowNumber != nil {
		return *x.HeaderRowNumber
	}
	return ""
}

func (x *Plugin) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *Plugin) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *Plugin) GetPreserveHeaderRow() bool {
	if x != nil {
		return x.PreserveHeaderRow
	}
	return false
}

func (x *Plugin) GetIncludeHeaderRow() bool {
	if x != nil {
		return x.IncludeHeaderRow
	}
	return false
}

func (x *Plugin) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *Plugin) GetWriteToDestinationType() string {
	if x != nil && x.WriteToDestinationType != nil {
		return *x.WriteToDestinationType
	}
	return ""
}

func (x *Plugin) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *Plugin) GetSuperblocksMetadata() *SuperblocksMetadata {
	if x != nil {
		return x.SuperblocksMetadata
	}
	return nil
}

var File_plugins_gsheets_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_gsheets_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x67, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x67, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x3b, 0x0a, 0x13, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xbe, 0x05, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x65, 0x65, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x52, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f,
	0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f,
	0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x16, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x16, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x67, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x13, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x19, 0x0a, 0x17, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x67, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_gsheets_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_gsheets_v1_plugin_proto_rawDescData = file_plugins_gsheets_v1_plugin_proto_rawDesc
)

func file_plugins_gsheets_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_gsheets_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_gsheets_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_gsheets_v1_plugin_proto_rawDescData)
	})
	return file_plugins_gsheets_v1_plugin_proto_rawDescData
}

var file_plugins_gsheets_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_plugins_gsheets_v1_plugin_proto_goTypes = []interface{}{
	(*SuperblocksMetadata)(nil), // 0: plugins.gsheets.v1.SuperblocksMetadata
	(*Plugin)(nil),              // 1: plugins.gsheets.v1.Plugin
}
var file_plugins_gsheets_v1_plugin_proto_depIdxs = []int32{
	0, // 0: plugins.gsheets.v1.Plugin.superblocksMetadata:type_name -> plugins.gsheets.v1.SuperblocksMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plugins_gsheets_v1_plugin_proto_init() }
func file_plugins_gsheets_v1_plugin_proto_init() {
	if File_plugins_gsheets_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_gsheets_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperblocksMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_gsheets_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_gsheets_v1_plugin_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_gsheets_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_gsheets_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_gsheets_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_gsheets_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_gsheets_v1_plugin_proto = out.File
	file_plugins_gsheets_v1_plugin_proto_rawDesc = nil
	file_plugins_gsheets_v1_plugin_proto_goTypes = nil
	file_plugins_gsheets_v1_plugin_proto_depIdxs = nil
}
