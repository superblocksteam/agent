// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/mysql/v1/plugin.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MappedColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	Sql  string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *MappedColumns) Reset() {
	*x = MappedColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappedColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedColumns) ProtoMessage() {}

func (x *MappedColumns) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedColumns.ProtoReflect.Descriptor instead.
func (*MappedColumns) Descriptor() ([]byte, []int) {
	return file_plugins_mysql_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *MappedColumns) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *MappedColumns) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type Tuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *anypb.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_plugins_mysql_v1_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Tuple) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tuple) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type SuperblocksMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginVersion string `protobuf:"bytes,1,opt,name=pluginVersion,proto3" json:"pluginVersion,omitempty"`
}

func (x *SuperblocksMetadata) Reset() {
	*x = SuperblocksMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperblocksMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperblocksMetadata) ProtoMessage() {}

func (x *SuperblocksMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperblocksMetadata.ProtoReflect.Descriptor instead.
func (*SuperblocksMetadata) Descriptor() ([]byte, []int) {
	return file_plugins_mysql_v1_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *SuperblocksMetadata) GetPluginVersion() string {
	if x != nil {
		return x.PluginVersion
	}
	return ""
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body                string               `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	UsePreparedSql      bool                 `protobuf:"varint,2,opt,name=usePreparedSql,proto3" json:"usePreparedSql,omitempty"`
	Operation           *string              `protobuf:"bytes,3,opt,name=operation,proto3,oneof" json:"operation,omitempty"`
	UseAdvancedMatching *string              `protobuf:"bytes,4,opt,name=useAdvancedMatching,proto3,oneof" json:"useAdvancedMatching,omitempty"`
	Table               *string              `protobuf:"bytes,5,opt,name=table,proto3,oneof" json:"table,omitempty"`
	NewValues           *string              `protobuf:"bytes,6,opt,name=newValues,proto3,oneof" json:"newValues,omitempty"`
	OldValues           *string              `protobuf:"bytes,7,opt,name=oldValues,proto3,oneof" json:"oldValues,omitempty"`
	FilterBy            []string             `protobuf:"bytes,8,rep,name=filterBy,proto3" json:"filterBy,omitempty"`
	MappingMode         *string              `protobuf:"bytes,9,opt,name=mappingMode,proto3,oneof" json:"mappingMode,omitempty"`
	MappedColumns       []*MappedColumns     `protobuf:"bytes,10,rep,name=mappedColumns,proto3" json:"mappedColumns,omitempty"`
	SuperblocksMetadata *SuperblocksMetadata `protobuf:"bytes,11,opt,name=superblocksMetadata,proto3" json:"superblocksMetadata,omitempty"`
	InsertedRows        *string              `protobuf:"bytes,12,opt,name=insertedRows,proto3,oneof" json:"insertedRows,omitempty"`
	DeletedRows         *string              `protobuf:"bytes,13,opt,name=deletedRows,proto3,oneof" json:"deletedRows,omitempty"`
	Schema              *string              `protobuf:"bytes,14,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_mysql_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_mysql_v1_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *Plugin) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Plugin) GetUsePreparedSql() bool {
	if x != nil {
		return x.UsePreparedSql
	}
	return false
}

func (x *Plugin) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *Plugin) GetUseAdvancedMatching() string {
	if x != nil && x.UseAdvancedMatching != nil {
		return *x.UseAdvancedMatching
	}
	return ""
}

func (x *Plugin) GetTable() string {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return ""
}

func (x *Plugin) GetNewValues() string {
	if x != nil && x.NewValues != nil {
		return *x.NewValues
	}
	return ""
}

func (x *Plugin) GetOldValues() string {
	if x != nil && x.OldValues != nil {
		return *x.OldValues
	}
	return ""
}

func (x *Plugin) GetFilterBy() []string {
	if x != nil {
		return x.FilterBy
	}
	return nil
}

func (x *Plugin) GetMappingMode() string {
	if x != nil && x.MappingMode != nil {
		return *x.MappingMode
	}
	return ""
}

func (x *Plugin) GetMappedColumns() []*MappedColumns {
	if x != nil {
		return x.MappedColumns
	}
	return nil
}

func (x *Plugin) GetSuperblocksMetadata() *SuperblocksMetadata {
	if x != nil {
		return x.SuperblocksMetadata
	}
	return nil
}

func (x *Plugin) GetInsertedRows() string {
	if x != nil && x.InsertedRows != nil {
		return *x.InsertedRows
	}
	return ""
}

func (x *Plugin) GetDeletedRows() string {
	if x != nil && x.DeletedRows != nil {
		return *x.DeletedRows
	}
	return ""
}

func (x *Plugin) GetSchema() string {
	if x != nil && x.Schema != nil {
		return *x.Schema
	}
	return ""
}

var File_plugins_mysql_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_mysql_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d,
	0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x71, 0x6c, 0x22, 0x45, 0x0a, 0x05, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x05, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x71, 0x6c, 0x12, 0x21,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x13, 0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x52, 0x0d, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x6f,
	0x77, 0x73, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x52, 0x6f, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x75, 0x73, 0x65, 0x41,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x65,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_mysql_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_mysql_v1_plugin_proto_rawDescData = file_plugins_mysql_v1_plugin_proto_rawDesc
)

func file_plugins_mysql_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_mysql_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_mysql_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_mysql_v1_plugin_proto_rawDescData)
	})
	return file_plugins_mysql_v1_plugin_proto_rawDescData
}

var file_plugins_mysql_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_plugins_mysql_v1_plugin_proto_goTypes = []interface{}{
	(*MappedColumns)(nil),       // 0: plugins.mysql.v1.MappedColumns
	(*Tuple)(nil),               // 1: plugins.mysql.v1.Tuple
	(*SuperblocksMetadata)(nil), // 2: plugins.mysql.v1.SuperblocksMetadata
	(*Plugin)(nil),              // 3: plugins.mysql.v1.Plugin
	(*anypb.Any)(nil),           // 4: google.protobuf.Any
}
var file_plugins_mysql_v1_plugin_proto_depIdxs = []int32{
	4, // 0: plugins.mysql.v1.Tuple.value:type_name -> google.protobuf.Any
	0, // 1: plugins.mysql.v1.Plugin.mappedColumns:type_name -> plugins.mysql.v1.MappedColumns
	2, // 2: plugins.mysql.v1.Plugin.superblocksMetadata:type_name -> plugins.mysql.v1.SuperblocksMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_plugins_mysql_v1_plugin_proto_init() }
func file_plugins_mysql_v1_plugin_proto_init() {
	if File_plugins_mysql_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_mysql_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappedColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_mysql_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_mysql_v1_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperblocksMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_mysql_v1_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_mysql_v1_plugin_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_mysql_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_mysql_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_mysql_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_mysql_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_mysql_v1_plugin_proto = out.File
	file_plugins_mysql_v1_plugin_proto_rawDesc = nil
	file_plugins_mysql_v1_plugin_proto_goTypes = nil
	file_plugins_mysql_v1_plugin_proto_depIdxs = nil
}
