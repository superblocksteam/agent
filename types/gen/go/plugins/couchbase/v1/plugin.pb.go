// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: plugins/couchbase/v1/plugin.proto

package v1

import (
	v1 "github.com/superblocksteam/agent/types/gen/go/plugins/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Connection *Plugin_CouchbaseConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	// TODO (jason4012) we should unify the interface
	// so that endpoint doesn't have to be always be set here for SSH tunneling
	Endpoint                     *Plugin_CouchbaseEndpoint        `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	DynamicWorkflowConfiguration *v1.DynamicWorkflowConfiguration `protobuf:"bytes,4,opt,name=dynamic_workflow_configuration,json=dynamicWorkflowConfiguration,proto3,oneof" json:"dynamic_workflow_configuration,omitempty"`
	Tunnel                       *v1.SSHConfiguration             `protobuf:"bytes,5,opt,name=tunnel,proto3" json:"tunnel,omitempty"`
	// Types that are assignable to CouchbaseAction:
	//
	//	*Plugin_RunSql
	//	*Plugin_Insert
	//	*Plugin_Get
	//	*Plugin_Remove
	CouchbaseAction isPlugin_CouchbaseAction `protobuf_oneof:"couchbase_action"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetConnection() *Plugin_CouchbaseConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *Plugin) GetEndpoint() *Plugin_CouchbaseEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *Plugin) GetDynamicWorkflowConfiguration() *v1.DynamicWorkflowConfiguration {
	if x != nil {
		return x.DynamicWorkflowConfiguration
	}
	return nil
}

func (x *Plugin) GetTunnel() *v1.SSHConfiguration {
	if x != nil {
		return x.Tunnel
	}
	return nil
}

func (m *Plugin) GetCouchbaseAction() isPlugin_CouchbaseAction {
	if m != nil {
		return m.CouchbaseAction
	}
	return nil
}

func (x *Plugin) GetRunSql() *v1.SQLExecution {
	if x, ok := x.GetCouchbaseAction().(*Plugin_RunSql); ok {
		return x.RunSql
	}
	return nil
}

func (x *Plugin) GetInsert() *Plugin_CouchbaseInsert {
	if x, ok := x.GetCouchbaseAction().(*Plugin_Insert); ok {
		return x.Insert
	}
	return nil
}

func (x *Plugin) GetGet() *Plugin_CouchbaseGet {
	if x, ok := x.GetCouchbaseAction().(*Plugin_Get); ok {
		return x.Get
	}
	return nil
}

func (x *Plugin) GetRemove() *Plugin_CouchbaseRemove {
	if x, ok := x.GetCouchbaseAction().(*Plugin_Remove); ok {
		return x.Remove
	}
	return nil
}

type isPlugin_CouchbaseAction interface {
	isPlugin_CouchbaseAction()
}

type Plugin_RunSql struct {
	RunSql *v1.SQLExecution `protobuf:"bytes,6,opt,name=run_sql,json=runSql,proto3,oneof"`
}

type Plugin_Insert struct {
	Insert *Plugin_CouchbaseInsert `protobuf:"bytes,7,opt,name=insert,proto3,oneof"`
}

type Plugin_Get struct {
	Get *Plugin_CouchbaseGet `protobuf:"bytes,8,opt,name=get,proto3,oneof"`
}

type Plugin_Remove struct {
	Remove *Plugin_CouchbaseRemove `protobuf:"bytes,9,opt,name=remove,proto3,oneof"`
}

func (*Plugin_RunSql) isPlugin_CouchbaseAction() {}

func (*Plugin_Insert) isPlugin_CouchbaseAction() {}

func (*Plugin_Get) isPlugin_CouchbaseAction() {}

func (*Plugin_Remove) isPlugin_CouchbaseAction() {}

type Plugin_CouchbaseEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Plugin_CouchbaseEndpoint) Reset() {
	*x = Plugin_CouchbaseEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseEndpoint) ProtoMessage() {}

func (x *Plugin_CouchbaseEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseEndpoint.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseEndpoint) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Plugin_CouchbaseEndpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Plugin_CouchbaseEndpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Plugin_CouchbaseIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope      string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *Plugin_CouchbaseIdentifier) Reset() {
	*x = Plugin_CouchbaseIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseIdentifier) ProtoMessage() {}

func (x *Plugin_CouchbaseIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseIdentifier.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseIdentifier) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Plugin_CouchbaseIdentifier) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Plugin_CouchbaseIdentifier) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type Plugin_CouchbaseConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Bucket   string  `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	UseTls   bool    `protobuf:"varint,5,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	Url      *string `protobuf:"bytes,6,opt,name=url,proto3,oneof" json:"url,omitempty"`
}

func (x *Plugin_CouchbaseConnection) Reset() {
	*x = Plugin_CouchbaseConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseConnection) ProtoMessage() {}

func (x *Plugin_CouchbaseConnection) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseConnection.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseConnection) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Plugin_CouchbaseConnection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Plugin_CouchbaseConnection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Plugin_CouchbaseConnection) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Plugin_CouchbaseConnection) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *Plugin_CouchbaseConnection) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type Plugin_CouchbaseInsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string                      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value      string                      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Identifier *Plugin_CouchbaseIdentifier `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *Plugin_CouchbaseInsert) Reset() {
	*x = Plugin_CouchbaseInsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseInsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseInsert) ProtoMessage() {}

func (x *Plugin_CouchbaseInsert) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseInsert.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseInsert) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Plugin_CouchbaseInsert) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Plugin_CouchbaseInsert) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Plugin_CouchbaseInsert) GetIdentifier() *Plugin_CouchbaseIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type Plugin_CouchbaseGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string                      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Identifier *Plugin_CouchbaseIdentifier `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *Plugin_CouchbaseGet) Reset() {
	*x = Plugin_CouchbaseGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseGet) ProtoMessage() {}

func (x *Plugin_CouchbaseGet) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseGet.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseGet) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Plugin_CouchbaseGet) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Plugin_CouchbaseGet) GetIdentifier() *Plugin_CouchbaseIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type Plugin_CouchbaseRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string                      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Identifier *Plugin_CouchbaseIdentifier `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *Plugin_CouchbaseRemove) Reset() {
	*x = Plugin_CouchbaseRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_CouchbaseRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_CouchbaseRemove) ProtoMessage() {}

func (x *Plugin_CouchbaseRemove) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_couchbase_v1_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_CouchbaseRemove.ProtoReflect.Descriptor instead.
func (*Plugin_CouchbaseRemove) Descriptor() ([]byte, []int) {
	return file_plugins_couchbase_v1_plugin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Plugin_CouchbaseRemove) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Plugin_CouchbaseRemove) GetIdentifier() *Plugin_CouchbaseIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

var File_plugins_couchbase_v1_plugin_proto protoreflect.FileDescriptor

var file_plugins_couchbase_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75,
	0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x0a, 0x0a, 0x06, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x7a, 0x0a, 0x1e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x1c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x06, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x48, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x3a, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x71, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x53, 0x71, 0x6c, 0x12, 0x46, 0x0a, 0x06, 0x69,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43,
	0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75,
	0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x3b, 0x0a, 0x11, 0x43, 0x6f,
	0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x4b, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x95, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x6c, 0x73, 0x12, 0x15, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x1a, 0x8b, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x72, 0x0a, 0x0c, 0x43, 0x6f,
	0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x47, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43,
	0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x75,
	0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x44, 0x5a, 0x42,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_couchbase_v1_plugin_proto_rawDescOnce sync.Once
	file_plugins_couchbase_v1_plugin_proto_rawDescData = file_plugins_couchbase_v1_plugin_proto_rawDesc
)

func file_plugins_couchbase_v1_plugin_proto_rawDescGZIP() []byte {
	file_plugins_couchbase_v1_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_couchbase_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_couchbase_v1_plugin_proto_rawDescData)
	})
	return file_plugins_couchbase_v1_plugin_proto_rawDescData
}

var file_plugins_couchbase_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_plugins_couchbase_v1_plugin_proto_goTypes = []interface{}{
	(*Plugin)(nil),                          // 0: plugins.couchbase.v1.Plugin
	(*Plugin_CouchbaseEndpoint)(nil),        // 1: plugins.couchbase.v1.Plugin.CouchbaseEndpoint
	(*Plugin_CouchbaseIdentifier)(nil),      // 2: plugins.couchbase.v1.Plugin.CouchbaseIdentifier
	(*Plugin_CouchbaseConnection)(nil),      // 3: plugins.couchbase.v1.Plugin.CouchbaseConnection
	(*Plugin_CouchbaseInsert)(nil),          // 4: plugins.couchbase.v1.Plugin.CouchbaseInsert
	(*Plugin_CouchbaseGet)(nil),             // 5: plugins.couchbase.v1.Plugin.CouchbaseGet
	(*Plugin_CouchbaseRemove)(nil),          // 6: plugins.couchbase.v1.Plugin.CouchbaseRemove
	(*v1.DynamicWorkflowConfiguration)(nil), // 7: plugins.common.v1.DynamicWorkflowConfiguration
	(*v1.SSHConfiguration)(nil),             // 8: plugins.common.v1.SSHConfiguration
	(*v1.SQLExecution)(nil),                 // 9: plugins.common.v1.SQLExecution
}
var file_plugins_couchbase_v1_plugin_proto_depIdxs = []int32{
	3,  // 0: plugins.couchbase.v1.Plugin.connection:type_name -> plugins.couchbase.v1.Plugin.CouchbaseConnection
	1,  // 1: plugins.couchbase.v1.Plugin.endpoint:type_name -> plugins.couchbase.v1.Plugin.CouchbaseEndpoint
	7,  // 2: plugins.couchbase.v1.Plugin.dynamic_workflow_configuration:type_name -> plugins.common.v1.DynamicWorkflowConfiguration
	8,  // 3: plugins.couchbase.v1.Plugin.tunnel:type_name -> plugins.common.v1.SSHConfiguration
	9,  // 4: plugins.couchbase.v1.Plugin.run_sql:type_name -> plugins.common.v1.SQLExecution
	4,  // 5: plugins.couchbase.v1.Plugin.insert:type_name -> plugins.couchbase.v1.Plugin.CouchbaseInsert
	5,  // 6: plugins.couchbase.v1.Plugin.get:type_name -> plugins.couchbase.v1.Plugin.CouchbaseGet
	6,  // 7: plugins.couchbase.v1.Plugin.remove:type_name -> plugins.couchbase.v1.Plugin.CouchbaseRemove
	2,  // 8: plugins.couchbase.v1.Plugin.CouchbaseInsert.identifier:type_name -> plugins.couchbase.v1.Plugin.CouchbaseIdentifier
	2,  // 9: plugins.couchbase.v1.Plugin.CouchbaseGet.identifier:type_name -> plugins.couchbase.v1.Plugin.CouchbaseIdentifier
	2,  // 10: plugins.couchbase.v1.Plugin.CouchbaseRemove.identifier:type_name -> plugins.couchbase.v1.Plugin.CouchbaseIdentifier
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_plugins_couchbase_v1_plugin_proto_init() }
func file_plugins_couchbase_v1_plugin_proto_init() {
	if File_plugins_couchbase_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_couchbase_v1_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseInsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_couchbase_v1_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_CouchbaseRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugins_couchbase_v1_plugin_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Plugin_RunSql)(nil),
		(*Plugin_Insert)(nil),
		(*Plugin_Get)(nil),
		(*Plugin_Remove)(nil),
	}
	file_plugins_couchbase_v1_plugin_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_couchbase_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_couchbase_v1_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_couchbase_v1_plugin_proto_depIdxs,
		MessageInfos:      file_plugins_couchbase_v1_plugin_proto_msgTypes,
	}.Build()
	File_plugins_couchbase_v1_plugin_proto = out.File
	file_plugins_couchbase_v1_plugin_proto_rawDesc = nil
	file_plugins_couchbase_v1_plugin_proto_goTypes = nil
	file_plugins_couchbase_v1_plugin_proto_depIdxs = nil
}
