// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: common/v1/language.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_LANGUAGE_UNSPECIFIED Language = 0
	Language_LANGUAGE_EN          Language = 1
	Language_LANGUAGE_AF          Language = 4
	Language_LANGUAGE_SQ          Language = 5
	Language_LANGUAGE_AR_DZ       Language = 6
	Language_LANGUAGE_AR_BH       Language = 7
	Language_LANGUAGE_AR_EG       Language = 8
	Language_LANGUAGE_AR_IQ       Language = 9
	Language_LANGUAGE_AR_JO       Language = 10
	Language_LANGUAGE_AR_KW       Language = 11
	Language_LANGUAGE_AR_LB       Language = 12
	Language_LANGUAGE_AR_LY       Language = 13
	Language_LANGUAGE_AR_MA       Language = 14
	Language_LANGUAGE_AR_OM       Language = 15
	Language_LANGUAGE_AR_QA       Language = 16
	Language_LANGUAGE_AR_SA       Language = 17
	Language_LANGUAGE_AR_SY       Language = 18
	Language_LANGUAGE_AR_TN       Language = 19
	Language_LANGUAGE_AR_AE       Language = 20
	Language_LANGUAGE_AR_YE       Language = 21
	Language_LANGUAGE_EU          Language = 22
	Language_LANGUAGE_BE          Language = 23
	Language_LANGUAGE_BG          Language = 24
	Language_LANGUAGE_CA          Language = 25
	Language_LANGUAGE_ZH_HK       Language = 26
	Language_LANGUAGE_ZH_CN       Language = 27
	Language_LANGUAGE_ZH_SG       Language = 28
	Language_LANGUAGE_ZH_TW       Language = 29
	Language_LANGUAGE_HR          Language = 30
	Language_LANGUAGE_CS          Language = 31
	Language_LANGUAGE_DA          Language = 32
	Language_LANGUAGE_NL_BE       Language = 33
	Language_LANGUAGE_NL          Language = 34
	Language_LANGUAGE_EN_AU       Language = 35
	Language_LANGUAGE_EN_BZ       Language = 36
	Language_LANGUAGE_EN_CA       Language = 37
	Language_LANGUAGE_EN_IE       Language = 38
	Language_LANGUAGE_EN_JM       Language = 39
	Language_LANGUAGE_EN_NZ       Language = 40
	Language_LANGUAGE_EN_ZA       Language = 41
	Language_LANGUAGE_EN_TT       Language = 42
	Language_LANGUAGE_EN_GB       Language = 43
	Language_LANGUAGE_EN_US       Language = 44
	Language_LANGUAGE_ET          Language = 45
	Language_LANGUAGE_FO          Language = 46
	Language_LANGUAGE_FA          Language = 47
	Language_LANGUAGE_FI          Language = 48
	Language_LANGUAGE_FR_BE       Language = 49
	Language_LANGUAGE_FR_CA       Language = 50
	Language_LANGUAGE_FR_LU       Language = 51
	Language_LANGUAGE_FR          Language = 52
	Language_LANGUAGE_FR_CH       Language = 53
	Language_LANGUAGE_GD          Language = 54
	Language_LANGUAGE_DE_AT       Language = 55
	Language_LANGUAGE_DE_LI       Language = 56
	Language_LANGUAGE_DE_LU       Language = 57
	Language_LANGUAGE_DE          Language = 58
	Language_LANGUAGE_DE_CH       Language = 59
	Language_LANGUAGE_EL          Language = 60
	Language_LANGUAGE_HE          Language = 61
	Language_LANGUAGE_HI          Language = 62
	Language_LANGUAGE_HU          Language = 63
	Language_LANGUAGE_IS          Language = 64
	Language_LANGUAGE_ID          Language = 65
	Language_LANGUAGE_GA          Language = 66
	Language_LANGUAGE_IT          Language = 67
	Language_LANGUAGE_IT_CH       Language = 68
	Language_LANGUAGE_JA          Language = 69
	Language_LANGUAGE_KO          Language = 70
	Language_LANGUAGE_KU          Language = 71
	Language_LANGUAGE_LV          Language = 72
	Language_LANGUAGE_LT          Language = 73
	Language_LANGUAGE_MK          Language = 74
	Language_LANGUAGE_ML          Language = 75
	Language_LANGUAGE_MS          Language = 76
	Language_LANGUAGE_MT          Language = 77
	Language_LANGUAGE_NO          Language = 78
	Language_LANGUAGE_NB          Language = 79
	Language_LANGUAGE_NN          Language = 80
	Language_LANGUAGE_PL          Language = 81
	Language_LANGUAGE_PT_BR       Language = 82
	Language_LANGUAGE_PT          Language = 83
	Language_LANGUAGE_PA          Language = 84
	Language_LANGUAGE_RM          Language = 85
	Language_LANGUAGE_RO          Language = 86
	Language_LANGUAGE_RO_MD       Language = 87
	Language_LANGUAGE_RU          Language = 88
	Language_LANGUAGE_RU_MD       Language = 89
	Language_LANGUAGE_SR          Language = 90
	Language_LANGUAGE_SK          Language = 91
	Language_LANGUAGE_SL          Language = 92
	Language_LANGUAGE_SB          Language = 93
	Language_LANGUAGE_ES_AR       Language = 94
	Language_LANGUAGE_ES_BO       Language = 95
	Language_LANGUAGE_ES_CL       Language = 96
	Language_LANGUAGE_ES_CO       Language = 97
	Language_LANGUAGE_ES_CR       Language = 98
	Language_LANGUAGE_ES_DO       Language = 99
	Language_LANGUAGE_ES_EC       Language = 100
	Language_LANGUAGE_ES_SV       Language = 101
	Language_LANGUAGE_ES_GT       Language = 102
	Language_LANGUAGE_ES_HN       Language = 103
	Language_LANGUAGE_ES_MX       Language = 104
	Language_LANGUAGE_ES_NI       Language = 105
	Language_LANGUAGE_ES_PA       Language = 106
	Language_LANGUAGE_ES_PY       Language = 107
	Language_LANGUAGE_ES_PE       Language = 108
	Language_LANGUAGE_ES_PR       Language = 109
	Language_LANGUAGE_ES          Language = 110
	Language_LANGUAGE_ES_UY       Language = 111
	Language_LANGUAGE_ES_VE       Language = 112
	Language_LANGUAGE_SV          Language = 113
	Language_LANGUAGE_SV_FI       Language = 114
	Language_LANGUAGE_TH          Language = 115
	Language_LANGUAGE_TS          Language = 116
	Language_LANGUAGE_TN          Language = 117
	Language_LANGUAGE_TR          Language = 118
	Language_LANGUAGE_UA          Language = 119
	Language_LANGUAGE_UR          Language = 120
	Language_LANGUAGE_VE          Language = 121
	Language_LANGUAGE_VI          Language = 122
	Language_LANGUAGE_CY          Language = 123
	Language_LANGUAGE_XH          Language = 124
	Language_LANGUAGE_JI          Language = 125
	Language_LANGUAGE_ZU          Language = 126
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0:   "LANGUAGE_UNSPECIFIED",
		1:   "LANGUAGE_EN",
		4:   "LANGUAGE_AF",
		5:   "LANGUAGE_SQ",
		6:   "LANGUAGE_AR_DZ",
		7:   "LANGUAGE_AR_BH",
		8:   "LANGUAGE_AR_EG",
		9:   "LANGUAGE_AR_IQ",
		10:  "LANGUAGE_AR_JO",
		11:  "LANGUAGE_AR_KW",
		12:  "LANGUAGE_AR_LB",
		13:  "LANGUAGE_AR_LY",
		14:  "LANGUAGE_AR_MA",
		15:  "LANGUAGE_AR_OM",
		16:  "LANGUAGE_AR_QA",
		17:  "LANGUAGE_AR_SA",
		18:  "LANGUAGE_AR_SY",
		19:  "LANGUAGE_AR_TN",
		20:  "LANGUAGE_AR_AE",
		21:  "LANGUAGE_AR_YE",
		22:  "LANGUAGE_EU",
		23:  "LANGUAGE_BE",
		24:  "LANGUAGE_BG",
		25:  "LANGUAGE_CA",
		26:  "LANGUAGE_ZH_HK",
		27:  "LANGUAGE_ZH_CN",
		28:  "LANGUAGE_ZH_SG",
		29:  "LANGUAGE_ZH_TW",
		30:  "LANGUAGE_HR",
		31:  "LANGUAGE_CS",
		32:  "LANGUAGE_DA",
		33:  "LANGUAGE_NL_BE",
		34:  "LANGUAGE_NL",
		35:  "LANGUAGE_EN_AU",
		36:  "LANGUAGE_EN_BZ",
		37:  "LANGUAGE_EN_CA",
		38:  "LANGUAGE_EN_IE",
		39:  "LANGUAGE_EN_JM",
		40:  "LANGUAGE_EN_NZ",
		41:  "LANGUAGE_EN_ZA",
		42:  "LANGUAGE_EN_TT",
		43:  "LANGUAGE_EN_GB",
		44:  "LANGUAGE_EN_US",
		45:  "LANGUAGE_ET",
		46:  "LANGUAGE_FO",
		47:  "LANGUAGE_FA",
		48:  "LANGUAGE_FI",
		49:  "LANGUAGE_FR_BE",
		50:  "LANGUAGE_FR_CA",
		51:  "LANGUAGE_FR_LU",
		52:  "LANGUAGE_FR",
		53:  "LANGUAGE_FR_CH",
		54:  "LANGUAGE_GD",
		55:  "LANGUAGE_DE_AT",
		56:  "LANGUAGE_DE_LI",
		57:  "LANGUAGE_DE_LU",
		58:  "LANGUAGE_DE",
		59:  "LANGUAGE_DE_CH",
		60:  "LANGUAGE_EL",
		61:  "LANGUAGE_HE",
		62:  "LANGUAGE_HI",
		63:  "LANGUAGE_HU",
		64:  "LANGUAGE_IS",
		65:  "LANGUAGE_ID",
		66:  "LANGUAGE_GA",
		67:  "LANGUAGE_IT",
		68:  "LANGUAGE_IT_CH",
		69:  "LANGUAGE_JA",
		70:  "LANGUAGE_KO",
		71:  "LANGUAGE_KU",
		72:  "LANGUAGE_LV",
		73:  "LANGUAGE_LT",
		74:  "LANGUAGE_MK",
		75:  "LANGUAGE_ML",
		76:  "LANGUAGE_MS",
		77:  "LANGUAGE_MT",
		78:  "LANGUAGE_NO",
		79:  "LANGUAGE_NB",
		80:  "LANGUAGE_NN",
		81:  "LANGUAGE_PL",
		82:  "LANGUAGE_PT_BR",
		83:  "LANGUAGE_PT",
		84:  "LANGUAGE_PA",
		85:  "LANGUAGE_RM",
		86:  "LANGUAGE_RO",
		87:  "LANGUAGE_RO_MD",
		88:  "LANGUAGE_RU",
		89:  "LANGUAGE_RU_MD",
		90:  "LANGUAGE_SR",
		91:  "LANGUAGE_SK",
		92:  "LANGUAGE_SL",
		93:  "LANGUAGE_SB",
		94:  "LANGUAGE_ES_AR",
		95:  "LANGUAGE_ES_BO",
		96:  "LANGUAGE_ES_CL",
		97:  "LANGUAGE_ES_CO",
		98:  "LANGUAGE_ES_CR",
		99:  "LANGUAGE_ES_DO",
		100: "LANGUAGE_ES_EC",
		101: "LANGUAGE_ES_SV",
		102: "LANGUAGE_ES_GT",
		103: "LANGUAGE_ES_HN",
		104: "LANGUAGE_ES_MX",
		105: "LANGUAGE_ES_NI",
		106: "LANGUAGE_ES_PA",
		107: "LANGUAGE_ES_PY",
		108: "LANGUAGE_ES_PE",
		109: "LANGUAGE_ES_PR",
		110: "LANGUAGE_ES",
		111: "LANGUAGE_ES_UY",
		112: "LANGUAGE_ES_VE",
		113: "LANGUAGE_SV",
		114: "LANGUAGE_SV_FI",
		115: "LANGUAGE_TH",
		116: "LANGUAGE_TS",
		117: "LANGUAGE_TN",
		118: "LANGUAGE_TR",
		119: "LANGUAGE_UA",
		120: "LANGUAGE_UR",
		121: "LANGUAGE_VE",
		122: "LANGUAGE_VI",
		123: "LANGUAGE_CY",
		124: "LANGUAGE_XH",
		125: "LANGUAGE_JI",
		126: "LANGUAGE_ZU",
	}
	Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"LANGUAGE_EN":          1,
		"LANGUAGE_AF":          4,
		"LANGUAGE_SQ":          5,
		"LANGUAGE_AR_DZ":       6,
		"LANGUAGE_AR_BH":       7,
		"LANGUAGE_AR_EG":       8,
		"LANGUAGE_AR_IQ":       9,
		"LANGUAGE_AR_JO":       10,
		"LANGUAGE_AR_KW":       11,
		"LANGUAGE_AR_LB":       12,
		"LANGUAGE_AR_LY":       13,
		"LANGUAGE_AR_MA":       14,
		"LANGUAGE_AR_OM":       15,
		"LANGUAGE_AR_QA":       16,
		"LANGUAGE_AR_SA":       17,
		"LANGUAGE_AR_SY":       18,
		"LANGUAGE_AR_TN":       19,
		"LANGUAGE_AR_AE":       20,
		"LANGUAGE_AR_YE":       21,
		"LANGUAGE_EU":          22,
		"LANGUAGE_BE":          23,
		"LANGUAGE_BG":          24,
		"LANGUAGE_CA":          25,
		"LANGUAGE_ZH_HK":       26,
		"LANGUAGE_ZH_CN":       27,
		"LANGUAGE_ZH_SG":       28,
		"LANGUAGE_ZH_TW":       29,
		"LANGUAGE_HR":          30,
		"LANGUAGE_CS":          31,
		"LANGUAGE_DA":          32,
		"LANGUAGE_NL_BE":       33,
		"LANGUAGE_NL":          34,
		"LANGUAGE_EN_AU":       35,
		"LANGUAGE_EN_BZ":       36,
		"LANGUAGE_EN_CA":       37,
		"LANGUAGE_EN_IE":       38,
		"LANGUAGE_EN_JM":       39,
		"LANGUAGE_EN_NZ":       40,
		"LANGUAGE_EN_ZA":       41,
		"LANGUAGE_EN_TT":       42,
		"LANGUAGE_EN_GB":       43,
		"LANGUAGE_EN_US":       44,
		"LANGUAGE_ET":          45,
		"LANGUAGE_FO":          46,
		"LANGUAGE_FA":          47,
		"LANGUAGE_FI":          48,
		"LANGUAGE_FR_BE":       49,
		"LANGUAGE_FR_CA":       50,
		"LANGUAGE_FR_LU":       51,
		"LANGUAGE_FR":          52,
		"LANGUAGE_FR_CH":       53,
		"LANGUAGE_GD":          54,
		"LANGUAGE_DE_AT":       55,
		"LANGUAGE_DE_LI":       56,
		"LANGUAGE_DE_LU":       57,
		"LANGUAGE_DE":          58,
		"LANGUAGE_DE_CH":       59,
		"LANGUAGE_EL":          60,
		"LANGUAGE_HE":          61,
		"LANGUAGE_HI":          62,
		"LANGUAGE_HU":          63,
		"LANGUAGE_IS":          64,
		"LANGUAGE_ID":          65,
		"LANGUAGE_GA":          66,
		"LANGUAGE_IT":          67,
		"LANGUAGE_IT_CH":       68,
		"LANGUAGE_JA":          69,
		"LANGUAGE_KO":          70,
		"LANGUAGE_KU":          71,
		"LANGUAGE_LV":          72,
		"LANGUAGE_LT":          73,
		"LANGUAGE_MK":          74,
		"LANGUAGE_ML":          75,
		"LANGUAGE_MS":          76,
		"LANGUAGE_MT":          77,
		"LANGUAGE_NO":          78,
		"LANGUAGE_NB":          79,
		"LANGUAGE_NN":          80,
		"LANGUAGE_PL":          81,
		"LANGUAGE_PT_BR":       82,
		"LANGUAGE_PT":          83,
		"LANGUAGE_PA":          84,
		"LANGUAGE_RM":          85,
		"LANGUAGE_RO":          86,
		"LANGUAGE_RO_MD":       87,
		"LANGUAGE_RU":          88,
		"LANGUAGE_RU_MD":       89,
		"LANGUAGE_SR":          90,
		"LANGUAGE_SK":          91,
		"LANGUAGE_SL":          92,
		"LANGUAGE_SB":          93,
		"LANGUAGE_ES_AR":       94,
		"LANGUAGE_ES_BO":       95,
		"LANGUAGE_ES_CL":       96,
		"LANGUAGE_ES_CO":       97,
		"LANGUAGE_ES_CR":       98,
		"LANGUAGE_ES_DO":       99,
		"LANGUAGE_ES_EC":       100,
		"LANGUAGE_ES_SV":       101,
		"LANGUAGE_ES_GT":       102,
		"LANGUAGE_ES_HN":       103,
		"LANGUAGE_ES_MX":       104,
		"LANGUAGE_ES_NI":       105,
		"LANGUAGE_ES_PA":       106,
		"LANGUAGE_ES_PY":       107,
		"LANGUAGE_ES_PE":       108,
		"LANGUAGE_ES_PR":       109,
		"LANGUAGE_ES":          110,
		"LANGUAGE_ES_UY":       111,
		"LANGUAGE_ES_VE":       112,
		"LANGUAGE_SV":          113,
		"LANGUAGE_SV_FI":       114,
		"LANGUAGE_TH":          115,
		"LANGUAGE_TS":          116,
		"LANGUAGE_TN":          117,
		"LANGUAGE_TR":          118,
		"LANGUAGE_UA":          119,
		"LANGUAGE_UR":          120,
		"LANGUAGE_VE":          121,
		"LANGUAGE_VI":          122,
		"LANGUAGE_CY":          123,
		"LANGUAGE_XH":          124,
		"LANGUAGE_JI":          125,
		"LANGUAGE_ZU":          126,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_language_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_common_v1_language_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_language_proto_rawDescGZIP(), []int{0}
}

var File_common_v1_language_proto protoreflect.FileDescriptor

var file_common_v1_language_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2a, 0x9a, 0x12, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x46, 0x10, 0x04, 0x12, 0x0f,
	0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x51, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x44,
	0x5a, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x52, 0x5f, 0x42, 0x48, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x45, 0x47, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x49, 0x51, 0x10, 0x09, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x4a,
	0x4f, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x52, 0x5f, 0x4b, 0x57, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x4c, 0x42, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x4c, 0x59, 0x10, 0x0d, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x4d,
	0x41, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x52, 0x5f, 0x4f, 0x4d, 0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x51, 0x41, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x53, 0x41, 0x10, 0x11, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x53,
	0x59, 0x10, 0x12, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x52, 0x5f, 0x54, 0x4e, 0x10, 0x13, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x41, 0x45, 0x10, 0x14, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x5f, 0x59, 0x45, 0x10, 0x15, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x55, 0x10, 0x16,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x45, 0x10,
	0x17, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x47,
	0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x43,
	0x41, 0x10, 0x19, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x5a, 0x48, 0x5f, 0x48, 0x4b, 0x10, 0x1a, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x5a, 0x48, 0x5f, 0x43, 0x4e, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x5a, 0x48, 0x5f, 0x53, 0x47, 0x10, 0x1c, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x5a, 0x48, 0x5f, 0x54,
	0x57, 0x10, 0x1d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x48, 0x52, 0x10, 0x1e, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x43, 0x53, 0x10, 0x1f, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47,
	0x45, 0x5f, 0x44, 0x41, 0x10, 0x20, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x4e, 0x4c, 0x5f, 0x42, 0x45, 0x10, 0x21, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4c, 0x10, 0x22, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x41, 0x55, 0x10, 0x23, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x42,
	0x5a, 0x10, 0x24, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x45, 0x4e, 0x5f, 0x43, 0x41, 0x10, 0x25, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x49, 0x45, 0x10, 0x26, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x4a, 0x4d, 0x10, 0x27, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x4e,
	0x5a, 0x10, 0x28, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x45, 0x4e, 0x5f, 0x5a, 0x41, 0x10, 0x29, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x54, 0x54, 0x10, 0x2a, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x47, 0x42, 0x10, 0x2b, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x55,
	0x53, 0x10, 0x2c, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x45, 0x54, 0x10, 0x2d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x46, 0x4f, 0x10, 0x2e, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47,
	0x45, 0x5f, 0x46, 0x41, 0x10, 0x2f, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x46, 0x49, 0x10, 0x30, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x52, 0x5f, 0x42, 0x45, 0x10, 0x31, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x52, 0x5f, 0x43, 0x41, 0x10, 0x32, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x52, 0x5f, 0x4c,
	0x55, 0x10, 0x33, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x46, 0x52, 0x10, 0x34, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x46, 0x52, 0x5f, 0x43, 0x48, 0x10, 0x35, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x44, 0x10, 0x36, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x37, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x5f, 0x4c, 0x49, 0x10,
	0x38, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45,
	0x5f, 0x4c, 0x55, 0x10, 0x39, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47,
	0x45, 0x5f, 0x44, 0x45, 0x10, 0x3a, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x10, 0x3b, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4c, 0x10, 0x3c, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x45, 0x10, 0x3d, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x49, 0x10, 0x3e, 0x12, 0x0f, 0x0a,
	0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x55, 0x10, 0x3f, 0x12, 0x0f,
	0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x53, 0x10, 0x40, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x41,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x41, 0x10,
	0x42, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x54,
	0x10, 0x43, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x49,
	0x54, 0x5f, 0x43, 0x48, 0x10, 0x44, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x4a, 0x41, 0x10, 0x45, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x4b, 0x4f, 0x10, 0x46, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x4b, 0x55, 0x10, 0x47, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4c, 0x56, 0x10, 0x48, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4c, 0x54, 0x10, 0x49, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x4b, 0x10, 0x4a, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x4c, 0x10, 0x4b, 0x12, 0x0f, 0x0a,
	0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x53, 0x10, 0x4c, 0x12, 0x0f,
	0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x54, 0x10, 0x4d, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x10, 0x4e,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x42, 0x10,
	0x4f, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4e,
	0x10, 0x50, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x50,
	0x4c, 0x10, 0x51, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x54, 0x5f, 0x42, 0x52, 0x10, 0x52, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x50, 0x54, 0x10, 0x53, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x10, 0x54, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4d, 0x10, 0x55, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x10, 0x56, 0x12, 0x12, 0x0a, 0x0e, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x5f, 0x4d, 0x44, 0x10, 0x57, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x55, 0x10, 0x58,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x55, 0x5f,
	0x4d, 0x44, 0x10, 0x59, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x53, 0x52, 0x10, 0x5a, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47,
	0x45, 0x5f, 0x53, 0x4b, 0x10, 0x5b, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x4c, 0x10, 0x5c, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x42, 0x10, 0x5d, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x41, 0x52, 0x10, 0x5e, 0x12, 0x12, 0x0a, 0x0e,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x42, 0x4f, 0x10, 0x5f,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f,
	0x43, 0x4c, 0x10, 0x60, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x10, 0x61, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x43, 0x52, 0x10, 0x62, 0x12, 0x12, 0x0a, 0x0e,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x44, 0x4f, 0x10, 0x63,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f,
	0x45, 0x43, 0x10, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x45, 0x53, 0x5f, 0x53, 0x56, 0x10, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x47, 0x54, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x48, 0x4e, 0x10, 0x67,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f,
	0x4d, 0x58, 0x10, 0x68, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x45, 0x53, 0x5f, 0x4e, 0x49, 0x10, 0x69, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x50, 0x41, 0x10, 0x6a, 0x12, 0x12, 0x0a, 0x0e,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x50, 0x59, 0x10, 0x6b,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f,
	0x50, 0x45, 0x10, 0x6c, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x45, 0x53, 0x5f, 0x50, 0x52, 0x10, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x10, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x55, 0x59, 0x10, 0x6f, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x53, 0x5f, 0x56, 0x45, 0x10,
	0x70, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x56,
	0x10, 0x71, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x53,
	0x56, 0x5f, 0x46, 0x49, 0x10, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x48, 0x10, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x53, 0x10, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x4e, 0x10, 0x75, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x10, 0x76, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x41, 0x10, 0x77, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x52, 0x10, 0x78, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x45, 0x10, 0x79, 0x12, 0x0f, 0x0a,
	0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x49, 0x10, 0x7a, 0x12, 0x0f,
	0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x59, 0x10, 0x7b, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x58, 0x48, 0x10, 0x7c,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4a, 0x49, 0x10,
	0x7d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x5a, 0x55,
	0x10, 0x7e, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_language_proto_rawDescOnce sync.Once
	file_common_v1_language_proto_rawDescData = file_common_v1_language_proto_rawDesc
)

func file_common_v1_language_proto_rawDescGZIP() []byte {
	file_common_v1_language_proto_rawDescOnce.Do(func() {
		file_common_v1_language_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_language_proto_rawDescData)
	})
	return file_common_v1_language_proto_rawDescData
}

var file_common_v1_language_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_v1_language_proto_goTypes = []interface{}{
	(Language)(0), // 0: common.v1.Language
}
var file_common_v1_language_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_language_proto_init() }
func file_common_v1_language_proto_init() {
	if File_common_v1_language_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_language_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_language_proto_goTypes,
		DependencyIndexes: file_common_v1_language_proto_depIdxs,
		EnumInfos:         file_common_v1_language_proto_enumTypes,
	}.Build()
	File_common_v1_language_proto = out.File
	file_common_v1_language_proto_rawDesc = nil
	file_common_v1_language_proto_goTypes = nil
	file_common_v1_language_proto_depIdxs = nil
}
