// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: agent/v1/service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/superblocksteam/agent/types/gen/go/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditLogRequest_AuditLog_ApiRunStatus int32

const (
	AuditLogRequest_AuditLog_API_RUN_STATUS_UNSPECIFIED AuditLogRequest_AuditLog_ApiRunStatus = 0
	AuditLogRequest_AuditLog_API_RUN_STATUS_SUCCESS     AuditLogRequest_AuditLog_ApiRunStatus = 1
	AuditLogRequest_AuditLog_API_RUN_STATUS_FAILED      AuditLogRequest_AuditLog_ApiRunStatus = 2
)

// Enum value maps for AuditLogRequest_AuditLog_ApiRunStatus.
var (
	AuditLogRequest_AuditLog_ApiRunStatus_name = map[int32]string{
		0: "API_RUN_STATUS_UNSPECIFIED",
		1: "API_RUN_STATUS_SUCCESS",
		2: "API_RUN_STATUS_FAILED",
	}
	AuditLogRequest_AuditLog_ApiRunStatus_value = map[string]int32{
		"API_RUN_STATUS_UNSPECIFIED": 0,
		"API_RUN_STATUS_SUCCESS":     1,
		"API_RUN_STATUS_FAILED":      2,
	}
)

func (x AuditLogRequest_AuditLog_ApiRunStatus) Enum() *AuditLogRequest_AuditLog_ApiRunStatus {
	p := new(AuditLogRequest_AuditLog_ApiRunStatus)
	*p = x
	return p
}

func (x AuditLogRequest_AuditLog_ApiRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogRequest_AuditLog_ApiRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_v1_service_proto_enumTypes[0].Descriptor()
}

func (AuditLogRequest_AuditLog_ApiRunStatus) Type() protoreflect.EnumType {
	return &file_agent_v1_service_proto_enumTypes[0]
}

func (x AuditLogRequest_AuditLog_ApiRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogRequest_AuditLog_ApiRunStatus.Descriptor instead.
func (AuditLogRequest_AuditLog_ApiRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0, 0}
}

type AuditLogRequest_AuditLog_AuditLogEntityType int32

const (
	AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED   AuditLogRequest_AuditLog_AuditLogEntityType = 0
	AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_APPLICATION   AuditLogRequest_AuditLog_AuditLogEntityType = 1
	AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_WORKFLOW      AuditLogRequest_AuditLog_AuditLogEntityType = 2
	AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_SCHEDULED_JOB AuditLogRequest_AuditLog_AuditLogEntityType = 3
	AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_STEP          AuditLogRequest_AuditLog_AuditLogEntityType = 4
)

// Enum value maps for AuditLogRequest_AuditLog_AuditLogEntityType.
var (
	AuditLogRequest_AuditLog_AuditLogEntityType_name = map[int32]string{
		0: "AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED",
		1: "AUDIT_LOG_ENTITY_TYPE_APPLICATION",
		2: "AUDIT_LOG_ENTITY_TYPE_WORKFLOW",
		3: "AUDIT_LOG_ENTITY_TYPE_SCHEDULED_JOB",
		4: "AUDIT_LOG_ENTITY_TYPE_STEP",
	}
	AuditLogRequest_AuditLog_AuditLogEntityType_value = map[string]int32{
		"AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED":   0,
		"AUDIT_LOG_ENTITY_TYPE_APPLICATION":   1,
		"AUDIT_LOG_ENTITY_TYPE_WORKFLOW":      2,
		"AUDIT_LOG_ENTITY_TYPE_SCHEDULED_JOB": 3,
		"AUDIT_LOG_ENTITY_TYPE_STEP":          4,
	}
)

func (x AuditLogRequest_AuditLog_AuditLogEntityType) Enum() *AuditLogRequest_AuditLog_AuditLogEntityType {
	p := new(AuditLogRequest_AuditLog_AuditLogEntityType)
	*p = x
	return p
}

func (x AuditLogRequest_AuditLog_AuditLogEntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogRequest_AuditLog_AuditLogEntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_v1_service_proto_enumTypes[1].Descriptor()
}

func (AuditLogRequest_AuditLog_AuditLogEntityType) Type() protoreflect.EnumType {
	return &file_agent_v1_service_proto_enumTypes[1]
}

func (x AuditLogRequest_AuditLog_AuditLogEntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogRequest_AuditLog_AuditLogEntityType.Descriptor instead.
func (AuditLogRequest_AuditLog_AuditLogEntityType) EnumDescriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0, 1}
}

type AuditLogRequest_AuditLog_AuditLogEventType int32

const (
	AuditLogRequest_AuditLog_AUDIT_LOG_EVENT_TYPE_UNSPECIFIED AuditLogRequest_AuditLog_AuditLogEventType = 0
	AuditLogRequest_AuditLog_AUDIT_LOG_EVENT_TYPE_API_RUN     AuditLogRequest_AuditLog_AuditLogEventType = 1
)

// Enum value maps for AuditLogRequest_AuditLog_AuditLogEventType.
var (
	AuditLogRequest_AuditLog_AuditLogEventType_name = map[int32]string{
		0: "AUDIT_LOG_EVENT_TYPE_UNSPECIFIED",
		1: "AUDIT_LOG_EVENT_TYPE_API_RUN",
	}
	AuditLogRequest_AuditLog_AuditLogEventType_value = map[string]int32{
		"AUDIT_LOG_EVENT_TYPE_UNSPECIFIED": 0,
		"AUDIT_LOG_EVENT_TYPE_API_RUN":     1,
	}
)

func (x AuditLogRequest_AuditLog_AuditLogEventType) Enum() *AuditLogRequest_AuditLog_AuditLogEventType {
	p := new(AuditLogRequest_AuditLog_AuditLogEventType)
	*p = x
	return p
}

func (x AuditLogRequest_AuditLog_AuditLogEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogRequest_AuditLog_AuditLogEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_v1_service_proto_enumTypes[2].Descriptor()
}

func (AuditLogRequest_AuditLog_AuditLogEventType) Type() protoreflect.EnumType {
	return &file_agent_v1_service_proto_enumTypes[2]
}

func (x AuditLogRequest_AuditLog_AuditLogEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogRequest_AuditLog_AuditLogEventType.Descriptor instead.
func (AuditLogRequest_AuditLog_AuditLogEventType) EnumDescriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0, 2}
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginVersions     map[string]*VersionList `protobuf:"bytes,1,rep,name=plugin_versions,json=pluginVersions,proto3" json:"plugin_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type               int32                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Tags               map[string]*TagList     `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SigningKeyId       string                  `protobuf:"bytes,4,opt,name=signing_key_id,json=signingKeyId,proto3" json:"signing_key_id,omitempty"`
	VerificationKeyIds []string                `protobuf:"bytes,5,rep,name=verification_key_ids,json=verificationKeyIds,proto3" json:"verification_key_ids,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationRequest) GetPluginVersions() map[string]*VersionList {
	if x != nil {
		return x.PluginVersions
	}
	return nil
}

func (x *RegistrationRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RegistrationRequest) GetTags() map[string]*TagList {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RegistrationRequest) GetSigningKeyId() string {
	if x != nil {
		return x.SigningKeyId
	}
	return ""
}

func (x *RegistrationRequest) GetVerificationKeyIds() []string {
	if x != nil {
		return x.VerificationKeyIds
	}
	return nil
}

type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *RegistrationResponse_ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	Data         *RegistrationResponse_ResponseBody `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegistrationResponse) GetResponseMeta() *RegistrationResponse_ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *RegistrationResponse) GetData() *RegistrationResponse_ResponseBody {
	if x != nil {
		return x.Data
	}
	return nil
}

type VersionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []string `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *VersionList) Reset() {
	*x = VersionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionList) ProtoMessage() {}

func (x *VersionList) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionList.ProtoReflect.Descriptor instead.
func (*VersionList) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *VersionList) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type TagList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TagList) Reset() {
	*x = TagList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagList) ProtoMessage() {}

func (x *TagList) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagList.ProtoReflect.Descriptor instead.
func (*TagList) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *TagList) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AuditLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLogs []*AuditLogRequest_AuditLog `protobuf:"bytes,1,rep,name=audit_logs,json=auditLogs,proto3" json:"audit_logs,omitempty"`
}

func (x *AuditLogRequest) Reset() {
	*x = AuditLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogRequest) ProtoMessage() {}

func (x *AuditLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogRequest.ProtoReflect.Descriptor instead.
func (*AuditLogRequest) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *AuditLogRequest) GetAuditLogs() []*AuditLogRequest_AuditLog {
	if x != nil {
		return x.AuditLogs
	}
	return nil
}

type RegistrationResponse_ResponseMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegistrationResponse_ResponseMeta) Reset() {
	*x = RegistrationResponse_ResponseMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse_ResponseMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse_ResponseMeta) ProtoMessage() {}

func (x *RegistrationResponse_ResponseMeta) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse_ResponseMeta.ProtoReflect.Descriptor instead.
func (*RegistrationResponse_ResponseMeta) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RegistrationResponse_ResponseMeta) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RegistrationResponse_ResponseMeta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegistrationResponse_ResponseMeta) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RegistrationResponse_ResponseBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent            *RegistrationResponse_ResponseBody_Agent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	BillingPlan      string                                   `protobuf:"bytes,2,opt,name=billing_plan,json=billingPlan,proto3" json:"billing_plan,omitempty"`
	OrganizationId   string                                   `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	OrganizationName string                                   `protobuf:"bytes,4,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
}

func (x *RegistrationResponse_ResponseBody) Reset() {
	*x = RegistrationResponse_ResponseBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse_ResponseBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse_ResponseBody) ProtoMessage() {}

func (x *RegistrationResponse_ResponseBody) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse_ResponseBody.ProtoReflect.Descriptor instead.
func (*RegistrationResponse_ResponseBody) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *RegistrationResponse_ResponseBody) GetAgent() *RegistrationResponse_ResponseBody_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *RegistrationResponse_ResponseBody) GetBillingPlan() string {
	if x != nil {
		return x.BillingPlan
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

type RegistrationResponse_ResponseBody_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                     string                  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Environment             string                  `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Status                  string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Version                 string                  `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	VersionExternal         string                  `protobuf:"bytes,6,opt,name=version_external,json=versionExternal,proto3" json:"version_external,omitempty"`
	SupportedPluginVersions map[string]*VersionList `protobuf:"bytes,7,rep,name=supported_plugin_versions,json=supportedPluginVersions,proto3" json:"supported_plugin_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Url                     string                  `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Type                    int32                   `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Updated                 *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=updated,proto3" json:"updated,omitempty"`
	Created                 *timestamppb.Timestamp  `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Tags                    map[string]*TagList     `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RegistrationResponse_ResponseBody_Agent) Reset() {
	*x = RegistrationResponse_ResponseBody_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse_ResponseBody_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse_ResponseBody_Agent) ProtoMessage() {}

func (x *RegistrationResponse_ResponseBody_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse_ResponseBody_Agent.ProtoReflect.Descriptor instead.
func (*RegistrationResponse_ResponseBody_Agent) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *RegistrationResponse_ResponseBody_Agent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetVersionExternal() string {
	if x != nil {
		return x.VersionExternal
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetSupportedPluginVersions() map[string]*VersionList {
	if x != nil {
		return x.SupportedPluginVersions
	}
	return nil
}

func (x *RegistrationResponse_ResponseBody_Agent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegistrationResponse_ResponseBody_Agent) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RegistrationResponse_ResponseBody_Agent) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *RegistrationResponse_ResponseBody_Agent) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RegistrationResponse_ResponseBody_Agent) GetTags() map[string]*TagList {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AuditLogRequest_AuditLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EntityId           string                                       `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType         AuditLogRequest_AuditLog_AuditLogEntityType  `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=agent.v1.AuditLogRequest_AuditLog_AuditLogEntityType" json:"entity_type,omitempty"`
	OrganizationId     string                                       `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	IsDeployed         bool                                         `protobuf:"varint,5,opt,name=is_deployed,json=isDeployed,proto3" json:"is_deployed,omitempty"`
	Source             string                                       `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Target             string                                       `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	Type               AuditLogRequest_AuditLog_AuditLogEventType   `protobuf:"varint,8,opt,name=type,proto3,enum=agent.v1.AuditLogRequest_AuditLog_AuditLogEventType" json:"type,omitempty"`
	AgentId            *string                                      `protobuf:"bytes,9,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	Status             *AuditLogRequest_AuditLog_ApiRunStatus       `protobuf:"varint,10,opt,name=status,proto3,enum=agent.v1.AuditLogRequest_AuditLog_ApiRunStatus,oneof" json:"status,omitempty"`
	Error              *string                                      `protobuf:"bytes,11,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ApiLocationContext *AuditLogRequest_AuditLog_ApiLocationContext `protobuf:"bytes,12,opt,name=api_location_context,json=apiLocationContext,proto3,oneof" json:"api_location_context,omitempty"`
	ApiTiming          *AuditLogRequest_AuditLog_ApiTiming          `protobuf:"bytes,13,opt,name=api_timing,json=apiTiming,proto3" json:"api_timing,omitempty"`
	UserType           *v1.UserType                                 `protobuf:"varint,14,opt,name=user_type,json=userType,proto3,enum=common.v1.UserType,oneof" json:"user_type,omitempty"`
	TargetName         *string                                      `protobuf:"bytes,15,opt,name=targetName,proto3,oneof" json:"targetName,omitempty"`
}

func (x *AuditLogRequest_AuditLog) Reset() {
	*x = AuditLogRequest_AuditLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogRequest_AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogRequest_AuditLog) ProtoMessage() {}

func (x *AuditLogRequest_AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogRequest_AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLogRequest_AuditLog) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AuditLogRequest_AuditLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetEntityType() AuditLogRequest_AuditLog_AuditLogEntityType {
	if x != nil {
		return x.EntityType
	}
	return AuditLogRequest_AuditLog_AUDIT_LOG_ENTITY_TYPE_UNSPECIFIED
}

func (x *AuditLogRequest_AuditLog) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

func (x *AuditLogRequest_AuditLog) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetType() AuditLogRequest_AuditLog_AuditLogEventType {
	if x != nil {
		return x.Type
	}
	return AuditLogRequest_AuditLog_AUDIT_LOG_EVENT_TYPE_UNSPECIFIED
}

func (x *AuditLogRequest_AuditLog) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetStatus() AuditLogRequest_AuditLog_ApiRunStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return AuditLogRequest_AuditLog_API_RUN_STATUS_UNSPECIFIED
}

func (x *AuditLogRequest_AuditLog) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *AuditLogRequest_AuditLog) GetApiLocationContext() *AuditLogRequest_AuditLog_ApiLocationContext {
	if x != nil {
		return x.ApiLocationContext
	}
	return nil
}

func (x *AuditLogRequest_AuditLog) GetApiTiming() *AuditLogRequest_AuditLog_ApiTiming {
	if x != nil {
		return x.ApiTiming
	}
	return nil
}

func (x *AuditLogRequest_AuditLog) GetUserType() v1.UserType {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return v1.UserType(0)
}

func (x *AuditLogRequest_AuditLog) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

type AuditLogRequest_AuditLog_ApiLocationContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *AuditLogRequest_AuditLog_ApiLocationContext) Reset() {
	*x = AuditLogRequest_AuditLog_ApiLocationContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogRequest_AuditLog_ApiLocationContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogRequest_AuditLog_ApiLocationContext) ProtoMessage() {}

func (x *AuditLogRequest_AuditLog_ApiLocationContext) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogRequest_AuditLog_ApiLocationContext.ProtoReflect.Descriptor instead.
func (*AuditLogRequest_AuditLog_ApiLocationContext) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *AuditLogRequest_AuditLog_ApiLocationContext) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type AuditLogRequest_AuditLog_ApiTiming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *int64 `protobuf:"varint,2,opt,name=end,proto3,oneof" json:"end,omitempty"`
}

func (x *AuditLogRequest_AuditLog_ApiTiming) Reset() {
	*x = AuditLogRequest_AuditLog_ApiTiming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogRequest_AuditLog_ApiTiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogRequest_AuditLog_ApiTiming) ProtoMessage() {}

func (x *AuditLogRequest_AuditLog_ApiTiming) ProtoReflect() protoreflect.Message {
	mi := &file_agent_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogRequest_AuditLog_ApiTiming.ProtoReflect.Descriptor instead.
func (*AuditLogRequest_AuditLog_ApiTiming) Descriptor() ([]byte, []int) {
	return file_agent_v1_service_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *AuditLogRequest_AuditLog_ApiTiming) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AuditLogRequest_AuditLog_ApiTiming) GetEnd() int64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

var File_agent_v1_service_proto protoreflect.FileDescriptor

var file_agent_v1_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x03, 0x0a,
	0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x1a, 0x58, 0x0a, 0x13, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa2, 0x09, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5a, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x9a, 0x07, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xc7, 0x05, 0x0a, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x61, 0x0a, 0x1c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x1d, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc9,
	0x0b, 0x0a, 0x0f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x1a, 0xf2, 0x0a, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x56, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x34, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x41, 0x70, 0x69, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x48, 0x03, 0x52, 0x12, 0x61,
	0x70, 0x69, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x41, 0x70, 0x69,
	0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x70, 0x69, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x35, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x3b, 0x0a,
	0x12, 0x41, 0x70, 0x69, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x09, 0x41, 0x70,
	0x69, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0x65, 0x0a, 0x0c,
	0x41, 0x70, 0x69, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a,
	0x41, 0x50, 0x49, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x50, 0x49, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x5f,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x55, 0x44, 0x49,
	0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23,
	0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x5f,
	0x4a, 0x4f, 0x42, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c,
	0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x45, 0x50, 0x10, 0x04, 0x22, 0x5b, 0x0a, 0x11, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x1c, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x52, 0x55, 0x4e,
	0x10, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xe9, 0x01, 0x0a, 0x0c, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x08, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x92, 0x41, 0x0a, 0x2a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x25, 0x92, 0x41, 0x07, 0x2a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x42, 0x80, 0x01, 0x92, 0x41, 0x45, 0x12, 0x1c, 0x0a, 0x15,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x20, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x20, 0x41, 0x50, 0x49, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_agent_v1_service_proto_rawDescOnce sync.Once
	file_agent_v1_service_proto_rawDescData = file_agent_v1_service_proto_rawDesc
)

func file_agent_v1_service_proto_rawDescGZIP() []byte {
	file_agent_v1_service_proto_rawDescOnce.Do(func() {
		file_agent_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_v1_service_proto_rawDescData)
	})
	return file_agent_v1_service_proto_rawDescData
}

var file_agent_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_agent_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_agent_v1_service_proto_goTypes = []interface{}{
	(AuditLogRequest_AuditLog_ApiRunStatus)(0),       // 0: agent.v1.AuditLogRequest.AuditLog.ApiRunStatus
	(AuditLogRequest_AuditLog_AuditLogEntityType)(0), // 1: agent.v1.AuditLogRequest.AuditLog.AuditLogEntityType
	(AuditLogRequest_AuditLog_AuditLogEventType)(0),  // 2: agent.v1.AuditLogRequest.AuditLog.AuditLogEventType
	(*RegistrationRequest)(nil),                      // 3: agent.v1.RegistrationRequest
	(*RegistrationResponse)(nil),                     // 4: agent.v1.RegistrationResponse
	(*VersionList)(nil),                              // 5: agent.v1.VersionList
	(*TagList)(nil),                                  // 6: agent.v1.TagList
	(*AuditLogRequest)(nil),                          // 7: agent.v1.AuditLogRequest
	nil,                                              // 8: agent.v1.RegistrationRequest.PluginVersionsEntry
	nil,                                              // 9: agent.v1.RegistrationRequest.TagsEntry
	(*RegistrationResponse_ResponseMeta)(nil),        // 10: agent.v1.RegistrationResponse.ResponseMeta
	(*RegistrationResponse_ResponseBody)(nil),        // 11: agent.v1.RegistrationResponse.ResponseBody
	(*RegistrationResponse_ResponseBody_Agent)(nil),  // 12: agent.v1.RegistrationResponse.ResponseBody.Agent
	nil,                              // 13: agent.v1.RegistrationResponse.ResponseBody.Agent.SupportedPluginVersionsEntry
	nil,                              // 14: agent.v1.RegistrationResponse.ResponseBody.Agent.TagsEntry
	(*AuditLogRequest_AuditLog)(nil), // 15: agent.v1.AuditLogRequest.AuditLog
	(*AuditLogRequest_AuditLog_ApiLocationContext)(nil), // 16: agent.v1.AuditLogRequest.AuditLog.ApiLocationContext
	(*AuditLogRequest_AuditLog_ApiTiming)(nil),          // 17: agent.v1.AuditLogRequest.AuditLog.ApiTiming
	(*timestamppb.Timestamp)(nil),                       // 18: google.protobuf.Timestamp
	(v1.UserType)(0),                                    // 19: common.v1.UserType
	(*emptypb.Empty)(nil),                               // 20: google.protobuf.Empty
}
var file_agent_v1_service_proto_depIdxs = []int32{
	8,  // 0: agent.v1.RegistrationRequest.plugin_versions:type_name -> agent.v1.RegistrationRequest.PluginVersionsEntry
	9,  // 1: agent.v1.RegistrationRequest.tags:type_name -> agent.v1.RegistrationRequest.TagsEntry
	10, // 2: agent.v1.RegistrationResponse.response_meta:type_name -> agent.v1.RegistrationResponse.ResponseMeta
	11, // 3: agent.v1.RegistrationResponse.data:type_name -> agent.v1.RegistrationResponse.ResponseBody
	15, // 4: agent.v1.AuditLogRequest.audit_logs:type_name -> agent.v1.AuditLogRequest.AuditLog
	5,  // 5: agent.v1.RegistrationRequest.PluginVersionsEntry.value:type_name -> agent.v1.VersionList
	6,  // 6: agent.v1.RegistrationRequest.TagsEntry.value:type_name -> agent.v1.TagList
	12, // 7: agent.v1.RegistrationResponse.ResponseBody.agent:type_name -> agent.v1.RegistrationResponse.ResponseBody.Agent
	13, // 8: agent.v1.RegistrationResponse.ResponseBody.Agent.supported_plugin_versions:type_name -> agent.v1.RegistrationResponse.ResponseBody.Agent.SupportedPluginVersionsEntry
	18, // 9: agent.v1.RegistrationResponse.ResponseBody.Agent.updated:type_name -> google.protobuf.Timestamp
	18, // 10: agent.v1.RegistrationResponse.ResponseBody.Agent.created:type_name -> google.protobuf.Timestamp
	14, // 11: agent.v1.RegistrationResponse.ResponseBody.Agent.tags:type_name -> agent.v1.RegistrationResponse.ResponseBody.Agent.TagsEntry
	5,  // 12: agent.v1.RegistrationResponse.ResponseBody.Agent.SupportedPluginVersionsEntry.value:type_name -> agent.v1.VersionList
	6,  // 13: agent.v1.RegistrationResponse.ResponseBody.Agent.TagsEntry.value:type_name -> agent.v1.TagList
	1,  // 14: agent.v1.AuditLogRequest.AuditLog.entity_type:type_name -> agent.v1.AuditLogRequest.AuditLog.AuditLogEntityType
	2,  // 15: agent.v1.AuditLogRequest.AuditLog.type:type_name -> agent.v1.AuditLogRequest.AuditLog.AuditLogEventType
	0,  // 16: agent.v1.AuditLogRequest.AuditLog.status:type_name -> agent.v1.AuditLogRequest.AuditLog.ApiRunStatus
	16, // 17: agent.v1.AuditLogRequest.AuditLog.api_location_context:type_name -> agent.v1.AuditLogRequest.AuditLog.ApiLocationContext
	17, // 18: agent.v1.AuditLogRequest.AuditLog.api_timing:type_name -> agent.v1.AuditLogRequest.AuditLog.ApiTiming
	19, // 19: agent.v1.AuditLogRequest.AuditLog.user_type:type_name -> common.v1.UserType
	3,  // 20: agent.v1.AgentService.Register:input_type -> agent.v1.RegistrationRequest
	7,  // 21: agent.v1.AgentService.Audit:input_type -> agent.v1.AuditLogRequest
	4,  // 22: agent.v1.AgentService.Register:output_type -> agent.v1.RegistrationResponse
	20, // 23: agent.v1.AgentService.Audit:output_type -> google.protobuf.Empty
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_agent_v1_service_proto_init() }
func file_agent_v1_service_proto_init() {
	if File_agent_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse_ResponseMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse_ResponseBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse_ResponseBody_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogRequest_AuditLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogRequest_AuditLog_ApiLocationContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogRequest_AuditLog_ApiTiming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agent_v1_service_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_agent_v1_service_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_v1_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_v1_service_proto_goTypes,
		DependencyIndexes: file_agent_v1_service_proto_depIdxs,
		EnumInfos:         file_agent_v1_service_proto_enumTypes,
		MessageInfos:      file_agent_v1_service_proto_msgTypes,
	}.Build()
	File_agent_v1_service_proto = out.File
	file_agent_v1_service_proto_rawDesc = nil
	file_agent_v1_service_proto_goTypes = nil
	file_agent_v1_service_proto_depIdxs = nil
}
