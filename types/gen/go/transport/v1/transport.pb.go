// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: transport/v1/transport.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/superblocksteam/agent/types/gen/go/api/v1"
	v11 "github.com/superblocksteam/agent/types/gen/go/common/v1"
	v15 "github.com/superblocksteam/agent/types/gen/go/plugins/adls/v1"
	v14 "github.com/superblocksteam/agent/types/gen/go/plugins/cosmosdb/v1"
	v13 "github.com/superblocksteam/agent/types/gen/go/plugins/kafka/v1"
	v12 "github.com/superblocksteam/agent/types/gen/go/store/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Performance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	PluginExecution *Performance_Observable `protobuf:"bytes,2,opt,name=plugin_execution,json=pluginExecution,proto3" json:"plugin_execution,omitempty"`
	QueueRequest    *Performance_Observable `protobuf:"bytes,3,opt,name=queue_request,json=queueRequest,proto3" json:"queue_request,omitempty"`
	QueueResponse   *Performance_Observable `protobuf:"bytes,4,opt,name=queue_response,json=queueResponse,proto3" json:"queue_response,omitempty"`
	KvStoreFetch    *Performance_Observable `protobuf:"bytes,5,opt,name=kv_store_fetch,json=kvStoreFetch,proto3" json:"kv_store_fetch,omitempty"`
	KvStorePush     *Performance_Observable `protobuf:"bytes,6,opt,name=kv_store_push,json=kvStorePush,proto3" json:"kv_store_push,omitempty"`
	Total           *Performance_Observable `protobuf:"bytes,7,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Performance) Reset() {
	*x = Performance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Performance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Performance) ProtoMessage() {}

func (x *Performance) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Performance.ProtoReflect.Descriptor instead.
func (*Performance) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{0}
}

func (x *Performance) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *Performance) GetPluginExecution() *Performance_Observable {
	if x != nil {
		return x.PluginExecution
	}
	return nil
}

func (x *Performance) GetQueueRequest() *Performance_Observable {
	if x != nil {
		return x.QueueRequest
	}
	return nil
}

func (x *Performance) GetQueueResponse() *Performance_Observable {
	if x != nil {
		return x.QueueResponse
	}
	return nil
}

func (x *Performance) GetKvStoreFetch() *Performance_Observable {
	if x != nil {
		return x.KvStoreFetch
	}
	return nil
}

func (x *Performance) GetKvStorePush() *Performance_Observable {
	if x != nil {
		return x.KvStorePush
	}
	return nil
}

func (x *Performance) GetTotal() *Performance_Observable {
	if x != nil {
		return x.Total
	}
	return nil
}

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type v1.Variables_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.Variables_Type" json:"type,omitempty"`
	Mode v1.Variables_Mode `protobuf:"varint,3,opt,name=mode,proto3,enum=api.v1.Variables_Mode" json:"mode,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{1}
}

func (x *Variable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variable) GetType() v1.Variables_Type {
	if x != nil {
		return x.Type
	}
	return v1.Variables_Type(0)
}

func (x *Variable) GetMode() v1.Variables_Mode {
	if x != nil {
		return x.Mode
	}
	return v1.Variables_Mode(0)
}

type Observability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    string            `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId     string            `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	Baggage    map[string]string `protobuf:"bytes,3,rep,name=baggage,proto3" json:"baggage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TraceFlags []byte            `protobuf:"bytes,4,opt,name=trace_flags,json=traceFlags,proto3" json:"trace_flags,omitempty"`
}

func (x *Observability) Reset() {
	*x = Observability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Observability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observability) ProtoMessage() {}

func (x *Observability) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observability.ProtoReflect.Descriptor instead.
func (*Observability) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{2}
}

func (x *Observability) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Observability) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *Observability) GetBaggage() map[string]string {
	if x != nil {
		return x.Baggage
	}
	return nil
}

func (x *Observability) GetTraceFlags() []byte {
	if x != nil {
		return x.TraceFlags
	}
	return nil
}

// NOTE(frank): Gross. I'm not spending any time trying to make this look pretty
// because it needs to be re-done at some point after control flow. This is a raw
// port of the existing interface.
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inbox string        `protobuf:"bytes,1,opt,name=inbox,proto3" json:"inbox,omitempty"`
	Data  *Request_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Topic string        `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3}
}

func (x *Request) GetInbox() string {
	if x != nil {
		return x.Inbox
	}
	return ""
}

func (x *Request) GetData() *Request_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Request) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// NOTE(frank): We don't have control over this type. We have
// to work with the existing controller <-> worker interface.
// Usually it's not a best practice to inline nested structs
// like this but I think it's okay in this case.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *Response_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Pinned *v11.Error     `protobuf:"bytes,2,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetData() *Response_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Response) GetPinned() *v11.Error {
	if x != nil {
		return x.Pinned
	}
	return nil
}

// DEPRECATED: use api.v1.Definition instead
type Fetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          *v1.Api                     `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Integrations map[string]*structpb.Struct `protobuf:"bytes,2,rep,name=integrations,proto3" json:"integrations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metadata     *Fetch_Metadata             `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Stores       *v12.Stores                 `protobuf:"bytes,4,opt,name=stores,proto3" json:"stores,omitempty"`
}

func (x *Fetch) Reset() {
	*x = Fetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fetch) ProtoMessage() {}

func (x *Fetch) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fetch.ProtoReflect.Descriptor instead.
func (*Fetch) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{5}
}

func (x *Fetch) GetApi() *v1.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Fetch) GetIntegrations() map[string]*structpb.Struct {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *Fetch) GetMetadata() *Fetch_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Fetch) GetStores() *v12.Stores {
	if x != nil {
		return x.Stores
	}
	return nil
}

type FetchScheduleJobResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apis []*v1.Definition `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (x *FetchScheduleJobResp) Reset() {
	*x = FetchScheduleJobResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchScheduleJobResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchScheduleJobResp) ProtoMessage() {}

func (x *FetchScheduleJobResp) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchScheduleJobResp.ProtoReflect.Descriptor instead.
func (*FetchScheduleJobResp) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{6}
}

func (x *FetchScheduleJobResp) GetApis() []*v1.Definition {
	if x != nil {
		return x.Apis
	}
	return nil
}

type Performance_Observable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    float64 `protobuf:"fixed64,1,opt,name=start,proto3" json:"start,omitempty"`
	End      float64 `protobuf:"fixed64,2,opt,name=end,proto3" json:"end,omitempty"`
	Value    float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Bytes    float64 `protobuf:"fixed64,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Estimate float64 `protobuf:"fixed64,5,opt,name=estimate,proto3" json:"estimate,omitempty"`
}

func (x *Performance_Observable) Reset() {
	*x = Performance_Observable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Performance_Observable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Performance_Observable) ProtoMessage() {}

func (x *Performance_Observable) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Performance_Observable.ProtoReflect.Descriptor instead.
func (*Performance_Observable) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Performance_Observable) GetStart() float64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Performance_Observable) GetEnd() float64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Performance_Observable) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Performance_Observable) GetBytes() float64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *Performance_Observable) GetEstimate() float64 {
	if x != nil {
		return x.Estimate
	}
	return 0
}

type Request_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned *Request_Data_Pinned `protobuf:"bytes,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Data   *Request_Data_Data   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Request_Data) Reset() {
	*x = Request_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data) ProtoMessage() {}

func (x *Request_Data) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data.ProtoReflect.Descriptor instead.
func (*Request_Data) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Request_Data) GetPinned() *Request_Data_Pinned {
	if x != nil {
		return x.Pinned
	}
	return nil
}

func (x *Request_Data) GetData() *Request_Data_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Request_Data_Pinned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket  string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Event   string `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	// Deprecated, use observability instead
	//
	// Deprecated: Marked as deprecated in transport/v1/transport.proto.
	Carrier       map[string]string `protobuf:"bytes,5,rep,name=carrier,proto3" json:"carrier,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Observability *Observability    `protobuf:"bytes,6,opt,name=observability,proto3" json:"observability,omitempty"`
}

func (x *Request_Data_Pinned) Reset() {
	*x = Request_Data_Pinned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Pinned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Pinned) ProtoMessage() {}

func (x *Request_Data_Pinned) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Pinned.ProtoReflect.Descriptor instead.
func (*Request_Data_Pinned) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *Request_Data_Pinned) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Request_Data_Pinned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Request_Data_Pinned) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Request_Data_Pinned) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

// Deprecated: Marked as deprecated in transport/v1/transport.proto.
func (x *Request_Data_Pinned) GetCarrier() map[string]string {
	if x != nil {
		return x.Carrier
	}
	return nil
}

func (x *Request_Data_Pinned) GetObservability() *Observability {
	if x != nil {
		return x.Observability
	}
	return nil
}

type Request_Data_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Props *Request_Data_Data_Props `protobuf:"bytes,1,opt,name=props,proto3" json:"props,omitempty"`
	// d_config stands for datasource configuration - necessary to match the fields used
	// in the existing worker interface
	DConfig *structpb.Struct         `protobuf:"bytes,2,opt,name=d_config,json=dConfig,proto3,oneof" json:"d_config,omitempty"`
	AConfig *structpb.Struct         `protobuf:"bytes,3,opt,name=a_config,json=aConfig,proto3,oneof" json:"a_config,omitempty"`
	Quotas  *Request_Data_Data_Quota `protobuf:"bytes,4,opt,name=quotas,proto3" json:"quotas,omitempty"`
}

func (x *Request_Data_Data) Reset() {
	*x = Request_Data_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Data) ProtoMessage() {}

func (x *Request_Data_Data) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Data.ProtoReflect.Descriptor instead.
func (*Request_Data_Data) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *Request_Data_Data) GetProps() *Request_Data_Data_Props {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Request_Data_Data) GetDConfig() *structpb.Struct {
	if x != nil {
		return x.DConfig
	}
	return nil
}

func (x *Request_Data_Data) GetAConfig() *structpb.Struct {
	if x != nil {
		return x.AConfig
	}
	return nil
}

func (x *Request_Data_Data) GetQuotas() *Request_Data_Data_Quota {
	if x != nil {
		return x.Quotas
	}
	return nil
}

type Request_Data_Data_Props struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionConfiguration             *structpb.Struct `protobuf:"bytes,1,opt,name=action_configuration,json=actionConfiguration,proto3" json:"action_configuration,omitempty"`
	DatasourceConfiguration         *structpb.Struct `protobuf:"bytes,2,opt,name=datasource_configuration,json=datasourceConfiguration,proto3" json:"datasource_configuration,omitempty"`
	RedactedDatasourceConfiguration *structpb.Struct `protobuf:"bytes,3,opt,name=redacted_datasource_configuration,json=redactedDatasourceConfiguration,proto3" json:"redacted_datasource_configuration,omitempty"`
	ExecutionId                     string           `protobuf:"bytes,4,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	StepName                        string           `protobuf:"bytes,5,opt,name=step_name,json=stepName,proto3" json:"step_name,omitempty"`
	Environment                     string           `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// DEPRECATED
	BindingKeys   []*Request_Data_Data_Props_Binding `protobuf:"bytes,7,rep,name=binding_keys,json=bindingKeys,proto3" json:"binding_keys,omitempty"`
	Variables     map[string]*Variable               `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FileServerUrl string                             `protobuf:"bytes,9,opt,name=fileServerUrl,json=$fileServerUrl,proto3" json:"fileServerUrl,omitempty"`
	Files         []*Request_Data_Data_Props_File    `protobuf:"bytes,10,rep,name=files,proto3" json:"files,omitempty"`
	Render        bool                               `protobuf:"varint,11,opt,name=render,proto3" json:"render,omitempty"` // If true, the worker will render the action configuration.
	Version       string                             `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Request_Data_Data_Props) Reset() {
	*x = Request_Data_Data_Props{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Data_Props) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Data_Props) ProtoMessage() {}

func (x *Request_Data_Data_Props) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Data_Props.ProtoReflect.Descriptor instead.
func (*Request_Data_Data_Props) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 1, 0}
}

func (x *Request_Data_Data_Props) GetActionConfiguration() *structpb.Struct {
	if x != nil {
		return x.ActionConfiguration
	}
	return nil
}

func (x *Request_Data_Data_Props) GetDatasourceConfiguration() *structpb.Struct {
	if x != nil {
		return x.DatasourceConfiguration
	}
	return nil
}

func (x *Request_Data_Data_Props) GetRedactedDatasourceConfiguration() *structpb.Struct {
	if x != nil {
		return x.RedactedDatasourceConfiguration
	}
	return nil
}

func (x *Request_Data_Data_Props) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *Request_Data_Data_Props) GetStepName() string {
	if x != nil {
		return x.StepName
	}
	return ""
}

func (x *Request_Data_Data_Props) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Request_Data_Data_Props) GetBindingKeys() []*Request_Data_Data_Props_Binding {
	if x != nil {
		return x.BindingKeys
	}
	return nil
}

func (x *Request_Data_Data_Props) GetVariables() map[string]*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Request_Data_Data_Props) GetFileServerUrl() string {
	if x != nil {
		return x.FileServerUrl
	}
	return ""
}

func (x *Request_Data_Data_Props) GetFiles() []*Request_Data_Data_Props_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Request_Data_Data_Props) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *Request_Data_Data_Props) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Request_Data_Data_Quota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Request_Data_Data_Quota) Reset() {
	*x = Request_Data_Data_Quota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Data_Quota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Data_Quota) ProtoMessage() {}

func (x *Request_Data_Data_Quota) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Data_Quota.ProtoReflect.Descriptor instead.
func (*Request_Data_Data_Quota) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 1, 1}
}

func (x *Request_Data_Data_Quota) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Request_Data_Data_Quota) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Request_Data_Data_Props_Binding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Request_Data_Data_Props_Binding) Reset() {
	*x = Request_Data_Data_Props_Binding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Data_Props_Binding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Data_Props_Binding) ProtoMessage() {}

func (x *Request_Data_Data_Props_Binding) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Data_Props_Binding.ProtoReflect.Descriptor instead.
func (*Request_Data_Data_Props_Binding) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 1, 0, 0}
}

func (x *Request_Data_Data_Props_Binding) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Request_Data_Data_Props_Binding) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Request_Data_Data_Props_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fieldname    string `protobuf:"bytes,1,opt,name=fieldname,proto3" json:"fieldname,omitempty"`
	Originalname string `protobuf:"bytes,2,opt,name=originalname,proto3" json:"originalname,omitempty"`
	Encoding     string `protobuf:"bytes,3,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Mimetype     string `protobuf:"bytes,4,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	Size         int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Destination  string `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	Filename     string `protobuf:"bytes,7,opt,name=filename,proto3" json:"filename,omitempty"`
	Path         string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	Buffer       []byte `protobuf:"bytes,9,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *Request_Data_Data_Props_File) Reset() {
	*x = Request_Data_Data_Props_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Data_Data_Props_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Data_Data_Props_File) ProtoMessage() {}

func (x *Request_Data_Data_Props_File) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Data_Data_Props_File.ProtoReflect.Descriptor instead.
func (*Request_Data_Data_Props_File) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3, 0, 1, 0, 1}
}

func (x *Request_Data_Data_Props_File) GetFieldname() string {
	if x != nil {
		return x.Fieldname
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetOriginalname() string {
	if x != nil {
		return x.Originalname
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Request_Data_Data_Props_File) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Request_Data_Data_Props_File) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type Response_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned *Performance        `protobuf:"bytes,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Data   *Response_Data_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Response_Data) Reset() {
	*x = Response_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Data) ProtoMessage() {}

func (x *Response_Data) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Data.ProtoReflect.Descriptor instead.
func (*Response_Data) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Response_Data) GetPinned() *Performance {
	if x != nil {
		return x.Pinned
	}
	return nil
}

func (x *Response_Data) GetData() *Response_Data_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Response_Data_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Err *v11.Error `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	// Metadata response fields - necessary to match fields used in the existing worker interface
	// https://github.com/superblocksteam/superblocks/blob/f75d3a80745253458865b66a885cb7f8eb258229/packages/shared/src/types/datasource/metadata/index.ts#L6-L9
	DbSchema *v1.MetadataResponse_DatabaseSchemaMetadata `protobuf:"bytes,3,opt,name=db_schema,json=dbSchema,proto3,oneof" json:"db_schema,omitempty"`
	Buckets  []*v1.MetadataResponse_BucketMetadata       `protobuf:"bytes,4,rep,name=buckets,proto3" json:"buckets,omitempty"`
	// NOTE(frank): I think we'll need a transport/v2 for this but ideally
	// we don't have duplcate types like this.
	Kafka                *v13.Metadata        `protobuf:"bytes,5,opt,name=kafka,proto3,oneof" json:"kafka,omitempty"`
	Cosmosdb             *v14.Plugin_Metadata `protobuf:"bytes,6,opt,name=cosmosdb,proto3,oneof" json:"cosmosdb,omitempty"`
	Adls                 *v15.Plugin_Metadata `protobuf:"bytes,7,opt,name=adls,proto3,oneof" json:"adls,omitempty"`
	Dynamodb             *anypb.Any           `protobuf:"bytes,8,opt,name=dynamodb,proto3,oneof" json:"dynamodb,omitempty"`
	GSheetsNextPageToken *string              `protobuf:"bytes,9,opt,name=g_sheets_next_page_token,json=gSheetsNextPageToken,proto3,oneof" json:"g_sheets_next_page_token,omitempty"`
}

func (x *Response_Data_Data) Reset() {
	*x = Response_Data_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Data_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Data_Data) ProtoMessage() {}

func (x *Response_Data_Data) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Data_Data.ProtoReflect.Descriptor instead.
func (*Response_Data_Data) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Response_Data_Data) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Response_Data_Data) GetErr() *v11.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *Response_Data_Data) GetDbSchema() *v1.MetadataResponse_DatabaseSchemaMetadata {
	if x != nil {
		return x.DbSchema
	}
	return nil
}

func (x *Response_Data_Data) GetBuckets() []*v1.MetadataResponse_BucketMetadata {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *Response_Data_Data) GetKafka() *v13.Metadata {
	if x != nil {
		return x.Kafka
	}
	return nil
}

func (x *Response_Data_Data) GetCosmosdb() *v14.Plugin_Metadata {
	if x != nil {
		return x.Cosmosdb
	}
	return nil
}

func (x *Response_Data_Data) GetAdls() *v15.Plugin_Metadata {
	if x != nil {
		return x.Adls
	}
	return nil
}

func (x *Response_Data_Data) GetDynamodb() *anypb.Any {
	if x != nil {
		return x.Dynamodb
	}
	return nil
}

func (x *Response_Data_Data) GetGSheetsNextPageToken() string {
	if x != nil && x.GSheetsNextPageToken != nil {
		return *x.GSheetsNextPageToken
	}
	return ""
}

type Fetch_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester        string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"` // This is the email
	Profile          string `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`     // Because profile isn't a required execution parameter, the default will be different per org.
	OrganizationPlan string `protobuf:"bytes,3,opt,name=organization_plan,json=organizationPlan,proto3" json:"organization_plan,omitempty"`
}

func (x *Fetch_Metadata) Reset() {
	*x = Fetch_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_v1_transport_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fetch_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fetch_Metadata) ProtoMessage() {}

func (x *Fetch_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fetch_Metadata.ProtoReflect.Descriptor instead.
func (*Fetch_Metadata) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Fetch_Metadata) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *Fetch_Metadata) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *Fetch_Metadata) GetOrganizationPlan() string {
	if x != nil {
		return x.OrganizationPlan
	}
	return ""
}

var File_transport_v1_transport_proto protoreflect.FileDescriptor

var file_transport_v1_transport_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x10, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2f, 0x61, 0x64, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x04, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x10, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x6b, 0x76, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x0c, 0x6b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x12, 0x48, 0x0a, 0x0d, 0x6b, 0x76, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6b,
	0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x7c, 0x0a, 0x0a, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x22, 0x74, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0d, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x42,
	0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x61, 0x67,
	0x67, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x42, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x96, 0x0f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0xae, 0x0e, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0xb1, 0x02, 0x0a, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x2e, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x81, 0x0b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3b, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x08,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x48, 0x01, 0x52, 0x07, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x1a, 0xb7, 0x08,
	0x0a, 0x05, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x13,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x17,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x21, 0x72, 0x65, 0x64, 0x61, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x1f, 0x72, 0x65, 0x64,
	0x61, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x50,
	0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x52, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x24, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x2f, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0xfe, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x1a, 0x54, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb1, 0x06, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x1a, 0xc9, 0x05, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x06, 0x70,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0xd7, 0x04, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x51, 0x0a, 0x09, 0x64, 0x62, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x64, 0x62, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x01, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x45, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x02, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x64, 0x62, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x64, 0x6c, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x61, 0x64, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x03, 0x52, 0x04, 0x61, 0x64, 0x6c, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x04, 0x52, 0x08, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x18, 0x67, 0x5f, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x14, 0x67,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x62, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x64, 0x62, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x61, 0x64, 0x6c, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64,
	0x62, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x67, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc0,
	0x03, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x2d, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x49, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x6f, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x58, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3e, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x70, 0x69,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x70, 0x69,
	0x73, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_v1_transport_proto_rawDescOnce sync.Once
	file_transport_v1_transport_proto_rawDescData = file_transport_v1_transport_proto_rawDesc
)

func file_transport_v1_transport_proto_rawDescGZIP() []byte {
	file_transport_v1_transport_proto_rawDescOnce.Do(func() {
		file_transport_v1_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_v1_transport_proto_rawDescData)
	})
	return file_transport_v1_transport_proto_rawDescData
}

var file_transport_v1_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_transport_v1_transport_proto_goTypes = []interface{}{
	(*Performance)(nil),                     // 0: transport.v1.Performance
	(*Variable)(nil),                        // 1: transport.v1.Variable
	(*Observability)(nil),                   // 2: transport.v1.Observability
	(*Request)(nil),                         // 3: transport.v1.Request
	(*Response)(nil),                        // 4: transport.v1.Response
	(*Fetch)(nil),                           // 5: transport.v1.Fetch
	(*FetchScheduleJobResp)(nil),            // 6: transport.v1.FetchScheduleJobResp
	(*Performance_Observable)(nil),          // 7: transport.v1.Performance.Observable
	nil,                                     // 8: transport.v1.Observability.BaggageEntry
	(*Request_Data)(nil),                    // 9: transport.v1.Request.Data
	(*Request_Data_Pinned)(nil),             // 10: transport.v1.Request.Data.Pinned
	(*Request_Data_Data)(nil),               // 11: transport.v1.Request.Data.Data
	nil,                                     // 12: transport.v1.Request.Data.Pinned.CarrierEntry
	(*Request_Data_Data_Props)(nil),         // 13: transport.v1.Request.Data.Data.Props
	(*Request_Data_Data_Quota)(nil),         // 14: transport.v1.Request.Data.Data.Quota
	(*Request_Data_Data_Props_Binding)(nil), // 15: transport.v1.Request.Data.Data.Props.Binding
	(*Request_Data_Data_Props_File)(nil),    // 16: transport.v1.Request.Data.Data.Props.File
	nil,                                     // 17: transport.v1.Request.Data.Data.Props.VariablesEntry
	(*Response_Data)(nil),                   // 18: transport.v1.Response.Data
	(*Response_Data_Data)(nil),              // 19: transport.v1.Response.Data.Data
	(*Fetch_Metadata)(nil),                  // 20: transport.v1.Fetch.Metadata
	nil,                                     // 21: transport.v1.Fetch.IntegrationsEntry
	(v1.Variables_Type)(0),                  // 22: api.v1.Variables.Type
	(v1.Variables_Mode)(0),                  // 23: api.v1.Variables.Mode
	(*v11.Error)(nil),                       // 24: common.v1.Error
	(*v1.Api)(nil),                          // 25: api.v1.Api
	(*v12.Stores)(nil),                      // 26: store.v1.Stores
	(*v1.Definition)(nil),                   // 27: api.v1.Definition
	(*structpb.Struct)(nil),                 // 28: google.protobuf.Struct
	(*v1.MetadataResponse_DatabaseSchemaMetadata)(nil), // 29: api.v1.MetadataResponse.DatabaseSchemaMetadata
	(*v1.MetadataResponse_BucketMetadata)(nil),         // 30: api.v1.MetadataResponse.BucketMetadata
	(*v13.Metadata)(nil),                               // 31: plugins.kafka.v1.Metadata
	(*v14.Plugin_Metadata)(nil),                        // 32: plugins.cosmosdb.v1.Plugin.Metadata
	(*v15.Plugin_Metadata)(nil),                        // 33: plugins.adls.v1.Plugin.Metadata
	(*anypb.Any)(nil),                                  // 34: google.protobuf.Any
}
var file_transport_v1_transport_proto_depIdxs = []int32{
	7,  // 0: transport.v1.Performance.plugin_execution:type_name -> transport.v1.Performance.Observable
	7,  // 1: transport.v1.Performance.queue_request:type_name -> transport.v1.Performance.Observable
	7,  // 2: transport.v1.Performance.queue_response:type_name -> transport.v1.Performance.Observable
	7,  // 3: transport.v1.Performance.kv_store_fetch:type_name -> transport.v1.Performance.Observable
	7,  // 4: transport.v1.Performance.kv_store_push:type_name -> transport.v1.Performance.Observable
	7,  // 5: transport.v1.Performance.total:type_name -> transport.v1.Performance.Observable
	22, // 6: transport.v1.Variable.type:type_name -> api.v1.Variables.Type
	23, // 7: transport.v1.Variable.mode:type_name -> api.v1.Variables.Mode
	8,  // 8: transport.v1.Observability.baggage:type_name -> transport.v1.Observability.BaggageEntry
	9,  // 9: transport.v1.Request.data:type_name -> transport.v1.Request.Data
	18, // 10: transport.v1.Response.data:type_name -> transport.v1.Response.Data
	24, // 11: transport.v1.Response.pinned:type_name -> common.v1.Error
	25, // 12: transport.v1.Fetch.api:type_name -> api.v1.Api
	21, // 13: transport.v1.Fetch.integrations:type_name -> transport.v1.Fetch.IntegrationsEntry
	20, // 14: transport.v1.Fetch.metadata:type_name -> transport.v1.Fetch.Metadata
	26, // 15: transport.v1.Fetch.stores:type_name -> store.v1.Stores
	27, // 16: transport.v1.FetchScheduleJobResp.apis:type_name -> api.v1.Definition
	10, // 17: transport.v1.Request.Data.pinned:type_name -> transport.v1.Request.Data.Pinned
	11, // 18: transport.v1.Request.Data.data:type_name -> transport.v1.Request.Data.Data
	12, // 19: transport.v1.Request.Data.Pinned.carrier:type_name -> transport.v1.Request.Data.Pinned.CarrierEntry
	2,  // 20: transport.v1.Request.Data.Pinned.observability:type_name -> transport.v1.Observability
	13, // 21: transport.v1.Request.Data.Data.props:type_name -> transport.v1.Request.Data.Data.Props
	28, // 22: transport.v1.Request.Data.Data.d_config:type_name -> google.protobuf.Struct
	28, // 23: transport.v1.Request.Data.Data.a_config:type_name -> google.protobuf.Struct
	14, // 24: transport.v1.Request.Data.Data.quotas:type_name -> transport.v1.Request.Data.Data.Quota
	28, // 25: transport.v1.Request.Data.Data.Props.action_configuration:type_name -> google.protobuf.Struct
	28, // 26: transport.v1.Request.Data.Data.Props.datasource_configuration:type_name -> google.protobuf.Struct
	28, // 27: transport.v1.Request.Data.Data.Props.redacted_datasource_configuration:type_name -> google.protobuf.Struct
	15, // 28: transport.v1.Request.Data.Data.Props.binding_keys:type_name -> transport.v1.Request.Data.Data.Props.Binding
	17, // 29: transport.v1.Request.Data.Data.Props.variables:type_name -> transport.v1.Request.Data.Data.Props.VariablesEntry
	16, // 30: transport.v1.Request.Data.Data.Props.files:type_name -> transport.v1.Request.Data.Data.Props.File
	1,  // 31: transport.v1.Request.Data.Data.Props.VariablesEntry.value:type_name -> transport.v1.Variable
	0,  // 32: transport.v1.Response.Data.pinned:type_name -> transport.v1.Performance
	19, // 33: transport.v1.Response.Data.data:type_name -> transport.v1.Response.Data.Data
	24, // 34: transport.v1.Response.Data.Data.err:type_name -> common.v1.Error
	29, // 35: transport.v1.Response.Data.Data.db_schema:type_name -> api.v1.MetadataResponse.DatabaseSchemaMetadata
	30, // 36: transport.v1.Response.Data.Data.buckets:type_name -> api.v1.MetadataResponse.BucketMetadata
	31, // 37: transport.v1.Response.Data.Data.kafka:type_name -> plugins.kafka.v1.Metadata
	32, // 38: transport.v1.Response.Data.Data.cosmosdb:type_name -> plugins.cosmosdb.v1.Plugin.Metadata
	33, // 39: transport.v1.Response.Data.Data.adls:type_name -> plugins.adls.v1.Plugin.Metadata
	34, // 40: transport.v1.Response.Data.Data.dynamodb:type_name -> google.protobuf.Any
	28, // 41: transport.v1.Fetch.IntegrationsEntry.value:type_name -> google.protobuf.Struct
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_transport_v1_transport_proto_init() }
func file_transport_v1_transport_proto_init() {
	if File_transport_v1_transport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_v1_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Performance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Observability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchScheduleJobResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Performance_Observable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Pinned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Data_Props); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Data_Quota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Data_Props_Binding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Data_Data_Props_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Data_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_v1_transport_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fetch_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transport_v1_transport_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_transport_v1_transport_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_v1_transport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_v1_transport_proto_goTypes,
		DependencyIndexes: file_transport_v1_transport_proto_depIdxs,
		MessageInfos:      file_transport_v1_transport_proto_msgTypes,
	}.Build()
	File_transport_v1_transport_proto = out.File
	file_transport_v1_transport_proto_rawDesc = nil
	file_transport_v1_transport_proto_goTypes = nil
	file_transport_v1_transport_proto_depIdxs = nil
}
