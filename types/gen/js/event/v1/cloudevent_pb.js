// source: event/v1/cloudevent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.event.v1.CloudEvent', null, global);
goog.exportSymbol('proto.event.v1.CloudEvent.DataCase', null, global);
goog.exportSymbol('proto.event.v1.CloudEventAttributeValue', null, global);
goog.exportSymbol('proto.event.v1.CloudEventAttributeValue.AttrCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.v1.CloudEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event.v1.CloudEvent.oneofGroups_);
};
goog.inherits(proto.event.v1.CloudEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.v1.CloudEvent.displayName = 'proto.event.v1.CloudEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.v1.CloudEventAttributeValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event.v1.CloudEventAttributeValue.oneofGroups_);
};
goog.inherits(proto.event.v1.CloudEventAttributeValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.v1.CloudEventAttributeValue.displayName = 'proto.event.v1.CloudEventAttributeValue';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event.v1.CloudEvent.oneofGroups_ = [[6,7,8]];

/**
 * @enum {number}
 */
proto.event.v1.CloudEvent.DataCase = {
  DATA_NOT_SET: 0,
  BINARY_DATA: 6,
  TEXT_DATA: 7,
  PROTO_DATA: 8
};

/**
 * @return {proto.event.v1.CloudEvent.DataCase}
 */
proto.event.v1.CloudEvent.prototype.getDataCase = function() {
  return /** @type {proto.event.v1.CloudEvent.DataCase} */(jspb.Message.computeOneofCase(this, proto.event.v1.CloudEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.v1.CloudEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.v1.CloudEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.v1.CloudEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.v1.CloudEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
source: jspb.Message.getFieldWithDefault(msg, 2, ""),
specVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
type: jspb.Message.getFieldWithDefault(msg, 4, ""),
attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.event.v1.CloudEventAttributeValue.toObject) : [],
binaryData: msg.getBinaryData_asB64(),
textData: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
protoData: (f = msg.getProtoData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.v1.CloudEvent}
 */
proto.event.v1.CloudEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.v1.CloudEvent;
  return proto.event.v1.CloudEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.v1.CloudEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.v1.CloudEvent}
 */
proto.event.v1.CloudEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.event.v1.CloudEventAttributeValue.deserializeBinaryFromReader, "", new proto.event.v1.CloudEventAttributeValue());
         });
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinaryData(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextData(value);
      break;
    case 8:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setProtoData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.v1.CloudEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.v1.CloudEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.v1.CloudEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.v1.CloudEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpecVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.event.v1.CloudEventAttributeValue.serializeBinaryToWriter);
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProtoData();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string spec_version = 3;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getSpecVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setSpecVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, CloudEventAttributeValue> attributes = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.event.v1.CloudEventAttributeValue>}
 */
proto.event.v1.CloudEvent.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.event.v1.CloudEventAttributeValue>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.event.v1.CloudEventAttributeValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;
};


/**
 * optional bytes binary_data = 6;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getBinaryData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes binary_data = 6;
 * This is a type-conversion wrapper around `getBinaryData()`
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getBinaryData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinaryData()));
};


/**
 * optional bytes binary_data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryData()`
 * @return {!Uint8Array}
 */
proto.event.v1.CloudEvent.prototype.getBinaryData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinaryData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setBinaryData = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.event.v1.CloudEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.clearBinaryData = function() {
  return jspb.Message.setOneofField(this, 6, proto.event.v1.CloudEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEvent.prototype.hasBinaryData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string text_data = 7;
 * @return {string}
 */
proto.event.v1.CloudEvent.prototype.getTextData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.setTextData = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.event.v1.CloudEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.clearTextData = function() {
  return jspb.Message.setOneofField(this, 7, proto.event.v1.CloudEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEvent.prototype.hasTextData = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Any proto_data = 8;
 * @return {?proto.google.protobuf.Any}
 */
proto.event.v1.CloudEvent.prototype.getProtoData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 8));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.event.v1.CloudEvent} returns this
*/
proto.event.v1.CloudEvent.prototype.setProtoData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.event.v1.CloudEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.v1.CloudEvent} returns this
 */
proto.event.v1.CloudEvent.prototype.clearProtoData = function() {
  return this.setProtoData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEvent.prototype.hasProtoData = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event.v1.CloudEventAttributeValue.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.event.v1.CloudEventAttributeValue.AttrCase = {
  ATTR_NOT_SET: 0,
  CE_BOOLEAN: 1,
  CE_INTEGER: 2,
  CE_STRING: 3,
  CE_BYTES: 4,
  CE_URI: 5,
  CE_URI_REF: 6,
  CE_TIMESTAMP: 7
};

/**
 * @return {proto.event.v1.CloudEventAttributeValue.AttrCase}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getAttrCase = function() {
  return /** @type {proto.event.v1.CloudEventAttributeValue.AttrCase} */(jspb.Message.computeOneofCase(this, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.v1.CloudEventAttributeValue.prototype.toObject = function(opt_includeInstance) {
  return proto.event.v1.CloudEventAttributeValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.v1.CloudEventAttributeValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.v1.CloudEventAttributeValue.toObject = function(includeInstance, msg) {
  var f, obj = {
ceBoolean: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
ceInteger: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
ceString: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
ceBytes: msg.getCeBytes_asB64(),
ceUri: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
ceUriRef: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
ceTimestamp: (f = msg.getCeTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.v1.CloudEventAttributeValue}
 */
proto.event.v1.CloudEventAttributeValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.v1.CloudEventAttributeValue;
  return proto.event.v1.CloudEventAttributeValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.v1.CloudEventAttributeValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.v1.CloudEventAttributeValue}
 */
proto.event.v1.CloudEventAttributeValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCeBoolean(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCeInteger(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCeString(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCeBytes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCeUri(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCeUriRef(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCeTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.v1.CloudEventAttributeValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.v1.CloudEventAttributeValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.v1.CloudEventAttributeValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.v1.CloudEventAttributeValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCeTimestamp();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool ce_boolean = 1;
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeBoolean = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeBoolean = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeBoolean = function() {
  return jspb.Message.setOneofField(this, 1, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeBoolean = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 ce_integer = 2;
 * @return {number}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeInteger = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeInteger = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeInteger = function() {
  return jspb.Message.setOneofField(this, 2, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeInteger = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ce_string = 3;
 * @return {string}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeString = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeString = function() {
  return jspb.Message.setOneofField(this, 3, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeString = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes ce_bytes = 4;
 * @return {string}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeBytes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes ce_bytes = 4;
 * This is a type-conversion wrapper around `getCeBytes()`
 * @return {string}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCeBytes()));
};


/**
 * optional bytes ce_bytes = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCeBytes()`
 * @return {!Uint8Array}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCeBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeBytes = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeBytes = function() {
  return jspb.Message.setOneofField(this, 4, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeBytes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ce_uri = 5;
 * @return {string}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeUri = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeUri = function() {
  return jspb.Message.setOneofField(this, 5, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeUri = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ce_uri_ref = 6;
 * @return {string}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeUriRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.setCeUriRef = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeUriRef = function() {
  return jspb.Message.setOneofField(this, 6, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeUriRef = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp ce_timestamp = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event.v1.CloudEventAttributeValue.prototype.getCeTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
*/
proto.event.v1.CloudEventAttributeValue.prototype.setCeTimestamp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.event.v1.CloudEventAttributeValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.v1.CloudEventAttributeValue} returns this
 */
proto.event.v1.CloudEventAttributeValue.prototype.clearCeTimestamp = function() {
  return this.setCeTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.v1.CloudEventAttributeValue.prototype.hasCeTimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.event.v1);
