// source: ai/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var ai_v1_ai_pb = require('../../ai/v1/ai_pb');
goog.object.extend(proto, ai_v1_ai_pb);
var buf_validate_validate_pb = require('../../buf/validate/validate_pb');
goog.object.extend(proto, buf_validate_validate_pb);
var common_v1_health_pb = require('../../common/v1/health_pb');
goog.object.extend(proto, common_v1_health_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb');
goog.object.extend(proto, google_protobuf_empty_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../protoc-gen-openapiv2/options/annotations_pb');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var validate_validate_pb = require('../../validate/validate_pb');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.ai.v1.CreateTaskRequest', null, global);
goog.exportSymbol('proto.ai.v1.Overrides', null, global);
goog.exportSymbol('proto.ai.v1.TaskEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Overrides = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Overrides, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Overrides.displayName = 'proto.ai.v1.Overrides';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.CreateTaskRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.CreateTaskRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.CreateTaskRequest.displayName = 'proto.ai.v1.CreateTaskRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.TaskEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.TaskEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.TaskEvent.displayName = 'proto.ai.v1.TaskEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Overrides.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Overrides.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Overrides} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Overrides.toObject = function(includeInstance, msg) {
  var f, obj = {
llm: jspb.Message.getFieldWithDefault(msg, 1, 0),
model: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Overrides}
 */
proto.ai.v1.Overrides.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Overrides;
  return proto.ai.v1.Overrides.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Overrides} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Overrides}
 */
proto.ai.v1.Overrides.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.v1.LLM} */ (reader.readEnum());
      msg.setLlm(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.v1.MODEL} */ (reader.readEnum());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Overrides.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Overrides.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Overrides} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Overrides.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLlm();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getModel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional LLM llm = 1;
 * @return {!proto.ai.v1.LLM}
 */
proto.ai.v1.Overrides.prototype.getLlm = function() {
  return /** @type {!proto.ai.v1.LLM} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ai.v1.LLM} value
 * @return {!proto.ai.v1.Overrides} returns this
 */
proto.ai.v1.Overrides.prototype.setLlm = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional MODEL model = 2;
 * @return {!proto.ai.v1.MODEL}
 */
proto.ai.v1.Overrides.prototype.getModel = function() {
  return /** @type {!proto.ai.v1.MODEL} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ai.v1.MODEL} value
 * @return {!proto.ai.v1.Overrides} returns this
 */
proto.ai.v1.Overrides.prototype.setModel = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.CreateTaskRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.CreateTaskRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.CreateTaskRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.CreateTaskRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
task: (f = msg.getTask()) && ai_v1_ai_pb.Task.toObject(includeInstance, f),
overrides: (f = msg.getOverrides()) && proto.ai.v1.Overrides.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.CreateTaskRequest}
 */
proto.ai.v1.CreateTaskRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.CreateTaskRequest;
  return proto.ai.v1.CreateTaskRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.CreateTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.CreateTaskRequest}
 */
proto.ai.v1.CreateTaskRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ai_v1_ai_pb.Task;
      reader.readMessage(value,ai_v1_ai_pb.Task.deserializeBinaryFromReader);
      msg.setTask(value);
      break;
    case 2:
      var value = new proto.ai.v1.Overrides;
      reader.readMessage(value,proto.ai.v1.Overrides.deserializeBinaryFromReader);
      msg.setOverrides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.CreateTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.CreateTaskRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.CreateTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.CreateTaskRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ai_v1_ai_pb.Task.serializeBinaryToWriter
    );
  }
  f = message.getOverrides();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.v1.Overrides.serializeBinaryToWriter
    );
  }
};


/**
 * optional Task task = 1;
 * @return {?proto.ai.v1.Task}
 */
proto.ai.v1.CreateTaskRequest.prototype.getTask = function() {
  return /** @type{?proto.ai.v1.Task} */ (
    jspb.Message.getWrapperField(this, ai_v1_ai_pb.Task, 1));
};


/**
 * @param {?proto.ai.v1.Task|undefined} value
 * @return {!proto.ai.v1.CreateTaskRequest} returns this
*/
proto.ai.v1.CreateTaskRequest.prototype.setTask = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.CreateTaskRequest} returns this
 */
proto.ai.v1.CreateTaskRequest.prototype.clearTask = function() {
  return this.setTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.CreateTaskRequest.prototype.hasTask = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Overrides overrides = 2;
 * @return {?proto.ai.v1.Overrides}
 */
proto.ai.v1.CreateTaskRequest.prototype.getOverrides = function() {
  return /** @type{?proto.ai.v1.Overrides} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Overrides, 2));
};


/**
 * @param {?proto.ai.v1.Overrides|undefined} value
 * @return {!proto.ai.v1.CreateTaskRequest} returns this
*/
proto.ai.v1.CreateTaskRequest.prototype.setOverrides = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.CreateTaskRequest} returns this
 */
proto.ai.v1.CreateTaskRequest.prototype.clearOverrides = function() {
  return this.setOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.CreateTaskRequest.prototype.hasOverrides = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.TaskEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.TaskEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.TaskEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.TaskEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
chunk: jspb.Message.getFieldWithDefault(msg, 1, ""),
llm: jspb.Message.getFieldWithDefault(msg, 2, 0),
model: jspb.Message.getFieldWithDefault(msg, 3, 0),
id: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.TaskEvent}
 */
proto.ai.v1.TaskEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.TaskEvent;
  return proto.ai.v1.TaskEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.TaskEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.TaskEvent}
 */
proto.ai.v1.TaskEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunk(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.v1.LLM} */ (reader.readEnum());
      msg.setLlm(value);
      break;
    case 3:
      var value = /** @type {!proto.ai.v1.MODEL} */ (reader.readEnum());
      msg.setModel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.TaskEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.TaskEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.TaskEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.TaskEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunk();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLlm();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getModel();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string chunk = 1;
 * @return {string}
 */
proto.ai.v1.TaskEvent.prototype.getChunk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.TaskEvent} returns this
 */
proto.ai.v1.TaskEvent.prototype.setChunk = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LLM llm = 2;
 * @return {!proto.ai.v1.LLM}
 */
proto.ai.v1.TaskEvent.prototype.getLlm = function() {
  return /** @type {!proto.ai.v1.LLM} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ai.v1.LLM} value
 * @return {!proto.ai.v1.TaskEvent} returns this
 */
proto.ai.v1.TaskEvent.prototype.setLlm = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional MODEL model = 3;
 * @return {!proto.ai.v1.MODEL}
 */
proto.ai.v1.TaskEvent.prototype.getModel = function() {
  return /** @type {!proto.ai.v1.MODEL} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ai.v1.MODEL} value
 * @return {!proto.ai.v1.TaskEvent} returns this
 */
proto.ai.v1.TaskEvent.prototype.setModel = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.ai.v1.TaskEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.TaskEvent} returns this
 */
proto.ai.v1.TaskEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.ai.v1);
