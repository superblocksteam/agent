// source: ai/v1/ai.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var buf_validate_validate_pb = require('../../buf/validate/validate_pb');
goog.object.extend(proto, buf_validate_validate_pb);
var common_v1_language_pb = require('../../common/v1/language_pb');
goog.object.extend(proto, common_v1_language_pb);
var common_v1_utils_pb = require('../../common/v1/utils_pb');
goog.object.extend(proto, common_v1_utils_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb');
goog.object.extend(proto, google_protobuf_struct_pb);
var validate_validate_pb = require('../../validate/validate_pb');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.ai.v1.LLM', null, global);
goog.exportSymbol('proto.ai.v1.MODEL', null, global);
goog.exportSymbol('proto.ai.v1.Message', null, global);
goog.exportSymbol('proto.ai.v1.Persona', null, global);
goog.exportSymbol('proto.ai.v1.Role', null, global);
goog.exportSymbol('proto.ai.v1.Syntax', null, global);
goog.exportSymbol('proto.ai.v1.Task', null, global);
goog.exportSymbol('proto.ai.v1.Task.Create', null, global);
goog.exportSymbol('proto.ai.v1.Task.Create.Context', null, global);
goog.exportSymbol('proto.ai.v1.Task.Create.Context.ConfigurationCase', null, global);
goog.exportSymbol('proto.ai.v1.Task.Debug', null, global);
goog.exportSymbol('proto.ai.v1.Task.Edit', null, global);
goog.exportSymbol('proto.ai.v1.Task.Edit.Context', null, global);
goog.exportSymbol('proto.ai.v1.Task.Edit.Context.ConfigurationCase', null, global);
goog.exportSymbol('proto.ai.v1.Task.Explain', null, global);
goog.exportSymbol('proto.ai.v1.Task.KindCase', null, global);
goog.exportSymbol('proto.ai.v1.Task.Mock', null, global);
goog.exportSymbol('proto.ai.v1.Task.Optimize', null, global);
goog.exportSymbol('proto.ai.v1.Task.Transpile', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Message.displayName = 'proto.ai.v1.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.v1.Task.repeatedFields_, proto.ai.v1.Task.oneofGroups_);
};
goog.inherits(proto.ai.v1.Task, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.displayName = 'proto.ai.v1.Task';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Optimize = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Optimize, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Optimize.displayName = 'proto.ai.v1.Task.Optimize';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Debug = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Debug, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Debug.displayName = 'proto.ai.v1.Task.Debug';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Transpile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Transpile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Transpile.displayName = 'proto.ai.v1.Task.Transpile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Edit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Edit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Edit.displayName = 'proto.ai.v1.Task.Edit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Edit.Context = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.v1.Task.Edit.Context.oneofGroups_);
};
goog.inherits(proto.ai.v1.Task.Edit.Context, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Edit.Context.displayName = 'proto.ai.v1.Task.Edit.Context';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Create = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Create, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Create.displayName = 'proto.ai.v1.Task.Create';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Create.Context = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.v1.Task.Create.Context.oneofGroups_);
};
goog.inherits(proto.ai.v1.Task.Create.Context, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Create.Context.displayName = 'proto.ai.v1.Task.Create.Context';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Explain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Explain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Explain.displayName = 'proto.ai.v1.Task.Explain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.v1.Task.Mock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.v1.Task.Mock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.v1.Task.Mock.displayName = 'proto.ai.v1.Task.Mock';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
role: jspb.Message.getFieldWithDefault(msg, 1, 0),
content: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Message}
 */
proto.ai.v1.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Message;
  return proto.ai.v1.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Message}
 */
proto.ai.v1.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.v1.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Role role = 1;
 * @return {!proto.ai.v1.Role}
 */
proto.ai.v1.Message.prototype.getRole = function() {
  return /** @type {!proto.ai.v1.Role} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ai.v1.Role} value
 * @return {!proto.ai.v1.Message} returns this
 */
proto.ai.v1.Message.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.ai.v1.Message.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Message} returns this
 */
proto.ai.v1.Message.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.v1.Task.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.v1.Task.oneofGroups_ = [[1,2,3,4,5,7,8]];

/**
 * @enum {number}
 */
proto.ai.v1.Task.KindCase = {
  KIND_NOT_SET: 0,
  OPTIMIZE: 1,
  EDIT: 2,
  EXPLAIN: 3,
  CREATE: 4,
  DEBUG: 5,
  TRANSPILE: 7,
  MOCK: 8
};

/**
 * @return {proto.ai.v1.Task.KindCase}
 */
proto.ai.v1.Task.prototype.getKindCase = function() {
  return /** @type {proto.ai.v1.Task.KindCase} */(jspb.Message.computeOneofCase(this, proto.ai.v1.Task.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.toObject = function(includeInstance, msg) {
  var f, obj = {
optimize: (f = msg.getOptimize()) && proto.ai.v1.Task.Optimize.toObject(includeInstance, f),
edit: (f = msg.getEdit()) && proto.ai.v1.Task.Edit.toObject(includeInstance, f),
explain: (f = msg.getExplain()) && proto.ai.v1.Task.Explain.toObject(includeInstance, f),
create: (f = msg.getCreate()) && proto.ai.v1.Task.Create.toObject(includeInstance, f),
debug: (f = msg.getDebug()) && proto.ai.v1.Task.Debug.toObject(includeInstance, f),
transpile: (f = msg.getTranspile()) && proto.ai.v1.Task.Transpile.toObject(includeInstance, f),
mock: (f = msg.getMock()) && proto.ai.v1.Task.Mock.toObject(includeInstance, f),
historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.ai.v1.Message.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task}
 */
proto.ai.v1.Task.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task;
  return proto.ai.v1.Task.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task}
 */
proto.ai.v1.Task.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.v1.Task.Optimize;
      reader.readMessage(value,proto.ai.v1.Task.Optimize.deserializeBinaryFromReader);
      msg.setOptimize(value);
      break;
    case 2:
      var value = new proto.ai.v1.Task.Edit;
      reader.readMessage(value,proto.ai.v1.Task.Edit.deserializeBinaryFromReader);
      msg.setEdit(value);
      break;
    case 3:
      var value = new proto.ai.v1.Task.Explain;
      reader.readMessage(value,proto.ai.v1.Task.Explain.deserializeBinaryFromReader);
      msg.setExplain(value);
      break;
    case 4:
      var value = new proto.ai.v1.Task.Create;
      reader.readMessage(value,proto.ai.v1.Task.Create.deserializeBinaryFromReader);
      msg.setCreate(value);
      break;
    case 5:
      var value = new proto.ai.v1.Task.Debug;
      reader.readMessage(value,proto.ai.v1.Task.Debug.deserializeBinaryFromReader);
      msg.setDebug(value);
      break;
    case 7:
      var value = new proto.ai.v1.Task.Transpile;
      reader.readMessage(value,proto.ai.v1.Task.Transpile.deserializeBinaryFromReader);
      msg.setTranspile(value);
      break;
    case 8:
      var value = new proto.ai.v1.Task.Mock;
      reader.readMessage(value,proto.ai.v1.Task.Mock.deserializeBinaryFromReader);
      msg.setMock(value);
      break;
    case 6:
      var value = new proto.ai.v1.Message;
      reader.readMessage(value,proto.ai.v1.Message.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptimize();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.v1.Task.Optimize.serializeBinaryToWriter
    );
  }
  f = message.getEdit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.v1.Task.Edit.serializeBinaryToWriter
    );
  }
  f = message.getExplain();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.v1.Task.Explain.serializeBinaryToWriter
    );
  }
  f = message.getCreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ai.v1.Task.Create.serializeBinaryToWriter
    );
  }
  f = message.getDebug();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ai.v1.Task.Debug.serializeBinaryToWriter
    );
  }
  f = message.getTranspile();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ai.v1.Task.Transpile.serializeBinaryToWriter
    );
  }
  f = message.getMock();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ai.v1.Task.Mock.serializeBinaryToWriter
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ai.v1.Message.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Optimize.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Optimize.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Optimize} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Optimize.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Optimize}
 */
proto.ai.v1.Task.Optimize.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Optimize;
  return proto.ai.v1.Task.Optimize.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Optimize} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Optimize}
 */
proto.ai.v1.Task.Optimize.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Optimize.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Optimize.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Optimize} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Optimize.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Debug.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Debug.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Debug} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Debug.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Debug}
 */
proto.ai.v1.Task.Debug.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Debug;
  return proto.ai.v1.Task.Debug.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Debug} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Debug}
 */
proto.ai.v1.Task.Debug.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Debug.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Debug.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Debug} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Debug.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Transpile.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Transpile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Transpile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Transpile.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Transpile}
 */
proto.ai.v1.Task.Transpile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Transpile;
  return proto.ai.v1.Task.Transpile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Transpile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Transpile}
 */
proto.ai.v1.Task.Transpile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Transpile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Transpile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Transpile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Transpile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Edit.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Edit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Edit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Edit.toObject = function(includeInstance, msg) {
  var f, obj = {
prompt: jspb.Message.getFieldWithDefault(msg, 1, ""),
syntax: jspb.Message.getFieldWithDefault(msg, 2, 0),
snippet: jspb.Message.getFieldWithDefault(msg, 3, ""),
context: (f = msg.getContext()) && proto.ai.v1.Task.Edit.Context.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Edit}
 */
proto.ai.v1.Task.Edit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Edit;
  return proto.ai.v1.Task.Edit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Edit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Edit}
 */
proto.ai.v1.Task.Edit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.v1.Syntax} */ (reader.readEnum());
      msg.setSyntax(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnippet(value);
      break;
    case 4:
      var value = new proto.ai.v1.Task.Edit.Context;
      reader.readMessage(value,proto.ai.v1.Task.Edit.Context.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Edit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Edit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Edit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Edit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSyntax();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSnippet();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ai.v1.Task.Edit.Context.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.v1.Task.Edit.Context.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ai.v1.Task.Edit.Context.ConfigurationCase = {
  CONFIGURATION_NOT_SET: 0,
  METADATA: 1,
  CONFIGURATION_IDS: 2
};

/**
 * @return {proto.ai.v1.Task.Edit.Context.ConfigurationCase}
 */
proto.ai.v1.Task.Edit.Context.prototype.getConfigurationCase = function() {
  return /** @type {proto.ai.v1.Task.Edit.Context.ConfigurationCase} */(jspb.Message.computeOneofCase(this, proto.ai.v1.Task.Edit.Context.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Edit.Context.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Edit.Context.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Edit.Context} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Edit.Context.toObject = function(includeInstance, msg) {
  var f, obj = {
metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
configurationIds: (f = msg.getConfigurationIds()) && common_v1_utils_pb.StringList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Edit.Context}
 */
proto.ai.v1.Task.Edit.Context.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Edit.Context;
  return proto.ai.v1.Task.Edit.Context.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Edit.Context} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Edit.Context}
 */
proto.ai.v1.Task.Edit.Context.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new common_v1_utils_pb.StringList;
      reader.readMessage(value,common_v1_utils_pb.StringList.deserializeBinaryFromReader);
      msg.setConfigurationIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Edit.Context.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Edit.Context.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Edit.Context} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Edit.Context.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfigurationIds();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_utils_pb.StringList.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct metadata = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.ai.v1.Task.Edit.Context.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.ai.v1.Task.Edit.Context} returns this
*/
proto.ai.v1.Task.Edit.Context.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ai.v1.Task.Edit.Context.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Edit.Context} returns this
 */
proto.ai.v1.Task.Edit.Context.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Edit.Context.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.v1.StringList configuration_ids = 2;
 * @return {?proto.common.v1.StringList}
 */
proto.ai.v1.Task.Edit.Context.prototype.getConfigurationIds = function() {
  return /** @type{?proto.common.v1.StringList} */ (
    jspb.Message.getWrapperField(this, common_v1_utils_pb.StringList, 2));
};


/**
 * @param {?proto.common.v1.StringList|undefined} value
 * @return {!proto.ai.v1.Task.Edit.Context} returns this
*/
proto.ai.v1.Task.Edit.Context.prototype.setConfigurationIds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ai.v1.Task.Edit.Context.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Edit.Context} returns this
 */
proto.ai.v1.Task.Edit.Context.prototype.clearConfigurationIds = function() {
  return this.setConfigurationIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Edit.Context.prototype.hasConfigurationIds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prompt = 1;
 * @return {string}
 */
proto.ai.v1.Task.Edit.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Edit} returns this
 */
proto.ai.v1.Task.Edit.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Syntax syntax = 2;
 * @return {!proto.ai.v1.Syntax}
 */
proto.ai.v1.Task.Edit.prototype.getSyntax = function() {
  return /** @type {!proto.ai.v1.Syntax} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ai.v1.Syntax} value
 * @return {!proto.ai.v1.Task.Edit} returns this
 */
proto.ai.v1.Task.Edit.prototype.setSyntax = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string snippet = 3;
 * @return {string}
 */
proto.ai.v1.Task.Edit.prototype.getSnippet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Edit} returns this
 */
proto.ai.v1.Task.Edit.prototype.setSnippet = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Context context = 4;
 * @return {?proto.ai.v1.Task.Edit.Context}
 */
proto.ai.v1.Task.Edit.prototype.getContext = function() {
  return /** @type{?proto.ai.v1.Task.Edit.Context} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Edit.Context, 4));
};


/**
 * @param {?proto.ai.v1.Task.Edit.Context|undefined} value
 * @return {!proto.ai.v1.Task.Edit} returns this
*/
proto.ai.v1.Task.Edit.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Edit} returns this
 */
proto.ai.v1.Task.Edit.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Edit.prototype.hasContext = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Create.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Create.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Create} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Create.toObject = function(includeInstance, msg) {
  var f, obj = {
prompt: jspb.Message.getFieldWithDefault(msg, 1, ""),
syntax: jspb.Message.getFieldWithDefault(msg, 2, 0),
context: (f = msg.getContext()) && proto.ai.v1.Task.Create.Context.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Create}
 */
proto.ai.v1.Task.Create.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Create;
  return proto.ai.v1.Task.Create.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Create} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Create}
 */
proto.ai.v1.Task.Create.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.v1.Syntax} */ (reader.readEnum());
      msg.setSyntax(value);
      break;
    case 3:
      var value = new proto.ai.v1.Task.Create.Context;
      reader.readMessage(value,proto.ai.v1.Task.Create.Context.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Create.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Create.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Create} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Create.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSyntax();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.v1.Task.Create.Context.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.v1.Task.Create.Context.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ai.v1.Task.Create.Context.ConfigurationCase = {
  CONFIGURATION_NOT_SET: 0,
  METADATA: 1,
  CONFIGURATION_IDS: 2
};

/**
 * @return {proto.ai.v1.Task.Create.Context.ConfigurationCase}
 */
proto.ai.v1.Task.Create.Context.prototype.getConfigurationCase = function() {
  return /** @type {proto.ai.v1.Task.Create.Context.ConfigurationCase} */(jspb.Message.computeOneofCase(this, proto.ai.v1.Task.Create.Context.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Create.Context.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Create.Context.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Create.Context} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Create.Context.toObject = function(includeInstance, msg) {
  var f, obj = {
metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
configurationIds: (f = msg.getConfigurationIds()) && common_v1_utils_pb.StringList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Create.Context}
 */
proto.ai.v1.Task.Create.Context.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Create.Context;
  return proto.ai.v1.Task.Create.Context.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Create.Context} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Create.Context}
 */
proto.ai.v1.Task.Create.Context.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new common_v1_utils_pb.StringList;
      reader.readMessage(value,common_v1_utils_pb.StringList.deserializeBinaryFromReader);
      msg.setConfigurationIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Create.Context.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Create.Context.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Create.Context} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Create.Context.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfigurationIds();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_utils_pb.StringList.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct metadata = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.ai.v1.Task.Create.Context.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.ai.v1.Task.Create.Context} returns this
*/
proto.ai.v1.Task.Create.Context.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ai.v1.Task.Create.Context.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Create.Context} returns this
 */
proto.ai.v1.Task.Create.Context.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Create.Context.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.v1.StringList configuration_ids = 2;
 * @return {?proto.common.v1.StringList}
 */
proto.ai.v1.Task.Create.Context.prototype.getConfigurationIds = function() {
  return /** @type{?proto.common.v1.StringList} */ (
    jspb.Message.getWrapperField(this, common_v1_utils_pb.StringList, 2));
};


/**
 * @param {?proto.common.v1.StringList|undefined} value
 * @return {!proto.ai.v1.Task.Create.Context} returns this
*/
proto.ai.v1.Task.Create.Context.prototype.setConfigurationIds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ai.v1.Task.Create.Context.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Create.Context} returns this
 */
proto.ai.v1.Task.Create.Context.prototype.clearConfigurationIds = function() {
  return this.setConfigurationIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Create.Context.prototype.hasConfigurationIds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prompt = 1;
 * @return {string}
 */
proto.ai.v1.Task.Create.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Create} returns this
 */
proto.ai.v1.Task.Create.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Syntax syntax = 2;
 * @return {!proto.ai.v1.Syntax}
 */
proto.ai.v1.Task.Create.prototype.getSyntax = function() {
  return /** @type {!proto.ai.v1.Syntax} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ai.v1.Syntax} value
 * @return {!proto.ai.v1.Task.Create} returns this
 */
proto.ai.v1.Task.Create.prototype.setSyntax = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Context context = 3;
 * @return {?proto.ai.v1.Task.Create.Context}
 */
proto.ai.v1.Task.Create.prototype.getContext = function() {
  return /** @type{?proto.ai.v1.Task.Create.Context} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Create.Context, 3));
};


/**
 * @param {?proto.ai.v1.Task.Create.Context|undefined} value
 * @return {!proto.ai.v1.Task.Create} returns this
*/
proto.ai.v1.Task.Create.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task.Create} returns this
 */
proto.ai.v1.Task.Create.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.Create.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Explain.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Explain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Explain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Explain.toObject = function(includeInstance, msg) {
  var f, obj = {
syntax: jspb.Message.getFieldWithDefault(msg, 1, 0),
snippet: jspb.Message.getFieldWithDefault(msg, 2, ""),
contents: jspb.Message.getFieldWithDefault(msg, 3, ""),
language: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Explain}
 */
proto.ai.v1.Task.Explain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Explain;
  return proto.ai.v1.Task.Explain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Explain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Explain}
 */
proto.ai.v1.Task.Explain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.v1.Syntax} */ (reader.readEnum());
      msg.setSyntax(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnippet(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContents(value);
      break;
    case 4:
      var value = /** @type {!proto.common.v1.Language} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Explain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Explain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Explain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Explain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSyntax();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSnippet();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContents();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional Syntax syntax = 1;
 * @return {!proto.ai.v1.Syntax}
 */
proto.ai.v1.Task.Explain.prototype.getSyntax = function() {
  return /** @type {!proto.ai.v1.Syntax} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ai.v1.Syntax} value
 * @return {!proto.ai.v1.Task.Explain} returns this
 */
proto.ai.v1.Task.Explain.prototype.setSyntax = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string snippet = 2;
 * @return {string}
 */
proto.ai.v1.Task.Explain.prototype.getSnippet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Explain} returns this
 */
proto.ai.v1.Task.Explain.prototype.setSnippet = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contents = 3;
 * @return {string}
 */
proto.ai.v1.Task.Explain.prototype.getContents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Explain} returns this
 */
proto.ai.v1.Task.Explain.prototype.setContents = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional common.v1.Language language = 4;
 * @return {!proto.common.v1.Language}
 */
proto.ai.v1.Task.Explain.prototype.getLanguage = function() {
  return /** @type {!proto.common.v1.Language} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.common.v1.Language} value
 * @return {!proto.ai.v1.Task.Explain} returns this
 */
proto.ai.v1.Task.Explain.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.v1.Task.Mock.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.v1.Task.Mock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.v1.Task.Mock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Mock.toObject = function(includeInstance, msg) {
  var f, obj = {
syntax: jspb.Message.getFieldWithDefault(msg, 1, 0),
shape: jspb.Message.getFieldWithDefault(msg, 2, ""),
prompt: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.v1.Task.Mock}
 */
proto.ai.v1.Task.Mock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.v1.Task.Mock;
  return proto.ai.v1.Task.Mock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.v1.Task.Mock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.v1.Task.Mock}
 */
proto.ai.v1.Task.Mock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.v1.Syntax} */ (reader.readEnum());
      msg.setSyntax(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setShape(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.v1.Task.Mock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.v1.Task.Mock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.v1.Task.Mock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.v1.Task.Mock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSyntax();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getShape();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Syntax syntax = 1;
 * @return {!proto.ai.v1.Syntax}
 */
proto.ai.v1.Task.Mock.prototype.getSyntax = function() {
  return /** @type {!proto.ai.v1.Syntax} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ai.v1.Syntax} value
 * @return {!proto.ai.v1.Task.Mock} returns this
 */
proto.ai.v1.Task.Mock.prototype.setSyntax = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string shape = 2;
 * @return {string}
 */
proto.ai.v1.Task.Mock.prototype.getShape = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Mock} returns this
 */
proto.ai.v1.Task.Mock.prototype.setShape = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string prompt = 3;
 * @return {string}
 */
proto.ai.v1.Task.Mock.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.v1.Task.Mock} returns this
 */
proto.ai.v1.Task.Mock.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Optimize optimize = 1;
 * @return {?proto.ai.v1.Task.Optimize}
 */
proto.ai.v1.Task.prototype.getOptimize = function() {
  return /** @type{?proto.ai.v1.Task.Optimize} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Optimize, 1));
};


/**
 * @param {?proto.ai.v1.Task.Optimize|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setOptimize = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearOptimize = function() {
  return this.setOptimize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasOptimize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Edit edit = 2;
 * @return {?proto.ai.v1.Task.Edit}
 */
proto.ai.v1.Task.prototype.getEdit = function() {
  return /** @type{?proto.ai.v1.Task.Edit} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Edit, 2));
};


/**
 * @param {?proto.ai.v1.Task.Edit|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setEdit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearEdit = function() {
  return this.setEdit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasEdit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Explain explain = 3;
 * @return {?proto.ai.v1.Task.Explain}
 */
proto.ai.v1.Task.prototype.getExplain = function() {
  return /** @type{?proto.ai.v1.Task.Explain} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Explain, 3));
};


/**
 * @param {?proto.ai.v1.Task.Explain|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setExplain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearExplain = function() {
  return this.setExplain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasExplain = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Create create = 4;
 * @return {?proto.ai.v1.Task.Create}
 */
proto.ai.v1.Task.prototype.getCreate = function() {
  return /** @type{?proto.ai.v1.Task.Create} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Create, 4));
};


/**
 * @param {?proto.ai.v1.Task.Create|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearCreate = function() {
  return this.setCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasCreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Debug debug = 5;
 * @return {?proto.ai.v1.Task.Debug}
 */
proto.ai.v1.Task.prototype.getDebug = function() {
  return /** @type{?proto.ai.v1.Task.Debug} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Debug, 5));
};


/**
 * @param {?proto.ai.v1.Task.Debug|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setDebug = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearDebug = function() {
  return this.setDebug(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Transpile transpile = 7;
 * @return {?proto.ai.v1.Task.Transpile}
 */
proto.ai.v1.Task.prototype.getTranspile = function() {
  return /** @type{?proto.ai.v1.Task.Transpile} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Transpile, 7));
};


/**
 * @param {?proto.ai.v1.Task.Transpile|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setTranspile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearTranspile = function() {
  return this.setTranspile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasTranspile = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Mock mock = 8;
 * @return {?proto.ai.v1.Task.Mock}
 */
proto.ai.v1.Task.prototype.getMock = function() {
  return /** @type{?proto.ai.v1.Task.Mock} */ (
    jspb.Message.getWrapperField(this, proto.ai.v1.Task.Mock, 8));
};


/**
 * @param {?proto.ai.v1.Task.Mock|undefined} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setMock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.ai.v1.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearMock = function() {
  return this.setMock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.v1.Task.prototype.hasMock = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Message history = 6;
 * @return {!Array<!proto.ai.v1.Message>}
 */
proto.ai.v1.Task.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.ai.v1.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.v1.Message, 6));
};


/**
 * @param {!Array<!proto.ai.v1.Message>} value
 * @return {!proto.ai.v1.Task} returns this
*/
proto.ai.v1.Task.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ai.v1.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.v1.Message}
 */
proto.ai.v1.Task.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ai.v1.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.v1.Task} returns this
 */
proto.ai.v1.Task.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * @enum {number}
 */
proto.ai.v1.LLM = {
  LLM_UNSPECIFIED: 0,
  LLM_OPENAI: 1,
  LLM_ANTHROPIC: 2,
  LLM_MOCK: 3
};

/**
 * @enum {number}
 */
proto.ai.v1.MODEL = {
  MODEL_UNSPECIFIED: 0,
  MODEL_ANTHROPIC_CLAUDE_V1: 1,
  MODEL_ANTHROPIC_CLAUDE_V1_0: 2,
  MODEL_ANTHROPIC_CLAUDE_V1_2: 3,
  MODEL_ANTHROPIC_CLAUDE_INSTANT_V1: 4,
  MODEL_ANTHROPIC_CLAUDE_INSTANT_V1_0: 5,
  MODEL_OPENAI_GPT432K0314: 6,
  MODEL_OPENAI_GPT432K0613: 26,
  MODEL_OPENAI_GPT432K: 7,
  MODEL_OPENAI_GPT40314: 8,
  MODEL_OPENAI_GPT40613: 27,
  MODEL_OPENAI_GPT4: 9,
  MODEL_OPENAI_GPT3_5_TURBO_0301: 10,
  MODEL_OPENAI_GPT3_5_TURBO_0613: 28,
  MODEL_OPENAI_GPT3_5_TURBO: 11,
  MODEL_OPENAI_GPT3_5_TURBO_16K: 29,
  MODEL_OPENAI_GPT3_5_TURBO_16K_0613: 30,
  MODEL_OPENAI_GPT3_TEXT_DAVINCI_003: 12,
  MODEL_OPENAI_GPT3_TEXT_DAVINCI_002: 13,
  MODEL_OPENAI_GPT3_TEXT_CURIE_001: 14,
  MODEL_OPENAI_GPT3_TEXT_BAGGAGE_001: 15,
  MODEL_OPENAI_GPT3_TEXT_ADA_001: 16,
  MODEL_OPENAI_GPT3_TEXT_DAVINCI_001: 17,
  MODEL_OPENAI_GPT3_DAVINCI_INSTRUCT_BETA: 18,
  MODEL_OPENAI_GPT3_DAVINCI: 19,
  MODEL_OPENAI_GPT3_CURIE_INSTRUCT_BETA: 20,
  MODEL_OPENAI_GPT3_CURIE: 21,
  MODEL_OPENAI_GPT3_ADA: 22,
  MODEL_OPENAI_GPT3_BAGGAGE: 23,
  MODEL_MOCK_TIER_ONE: 24,
  MODEL_MOCK_TIER_TWO: 25
};

/**
 * @enum {number}
 */
proto.ai.v1.Role = {
  ROLE_UNSPECIFIED: 0,
  ROLE_USER: 1,
  ROLE_ASSISTANT: 2,
  ROLE_SYSTEM: 3
};

/**
 * @enum {number}
 */
proto.ai.v1.Syntax = {
  SYNTAX_UNSPECIFIED: 0,
  SYNTAX_JAVASCRIPT: 1,
  SYNTAX_PYTHON: 2,
  SYNTAX_POSTGRESQL: 3,
  SYNTAX_MSSQL: 4,
  SYNTAX_MYSQL: 5,
  SYNTAX_MARIADB: 6,
  SYNTAX_SNOWFLAKE: 7,
  SYNTAX_COCKROACHDB: 8,
  SYNTAX_ROCKSET: 9,
  SYNTAX_REDSHIFT: 10,
  SYNTAX_BIGQUERY: 11,
  SYNTAX_DYNAMODB: 12,
  SYNTAX_MONGODB: 13,
  SYNTAX_BINDING: 14,
  SYNTAX_JSON: 15,
  SYNTAX_HTML: 16,
  SYNTAX_API: 17,
  SYNTAX_PLUGIN_RESTAPI: 18,
  SYNTAX_PLUGIN_GRAPHQL: 19,
  SYNTAX_ORACLEDB: 20,
  SYNTAX_DATABRICKS: 21
};

/**
 * @enum {number}
 */
proto.ai.v1.Persona = {
  PERSONA_UNSPECIFIED: 0,
  PERSONA_DEVELOPER: 1,
  PERSONA_TEACHER: 2
};

goog.object.extend(exports, proto.ai.v1);
