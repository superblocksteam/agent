// source: transport/v1/transport.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_v1_api_pb = require('../../api/v1/api_pb');
goog.object.extend(proto, api_v1_api_pb);
var api_v1_blocks_pb = require('../../api/v1/blocks_pb');
goog.object.extend(proto, api_v1_blocks_pb);
var api_v1_service_pb = require('../../api/v1/service_pb');
goog.object.extend(proto, api_v1_service_pb);
var buf_validate_validate_pb = require('../../buf/validate/validate_pb');
goog.object.extend(proto, buf_validate_validate_pb);
var common_v1_errors_pb = require('../../common/v1/errors_pb');
goog.object.extend(proto, common_v1_errors_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb');
goog.object.extend(proto, google_protobuf_struct_pb);
var plugins_adls_v1_plugin_pb = require('../../plugins/adls/v1/plugin_pb');
goog.object.extend(proto, plugins_adls_v1_plugin_pb);
var plugins_cosmosdb_v1_plugin_pb = require('../../plugins/cosmosdb/v1/plugin_pb');
goog.object.extend(proto, plugins_cosmosdb_v1_plugin_pb);
var plugins_kafka_v1_plugin_pb = require('../../plugins/kafka/v1/plugin_pb');
goog.object.extend(proto, plugins_kafka_v1_plugin_pb);
var store_v1_store_pb = require('../../store/v1/store_pb');
goog.object.extend(proto, store_v1_store_pb);
var validate_validate_pb = require('../../validate/validate_pb');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.transport.v1.Fetch', null, global);
goog.exportSymbol('proto.transport.v1.Fetch.Metadata', null, global);
goog.exportSymbol('proto.transport.v1.FetchScheduleJobResp', null, global);
goog.exportSymbol('proto.transport.v1.Observability', null, global);
goog.exportSymbol('proto.transport.v1.Performance', null, global);
goog.exportSymbol('proto.transport.v1.Performance.Observable', null, global);
goog.exportSymbol('proto.transport.v1.Request', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Data', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Data.Props', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Data.Props.Binding', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Data.Props.File', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Data.Quota', null, global);
goog.exportSymbol('proto.transport.v1.Request.Data.Pinned', null, global);
goog.exportSymbol('proto.transport.v1.Response', null, global);
goog.exportSymbol('proto.transport.v1.Response.Data', null, global);
goog.exportSymbol('proto.transport.v1.Response.Data.Data', null, global);
goog.exportSymbol('proto.transport.v1.Variable', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Performance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Performance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Performance.displayName = 'proto.transport.v1.Performance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Performance.Observable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Performance.Observable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Performance.Observable.displayName = 'proto.transport.v1.Performance.Observable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Variable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Variable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Variable.displayName = 'proto.transport.v1.Variable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Observability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Observability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Observability.displayName = 'proto.transport.v1.Observability';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.displayName = 'proto.transport.v1.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.displayName = 'proto.transport.v1.Request.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Pinned = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data.Pinned, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Pinned.displayName = 'proto.transport.v1.Request.Data.Pinned';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Data.displayName = 'proto.transport.v1.Request.Data.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Data.Props = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transport.v1.Request.Data.Data.Props.repeatedFields_, null);
};
goog.inherits(proto.transport.v1.Request.Data.Data.Props, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Data.Props.displayName = 'proto.transport.v1.Request.Data.Data.Props';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Data.Props.Binding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data.Data.Props.Binding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Data.Props.Binding.displayName = 'proto.transport.v1.Request.Data.Data.Props.Binding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Data.Props.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data.Data.Props.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Data.Props.File.displayName = 'proto.transport.v1.Request.Data.Data.Props.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Request.Data.Data.Quota = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Request.Data.Data.Quota, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Request.Data.Data.Quota.displayName = 'proto.transport.v1.Request.Data.Data.Quota';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Response.displayName = 'proto.transport.v1.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Response.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Response.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Response.Data.displayName = 'proto.transport.v1.Response.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Response.Data.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transport.v1.Response.Data.Data.repeatedFields_, null);
};
goog.inherits(proto.transport.v1.Response.Data.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Response.Data.Data.displayName = 'proto.transport.v1.Response.Data.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Fetch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Fetch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Fetch.displayName = 'proto.transport.v1.Fetch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.Fetch.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transport.v1.Fetch.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.Fetch.Metadata.displayName = 'proto.transport.v1.Fetch.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transport.v1.FetchScheduleJobResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transport.v1.FetchScheduleJobResp.repeatedFields_, null);
};
goog.inherits(proto.transport.v1.FetchScheduleJobResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transport.v1.FetchScheduleJobResp.displayName = 'proto.transport.v1.FetchScheduleJobResp';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Performance.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Performance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Performance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Performance.toObject = function(includeInstance, msg) {
  var f, obj = {
error: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
pluginExecution: (f = msg.getPluginExecution()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f),
queueRequest: (f = msg.getQueueRequest()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f),
queueResponse: (f = msg.getQueueResponse()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f),
kvStoreFetch: (f = msg.getKvStoreFetch()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f),
kvStorePush: (f = msg.getKvStorePush()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f),
total: (f = msg.getTotal()) && proto.transport.v1.Performance.Observable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Performance}
 */
proto.transport.v1.Performance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Performance;
  return proto.transport.v1.Performance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Performance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Performance}
 */
proto.transport.v1.Performance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setError(value);
      break;
    case 2:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setPluginExecution(value);
      break;
    case 3:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setQueueRequest(value);
      break;
    case 4:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setQueueResponse(value);
      break;
    case 5:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setKvStoreFetch(value);
      break;
    case 6:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setKvStorePush(value);
      break;
    case 7:
      var value = new proto.transport.v1.Performance.Observable;
      reader.readMessage(value,proto.transport.v1.Performance.Observable.deserializeBinaryFromReader);
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Performance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Performance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Performance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Performance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPluginExecution();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
  f = message.getQueueRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
  f = message.getQueueResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
  f = message.getKvStoreFetch();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
  f = message.getKvStorePush();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.transport.v1.Performance.Observable.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Performance.Observable.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Performance.Observable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Performance.Observable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Performance.Observable.toObject = function(includeInstance, msg) {
  var f, obj = {
start: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
end: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
value: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
bytes: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
estimate: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.Observable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Performance.Observable;
  return proto.transport.v1.Performance.Observable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Performance.Observable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.Observable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEnd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBytes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEstimate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Performance.Observable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Performance.Observable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Performance.Observable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Performance.Observable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getBytes();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getEstimate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional double start = 1;
 * @return {number}
 */
proto.transport.v1.Performance.Observable.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Performance.Observable} returns this
 */
proto.transport.v1.Performance.Observable.prototype.setStart = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double end = 2;
 * @return {number}
 */
proto.transport.v1.Performance.Observable.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Performance.Observable} returns this
 */
proto.transport.v1.Performance.Observable.prototype.setEnd = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double value = 3;
 * @return {number}
 */
proto.transport.v1.Performance.Observable.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Performance.Observable} returns this
 */
proto.transport.v1.Performance.Observable.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double bytes = 4;
 * @return {number}
 */
proto.transport.v1.Performance.Observable.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Performance.Observable} returns this
 */
proto.transport.v1.Performance.Observable.prototype.setBytes = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double estimate = 5;
 * @return {number}
 */
proto.transport.v1.Performance.Observable.prototype.getEstimate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Performance.Observable} returns this
 */
proto.transport.v1.Performance.Observable.prototype.setEstimate = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool error = 1;
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.getError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.setError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Observable plugin_execution = 2;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getPluginExecution = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 2));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setPluginExecution = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearPluginExecution = function() {
  return this.setPluginExecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasPluginExecution = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Observable queue_request = 3;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getQueueRequest = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 3));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setQueueRequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearQueueRequest = function() {
  return this.setQueueRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasQueueRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Observable queue_response = 4;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getQueueResponse = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 4));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setQueueResponse = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearQueueResponse = function() {
  return this.setQueueResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasQueueResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Observable kv_store_fetch = 5;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getKvStoreFetch = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 5));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setKvStoreFetch = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearKvStoreFetch = function() {
  return this.setKvStoreFetch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasKvStoreFetch = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Observable kv_store_push = 6;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getKvStorePush = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 6));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setKvStorePush = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearKvStorePush = function() {
  return this.setKvStorePush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasKvStorePush = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Observable total = 7;
 * @return {?proto.transport.v1.Performance.Observable}
 */
proto.transport.v1.Performance.prototype.getTotal = function() {
  return /** @type{?proto.transport.v1.Performance.Observable} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance.Observable, 7));
};


/**
 * @param {?proto.transport.v1.Performance.Observable|undefined} value
 * @return {!proto.transport.v1.Performance} returns this
*/
proto.transport.v1.Performance.prototype.setTotal = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Performance} returns this
 */
proto.transport.v1.Performance.prototype.clearTotal = function() {
  return this.setTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Performance.prototype.hasTotal = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Variable.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Variable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Variable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Variable.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, 0),
mode: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Variable}
 */
proto.transport.v1.Variable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Variable;
  return proto.transport.v1.Variable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Variable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Variable}
 */
proto.transport.v1.Variable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.api.v1.Variables.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!proto.api.v1.Variables.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Variable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Variable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Variable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Variable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.transport.v1.Variable.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Variable} returns this
 */
proto.transport.v1.Variable.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional api.v1.Variables.Type type = 2;
 * @return {!proto.api.v1.Variables.Type}
 */
proto.transport.v1.Variable.prototype.getType = function() {
  return /** @type {!proto.api.v1.Variables.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.v1.Variables.Type} value
 * @return {!proto.transport.v1.Variable} returns this
 */
proto.transport.v1.Variable.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional api.v1.Variables.Mode mode = 3;
 * @return {!proto.api.v1.Variables.Mode}
 */
proto.transport.v1.Variable.prototype.getMode = function() {
  return /** @type {!proto.api.v1.Variables.Mode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.v1.Variables.Mode} value
 * @return {!proto.transport.v1.Variable} returns this
 */
proto.transport.v1.Variable.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Observability.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Observability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Observability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Observability.toObject = function(includeInstance, msg) {
  var f, obj = {
traceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
spanId: jspb.Message.getFieldWithDefault(msg, 2, ""),
baggageMap: (f = msg.getBaggageMap()) ? f.toObject(includeInstance, undefined) : [],
traceFlags: msg.getTraceFlags_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Observability}
 */
proto.transport.v1.Observability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Observability;
  return proto.transport.v1.Observability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Observability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Observability}
 */
proto.transport.v1.Observability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpanId(value);
      break;
    case 3:
      var value = msg.getBaggageMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTraceFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Observability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Observability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Observability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Observability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpanId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBaggageMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTraceFlags_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string trace_id = 1;
 * @return {string}
 */
proto.transport.v1.Observability.prototype.getTraceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Observability} returns this
 */
proto.transport.v1.Observability.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string span_id = 2;
 * @return {string}
 */
proto.transport.v1.Observability.prototype.getSpanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Observability} returns this
 */
proto.transport.v1.Observability.prototype.setSpanId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> baggage = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.transport.v1.Observability.prototype.getBaggageMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.transport.v1.Observability} returns this
 */
proto.transport.v1.Observability.prototype.clearBaggageMap = function() {
  this.getBaggageMap().clear();
  return this;
};


/**
 * optional bytes trace_flags = 4;
 * @return {string}
 */
proto.transport.v1.Observability.prototype.getTraceFlags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes trace_flags = 4;
 * This is a type-conversion wrapper around `getTraceFlags()`
 * @return {string}
 */
proto.transport.v1.Observability.prototype.getTraceFlags_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTraceFlags()));
};


/**
 * optional bytes trace_flags = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTraceFlags()`
 * @return {!Uint8Array}
 */
proto.transport.v1.Observability.prototype.getTraceFlags_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTraceFlags()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.transport.v1.Observability} returns this
 */
proto.transport.v1.Observability.prototype.setTraceFlags = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
inbox: jspb.Message.getFieldWithDefault(msg, 1, ""),
data: (f = msg.getData()) && proto.transport.v1.Request.Data.toObject(includeInstance, f),
topic: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request}
 */
proto.transport.v1.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request;
  return proto.transport.v1.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request}
 */
proto.transport.v1.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInbox(value);
      break;
    case 2:
      var value = new proto.transport.v1.Request.Data;
      reader.readMessage(value,proto.transport.v1.Request.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInbox();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.transport.v1.Request.Data.serializeBinaryToWriter
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
pinned: (f = msg.getPinned()) && proto.transport.v1.Request.Data.Pinned.toObject(includeInstance, f),
data: (f = msg.getData()) && proto.transport.v1.Request.Data.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data}
 */
proto.transport.v1.Request.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data;
  return proto.transport.v1.Request.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data}
 */
proto.transport.v1.Request.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transport.v1.Request.Data.Pinned;
      reader.readMessage(value,proto.transport.v1.Request.Data.Pinned.deserializeBinaryFromReader);
      msg.setPinned(value);
      break;
    case 2:
      var value = new proto.transport.v1.Request.Data.Data;
      reader.readMessage(value,proto.transport.v1.Request.Data.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPinned();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.transport.v1.Request.Data.Pinned.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.transport.v1.Request.Data.Data.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Pinned.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Pinned.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Pinned} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Pinned.toObject = function(includeInstance, msg) {
  var f, obj = {
bucket: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
version: jspb.Message.getFieldWithDefault(msg, 3, ""),
event: jspb.Message.getFieldWithDefault(msg, 4, ""),
carrierMap: (f = msg.getCarrierMap()) ? f.toObject(includeInstance, undefined) : [],
observability: (f = msg.getObservability()) && proto.transport.v1.Observability.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Pinned}
 */
proto.transport.v1.Request.Data.Pinned.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Pinned;
  return proto.transport.v1.Request.Data.Pinned.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Pinned} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Pinned}
 */
proto.transport.v1.Request.Data.Pinned.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 5:
      var value = msg.getCarrierMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = new proto.transport.v1.Observability;
      reader.readMessage(value,proto.transport.v1.Observability.deserializeBinaryFromReader);
      msg.setObservability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Pinned.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Pinned.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Pinned} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Pinned.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCarrierMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getObservability();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.transport.v1.Observability.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bucket = 1;
 * @return {string}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.setBucket = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string event = 4;
 * @return {string}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.setEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, string> carrier = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getCarrierMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.clearCarrierMap = function() {
  this.getCarrierMap().clear();
  return this;
};


/**
 * optional Observability observability = 6;
 * @return {?proto.transport.v1.Observability}
 */
proto.transport.v1.Request.Data.Pinned.prototype.getObservability = function() {
  return /** @type{?proto.transport.v1.Observability} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Observability, 6));
};


/**
 * @param {?proto.transport.v1.Observability|undefined} value
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
*/
proto.transport.v1.Request.Data.Pinned.prototype.setObservability = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Pinned} returns this
 */
proto.transport.v1.Request.Data.Pinned.prototype.clearObservability = function() {
  return this.setObservability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Pinned.prototype.hasObservability = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
props: (f = msg.getProps()) && proto.transport.v1.Request.Data.Data.Props.toObject(includeInstance, f),
dConfig: (f = msg.getDConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
aConfig: (f = msg.getAConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
quotas: (f = msg.getQuotas()) && proto.transport.v1.Request.Data.Data.Quota.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Data}
 */
proto.transport.v1.Request.Data.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Data;
  return proto.transport.v1.Request.Data.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Data}
 */
proto.transport.v1.Request.Data.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transport.v1.Request.Data.Data.Props;
      reader.readMessage(value,proto.transport.v1.Request.Data.Data.Props.deserializeBinaryFromReader);
      msg.setProps(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDConfig(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAConfig(value);
      break;
    case 4:
      var value = new proto.transport.v1.Request.Data.Data.Quota;
      reader.readMessage(value,proto.transport.v1.Request.Data.Data.Quota.deserializeBinaryFromReader);
      msg.setQuotas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProps();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.transport.v1.Request.Data.Data.Props.serializeBinaryToWriter
    );
  }
  f = message.getDConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getAConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getQuotas();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.transport.v1.Request.Data.Data.Quota.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transport.v1.Request.Data.Data.Props.repeatedFields_ = [7,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Data.Props.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Data.Props} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.toObject = function(includeInstance, msg) {
  var f, obj = {
actionConfiguration: (f = msg.getActionConfiguration()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
datasourceConfiguration: (f = msg.getDatasourceConfiguration()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
redactedDatasourceConfiguration: (f = msg.getRedactedDatasourceConfiguration()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
executionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
stepName: jspb.Message.getFieldWithDefault(msg, 5, ""),
environment: jspb.Message.getFieldWithDefault(msg, 6, ""),
bindingKeysList: jspb.Message.toObjectList(msg.getBindingKeysList(),
    proto.transport.v1.Request.Data.Data.Props.Binding.toObject, includeInstance),
variablesMap: (f = msg.getVariablesMap()) ? f.toObject(includeInstance, proto.transport.v1.Variable.toObject) : [],
fileserverurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.transport.v1.Request.Data.Data.Props.File.toObject, includeInstance),
render: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
version: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Data.Props}
 */
proto.transport.v1.Request.Data.Data.Props.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Data.Props;
  return proto.transport.v1.Request.Data.Data.Props.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Data.Props} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Data.Props}
 */
proto.transport.v1.Request.Data.Data.Props.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setActionConfiguration(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDatasourceConfiguration(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setRedactedDatasourceConfiguration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 7:
      var value = new proto.transport.v1.Request.Data.Data.Props.Binding;
      reader.readMessage(value,proto.transport.v1.Request.Data.Data.Props.Binding.deserializeBinaryFromReader);
      msg.addBindingKeys(value);
      break;
    case 8:
      var value = msg.getVariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.transport.v1.Variable.deserializeBinaryFromReader, "", new proto.transport.v1.Variable());
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileserverurl(value);
      break;
    case 10:
      var value = new proto.transport.v1.Request.Data.Data.Props.File;
      reader.readMessage(value,proto.transport.v1.Request.Data.Data.Props.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRender(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Data.Props.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Data.Props} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionConfiguration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDatasourceConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getRedactedDatasourceConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStepName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBindingKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.transport.v1.Request.Data.Data.Props.Binding.serializeBinaryToWriter
    );
  }
  f = message.getVariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.transport.v1.Variable.serializeBinaryToWriter);
  }
  f = message.getFileserverurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.transport.v1.Request.Data.Data.Props.File.serializeBinaryToWriter
    );
  }
  f = message.getRender();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Data.Props.Binding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Data.Props.Binding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.Binding.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Data.Props.Binding}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Data.Props.Binding;
  return proto.transport.v1.Request.Data.Data.Props.Binding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Data.Props.Binding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Data.Props.Binding}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Data.Props.Binding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Data.Props.Binding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.Binding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.Binding} returns this
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.Binding} returns this
 */
proto.transport.v1.Request.Data.Data.Props.Binding.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Data.Props.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Data.Props.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.File.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldname: jspb.Message.getFieldWithDefault(msg, 1, ""),
originalname: jspb.Message.getFieldWithDefault(msg, 2, ""),
encoding: jspb.Message.getFieldWithDefault(msg, 3, ""),
mimetype: jspb.Message.getFieldWithDefault(msg, 4, ""),
size: jspb.Message.getFieldWithDefault(msg, 5, 0),
destination: jspb.Message.getFieldWithDefault(msg, 6, ""),
filename: jspb.Message.getFieldWithDefault(msg, 7, ""),
path: jspb.Message.getFieldWithDefault(msg, 8, ""),
buffer: msg.getBuffer_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Data.Props.File}
 */
proto.transport.v1.Request.Data.Data.Props.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Data.Props.File;
  return proto.transport.v1.Request.Data.Data.Props.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Data.Props.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Data.Props.File}
 */
proto.transport.v1.Request.Data.Data.Props.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncoding(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBuffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Data.Props.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Data.Props.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Props.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginalname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncoding();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBuffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * optional string fieldname = 1;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getFieldname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setFieldname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string originalname = 2;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getOriginalname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setOriginalname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string encoding = 3;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getEncoding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setEncoding = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mimetype = 4;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 size = 5;
 * @return {number}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string destination = 6;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string filename = 7;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string path = 8;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bytes buffer = 9;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getBuffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes buffer = 9;
 * This is a type-conversion wrapper around `getBuffer()`
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getBuffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBuffer()));
};


/**
 * optional bytes buffer = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBuffer()`
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.getBuffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBuffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.transport.v1.Request.Data.Data.Props.File} returns this
 */
proto.transport.v1.Request.Data.Data.Props.File.prototype.setBuffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional google.protobuf.Struct action_configuration = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getActionConfiguration = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
*/
proto.transport.v1.Request.Data.Data.Props.prototype.setActionConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearActionConfiguration = function() {
  return this.setActionConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.hasActionConfiguration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct datasource_configuration = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getDatasourceConfiguration = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
*/
proto.transport.v1.Request.Data.Data.Props.prototype.setDatasourceConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearDatasourceConfiguration = function() {
  return this.setDatasourceConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.hasDatasourceConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct redacted_datasource_configuration = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getRedactedDatasourceConfiguration = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
*/
proto.transport.v1.Request.Data.Data.Props.prototype.setRedactedDatasourceConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearRedactedDatasourceConfiguration = function() {
  return this.setRedactedDatasourceConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.hasRedactedDatasourceConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string execution_id = 4;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string step_name = 5;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string environment = 6;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Binding binding_keys = 7;
 * @return {!Array<!proto.transport.v1.Request.Data.Data.Props.Binding>}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getBindingKeysList = function() {
  return /** @type{!Array<!proto.transport.v1.Request.Data.Data.Props.Binding>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transport.v1.Request.Data.Data.Props.Binding, 7));
};


/**
 * @param {!Array<!proto.transport.v1.Request.Data.Data.Props.Binding>} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
*/
proto.transport.v1.Request.Data.Data.Props.prototype.setBindingKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.transport.v1.Request.Data.Data.Props.Binding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transport.v1.Request.Data.Data.Props.Binding}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.addBindingKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.transport.v1.Request.Data.Data.Props.Binding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearBindingKeysList = function() {
  return this.setBindingKeysList([]);
};


/**
 * map<string, Variable> variables = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.transport.v1.Variable>}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getVariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.transport.v1.Variable>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.transport.v1.Variable));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearVariablesMap = function() {
  this.getVariablesMap().clear();
  return this;
};


/**
 * optional string fileServerUrl = 9;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getFileserverurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setFileserverurl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated File files = 10;
 * @return {!Array<!proto.transport.v1.Request.Data.Data.Props.File>}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.transport.v1.Request.Data.Data.Props.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transport.v1.Request.Data.Data.Props.File, 10));
};


/**
 * @param {!Array<!proto.transport.v1.Request.Data.Data.Props.File>} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
*/
proto.transport.v1.Request.Data.Data.Props.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.transport.v1.Request.Data.Data.Props.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transport.v1.Request.Data.Data.Props.File}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.transport.v1.Request.Data.Data.Props.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * optional bool render = 11;
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getRender = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setRender = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string version = 12;
 * @return {string}
 */
proto.transport.v1.Request.Data.Data.Props.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request.Data.Data.Props} returns this
 */
proto.transport.v1.Request.Data.Data.Props.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Request.Data.Data.Quota.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Request.Data.Data.Quota} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Quota.toObject = function(includeInstance, msg) {
  var f, obj = {
size: jspb.Message.getFieldWithDefault(msg, 1, 0),
duration: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Request.Data.Data.Quota}
 */
proto.transport.v1.Request.Data.Data.Quota.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Request.Data.Data.Quota;
  return proto.transport.v1.Request.Data.Data.Quota.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Request.Data.Data.Quota} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Request.Data.Data.Quota}
 */
proto.transport.v1.Request.Data.Data.Quota.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Request.Data.Data.Quota.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Request.Data.Data.Quota} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Request.Data.Data.Quota.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 size = 1;
 * @return {number}
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Request.Data.Data.Quota} returns this
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 duration = 2;
 * @return {number}
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.transport.v1.Request.Data.Data.Quota} returns this
 */
proto.transport.v1.Request.Data.Data.Quota.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Props props = 1;
 * @return {?proto.transport.v1.Request.Data.Data.Props}
 */
proto.transport.v1.Request.Data.Data.prototype.getProps = function() {
  return /** @type{?proto.transport.v1.Request.Data.Data.Props} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Request.Data.Data.Props, 1));
};


/**
 * @param {?proto.transport.v1.Request.Data.Data.Props|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data} returns this
*/
proto.transport.v1.Request.Data.Data.prototype.setProps = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data} returns this
 */
proto.transport.v1.Request.Data.Data.prototype.clearProps = function() {
  return this.setProps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.prototype.hasProps = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct d_config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.transport.v1.Request.Data.Data.prototype.getDConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data} returns this
*/
proto.transport.v1.Request.Data.Data.prototype.setDConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data} returns this
 */
proto.transport.v1.Request.Data.Data.prototype.clearDConfig = function() {
  return this.setDConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.prototype.hasDConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct a_config = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.transport.v1.Request.Data.Data.prototype.getAConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data} returns this
*/
proto.transport.v1.Request.Data.Data.prototype.setAConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data} returns this
 */
proto.transport.v1.Request.Data.Data.prototype.clearAConfig = function() {
  return this.setAConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.prototype.hasAConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Quota quotas = 4;
 * @return {?proto.transport.v1.Request.Data.Data.Quota}
 */
proto.transport.v1.Request.Data.Data.prototype.getQuotas = function() {
  return /** @type{?proto.transport.v1.Request.Data.Data.Quota} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Request.Data.Data.Quota, 4));
};


/**
 * @param {?proto.transport.v1.Request.Data.Data.Quota|undefined} value
 * @return {!proto.transport.v1.Request.Data.Data} returns this
*/
proto.transport.v1.Request.Data.Data.prototype.setQuotas = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data.Data} returns this
 */
proto.transport.v1.Request.Data.Data.prototype.clearQuotas = function() {
  return this.setQuotas(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.Data.prototype.hasQuotas = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Pinned pinned = 1;
 * @return {?proto.transport.v1.Request.Data.Pinned}
 */
proto.transport.v1.Request.Data.prototype.getPinned = function() {
  return /** @type{?proto.transport.v1.Request.Data.Pinned} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Request.Data.Pinned, 1));
};


/**
 * @param {?proto.transport.v1.Request.Data.Pinned|undefined} value
 * @return {!proto.transport.v1.Request.Data} returns this
*/
proto.transport.v1.Request.Data.prototype.setPinned = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data} returns this
 */
proto.transport.v1.Request.Data.prototype.clearPinned = function() {
  return this.setPinned(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.prototype.hasPinned = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.transport.v1.Request.Data.Data}
 */
proto.transport.v1.Request.Data.prototype.getData = function() {
  return /** @type{?proto.transport.v1.Request.Data.Data} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Request.Data.Data, 2));
};


/**
 * @param {?proto.transport.v1.Request.Data.Data|undefined} value
 * @return {!proto.transport.v1.Request.Data} returns this
*/
proto.transport.v1.Request.Data.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request.Data} returns this
 */
proto.transport.v1.Request.Data.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.Data.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string inbox = 1;
 * @return {string}
 */
proto.transport.v1.Request.prototype.getInbox = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request} returns this
 */
proto.transport.v1.Request.prototype.setInbox = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Data data = 2;
 * @return {?proto.transport.v1.Request.Data}
 */
proto.transport.v1.Request.prototype.getData = function() {
  return /** @type{?proto.transport.v1.Request.Data} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Request.Data, 2));
};


/**
 * @param {?proto.transport.v1.Request.Data|undefined} value
 * @return {!proto.transport.v1.Request} returns this
*/
proto.transport.v1.Request.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Request} returns this
 */
proto.transport.v1.Request.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Request.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string topic = 3;
 * @return {string}
 */
proto.transport.v1.Request.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Request} returns this
 */
proto.transport.v1.Request.prototype.setTopic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
data: (f = msg.getData()) && proto.transport.v1.Response.Data.toObject(includeInstance, f),
pinned: (f = msg.getPinned()) && common_v1_errors_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Response}
 */
proto.transport.v1.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Response;
  return proto.transport.v1.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Response}
 */
proto.transport.v1.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transport.v1.Response.Data;
      reader.readMessage(value,proto.transport.v1.Response.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_v1_errors_pb.Error;
      reader.readMessage(value,common_v1_errors_pb.Error.deserializeBinaryFromReader);
      msg.setPinned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.transport.v1.Response.Data.serializeBinaryToWriter
    );
  }
  f = message.getPinned();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_errors_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Response.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Response.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Response.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
pinned: (f = msg.getPinned()) && proto.transport.v1.Performance.toObject(includeInstance, f),
data: (f = msg.getData()) && proto.transport.v1.Response.Data.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Response.Data}
 */
proto.transport.v1.Response.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Response.Data;
  return proto.transport.v1.Response.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Response.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Response.Data}
 */
proto.transport.v1.Response.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transport.v1.Performance;
      reader.readMessage(value,proto.transport.v1.Performance.deserializeBinaryFromReader);
      msg.setPinned(value);
      break;
    case 2:
      var value = new proto.transport.v1.Response.Data.Data;
      reader.readMessage(value,proto.transport.v1.Response.Data.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Response.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Response.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Response.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPinned();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.transport.v1.Performance.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.transport.v1.Response.Data.Data.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transport.v1.Response.Data.Data.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Response.Data.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Response.Data.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Response.Data.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.Data.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
err: (f = msg.getErr()) && common_v1_errors_pb.Error.toObject(includeInstance, f),
dbSchema: (f = msg.getDbSchema()) && api_v1_service_pb.MetadataResponse.DatabaseSchemaMetadata.toObject(includeInstance, f),
bucketsList: jspb.Message.toObjectList(msg.getBucketsList(),
    api_v1_service_pb.MetadataResponse.BucketMetadata.toObject, includeInstance),
kafka: (f = msg.getKafka()) && plugins_kafka_v1_plugin_pb.Metadata.toObject(includeInstance, f),
cosmosdb: (f = msg.getCosmosdb()) && plugins_cosmosdb_v1_plugin_pb.Plugin.Metadata.toObject(includeInstance, f),
adls: (f = msg.getAdls()) && plugins_adls_v1_plugin_pb.Plugin.Metadata.toObject(includeInstance, f),
dynamodb: (f = msg.getDynamodb()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
gSheetsNextPageToken: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Response.Data.Data}
 */
proto.transport.v1.Response.Data.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Response.Data.Data;
  return proto.transport.v1.Response.Data.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Response.Data.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Response.Data.Data}
 */
proto.transport.v1.Response.Data.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new common_v1_errors_pb.Error;
      reader.readMessage(value,common_v1_errors_pb.Error.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 3:
      var value = new api_v1_service_pb.MetadataResponse.DatabaseSchemaMetadata;
      reader.readMessage(value,api_v1_service_pb.MetadataResponse.DatabaseSchemaMetadata.deserializeBinaryFromReader);
      msg.setDbSchema(value);
      break;
    case 4:
      var value = new api_v1_service_pb.MetadataResponse.BucketMetadata;
      reader.readMessage(value,api_v1_service_pb.MetadataResponse.BucketMetadata.deserializeBinaryFromReader);
      msg.addBuckets(value);
      break;
    case 5:
      var value = new plugins_kafka_v1_plugin_pb.Metadata;
      reader.readMessage(value,plugins_kafka_v1_plugin_pb.Metadata.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 6:
      var value = new plugins_cosmosdb_v1_plugin_pb.Plugin.Metadata;
      reader.readMessage(value,plugins_cosmosdb_v1_plugin_pb.Plugin.Metadata.deserializeBinaryFromReader);
      msg.setCosmosdb(value);
      break;
    case 7:
      var value = new plugins_adls_v1_plugin_pb.Plugin.Metadata;
      reader.readMessage(value,plugins_adls_v1_plugin_pb.Plugin.Metadata.deserializeBinaryFromReader);
      msg.setAdls(value);
      break;
    case 8:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setDynamodb(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGSheetsNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Response.Data.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Response.Data.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Response.Data.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Response.Data.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getDbSchema();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      api_v1_service_pb.MetadataResponse.DatabaseSchemaMetadata.serializeBinaryToWriter
    );
  }
  f = message.getBucketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      api_v1_service_pb.MetadataResponse.BucketMetadata.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      plugins_kafka_v1_plugin_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getCosmosdb();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      plugins_cosmosdb_v1_plugin_pb.Plugin.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getAdls();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      plugins_adls_v1_plugin_pb.Plugin.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getDynamodb();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.transport.v1.Response.Data.Data.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional common.v1.Error err = 2;
 * @return {?proto.common.v1.Error}
 */
proto.transport.v1.Response.Data.Data.prototype.getErr = function() {
  return /** @type{?proto.common.v1.Error} */ (
    jspb.Message.getWrapperField(this, common_v1_errors_pb.Error, 2));
};


/**
 * @param {?proto.common.v1.Error|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasErr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional api.v1.MetadataResponse.DatabaseSchemaMetadata db_schema = 3;
 * @return {?proto.api.v1.MetadataResponse.DatabaseSchemaMetadata}
 */
proto.transport.v1.Response.Data.Data.prototype.getDbSchema = function() {
  return /** @type{?proto.api.v1.MetadataResponse.DatabaseSchemaMetadata} */ (
    jspb.Message.getWrapperField(this, api_v1_service_pb.MetadataResponse.DatabaseSchemaMetadata, 3));
};


/**
 * @param {?proto.api.v1.MetadataResponse.DatabaseSchemaMetadata|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setDbSchema = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearDbSchema = function() {
  return this.setDbSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasDbSchema = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated api.v1.MetadataResponse.BucketMetadata buckets = 4;
 * @return {!Array<!proto.api.v1.MetadataResponse.BucketMetadata>}
 */
proto.transport.v1.Response.Data.Data.prototype.getBucketsList = function() {
  return /** @type{!Array<!proto.api.v1.MetadataResponse.BucketMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_v1_service_pb.MetadataResponse.BucketMetadata, 4));
};


/**
 * @param {!Array<!proto.api.v1.MetadataResponse.BucketMetadata>} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setBucketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.v1.MetadataResponse.BucketMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1.MetadataResponse.BucketMetadata}
 */
proto.transport.v1.Response.Data.Data.prototype.addBuckets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.v1.MetadataResponse.BucketMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearBucketsList = function() {
  return this.setBucketsList([]);
};


/**
 * optional plugins.kafka.v1.Metadata kafka = 5;
 * @return {?proto.plugins.kafka.v1.Metadata}
 */
proto.transport.v1.Response.Data.Data.prototype.getKafka = function() {
  return /** @type{?proto.plugins.kafka.v1.Metadata} */ (
    jspb.Message.getWrapperField(this, plugins_kafka_v1_plugin_pb.Metadata, 5));
};


/**
 * @param {?proto.plugins.kafka.v1.Metadata|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional plugins.cosmosdb.v1.Plugin.Metadata cosmosdb = 6;
 * @return {?proto.plugins.cosmosdb.v1.Plugin.Metadata}
 */
proto.transport.v1.Response.Data.Data.prototype.getCosmosdb = function() {
  return /** @type{?proto.plugins.cosmosdb.v1.Plugin.Metadata} */ (
    jspb.Message.getWrapperField(this, plugins_cosmosdb_v1_plugin_pb.Plugin.Metadata, 6));
};


/**
 * @param {?proto.plugins.cosmosdb.v1.Plugin.Metadata|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setCosmosdb = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearCosmosdb = function() {
  return this.setCosmosdb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasCosmosdb = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional plugins.adls.v1.Plugin.Metadata adls = 7;
 * @return {?proto.plugins.adls.v1.Plugin.Metadata}
 */
proto.transport.v1.Response.Data.Data.prototype.getAdls = function() {
  return /** @type{?proto.plugins.adls.v1.Plugin.Metadata} */ (
    jspb.Message.getWrapperField(this, plugins_adls_v1_plugin_pb.Plugin.Metadata, 7));
};


/**
 * @param {?proto.plugins.adls.v1.Plugin.Metadata|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setAdls = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearAdls = function() {
  return this.setAdls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasAdls = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Any dynamodb = 8;
 * @return {?proto.google.protobuf.Any}
 */
proto.transport.v1.Response.Data.Data.prototype.getDynamodb = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 8));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
*/
proto.transport.v1.Response.Data.Data.prototype.setDynamodb = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearDynamodb = function() {
  return this.setDynamodb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasDynamodb = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string g_sheets_next_page_token = 9;
 * @return {string}
 */
proto.transport.v1.Response.Data.Data.prototype.getGSheetsNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.setGSheetsNextPageToken = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.transport.v1.Response.Data.Data} returns this
 */
proto.transport.v1.Response.Data.Data.prototype.clearGSheetsNextPageToken = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.Data.prototype.hasGSheetsNextPageToken = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Performance pinned = 1;
 * @return {?proto.transport.v1.Performance}
 */
proto.transport.v1.Response.Data.prototype.getPinned = function() {
  return /** @type{?proto.transport.v1.Performance} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Performance, 1));
};


/**
 * @param {?proto.transport.v1.Performance|undefined} value
 * @return {!proto.transport.v1.Response.Data} returns this
*/
proto.transport.v1.Response.Data.prototype.setPinned = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data} returns this
 */
proto.transport.v1.Response.Data.prototype.clearPinned = function() {
  return this.setPinned(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.prototype.hasPinned = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.transport.v1.Response.Data.Data}
 */
proto.transport.v1.Response.Data.prototype.getData = function() {
  return /** @type{?proto.transport.v1.Response.Data.Data} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Response.Data.Data, 2));
};


/**
 * @param {?proto.transport.v1.Response.Data.Data|undefined} value
 * @return {!proto.transport.v1.Response.Data} returns this
*/
proto.transport.v1.Response.Data.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response.Data} returns this
 */
proto.transport.v1.Response.Data.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.Data.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data data = 1;
 * @return {?proto.transport.v1.Response.Data}
 */
proto.transport.v1.Response.prototype.getData = function() {
  return /** @type{?proto.transport.v1.Response.Data} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Response.Data, 1));
};


/**
 * @param {?proto.transport.v1.Response.Data|undefined} value
 * @return {!proto.transport.v1.Response} returns this
*/
proto.transport.v1.Response.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response} returns this
 */
proto.transport.v1.Response.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.v1.Error pinned = 2;
 * @return {?proto.common.v1.Error}
 */
proto.transport.v1.Response.prototype.getPinned = function() {
  return /** @type{?proto.common.v1.Error} */ (
    jspb.Message.getWrapperField(this, common_v1_errors_pb.Error, 2));
};


/**
 * @param {?proto.common.v1.Error|undefined} value
 * @return {!proto.transport.v1.Response} returns this
*/
proto.transport.v1.Response.prototype.setPinned = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Response} returns this
 */
proto.transport.v1.Response.prototype.clearPinned = function() {
  return this.setPinned(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Response.prototype.hasPinned = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Fetch.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Fetch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Fetch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Fetch.toObject = function(includeInstance, msg) {
  var f, obj = {
api: (f = msg.getApi()) && api_v1_api_pb.Api.toObject(includeInstance, f),
integrationsMap: (f = msg.getIntegrationsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Struct.toObject) : [],
metadata: (f = msg.getMetadata()) && proto.transport.v1.Fetch.Metadata.toObject(includeInstance, f),
stores: (f = msg.getStores()) && store_v1_store_pb.Stores.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Fetch}
 */
proto.transport.v1.Fetch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Fetch;
  return proto.transport.v1.Fetch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Fetch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Fetch}
 */
proto.transport.v1.Fetch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_v1_api_pb.Api;
      reader.readMessage(value,api_v1_api_pb.Api.deserializeBinaryFromReader);
      msg.setApi(value);
      break;
    case 2:
      var value = msg.getIntegrationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Struct.deserializeBinaryFromReader, "", new proto.google.protobuf.Struct());
         });
      break;
    case 3:
      var value = new proto.transport.v1.Fetch.Metadata;
      reader.readMessage(value,proto.transport.v1.Fetch.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 4:
      var value = new store_v1_store_pb.Stores;
      reader.readMessage(value,store_v1_store_pb.Stores.deserializeBinaryFromReader);
      msg.setStores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Fetch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Fetch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Fetch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Fetch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_v1_api_pb.Api.serializeBinaryToWriter
    );
  }
  f = message.getIntegrationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Struct.serializeBinaryToWriter);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.transport.v1.Fetch.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getStores();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      store_v1_store_pb.Stores.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.Fetch.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.Fetch.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.Fetch.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Fetch.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
requester: jspb.Message.getFieldWithDefault(msg, 1, ""),
profile: jspb.Message.getFieldWithDefault(msg, 2, ""),
organizationPlan: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.Fetch.Metadata}
 */
proto.transport.v1.Fetch.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.Fetch.Metadata;
  return proto.transport.v1.Fetch.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.Fetch.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.Fetch.Metadata}
 */
proto.transport.v1.Fetch.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequester(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.Fetch.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.Fetch.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.Fetch.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.Fetch.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequester();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationPlan();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string requester = 1;
 * @return {string}
 */
proto.transport.v1.Fetch.Metadata.prototype.getRequester = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Fetch.Metadata} returns this
 */
proto.transport.v1.Fetch.Metadata.prototype.setRequester = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string profile = 2;
 * @return {string}
 */
proto.transport.v1.Fetch.Metadata.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Fetch.Metadata} returns this
 */
proto.transport.v1.Fetch.Metadata.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organization_plan = 3;
 * @return {string}
 */
proto.transport.v1.Fetch.Metadata.prototype.getOrganizationPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.transport.v1.Fetch.Metadata} returns this
 */
proto.transport.v1.Fetch.Metadata.prototype.setOrganizationPlan = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional api.v1.Api api = 1;
 * @return {?proto.api.v1.Api}
 */
proto.transport.v1.Fetch.prototype.getApi = function() {
  return /** @type{?proto.api.v1.Api} */ (
    jspb.Message.getWrapperField(this, api_v1_api_pb.Api, 1));
};


/**
 * @param {?proto.api.v1.Api|undefined} value
 * @return {!proto.transport.v1.Fetch} returns this
*/
proto.transport.v1.Fetch.prototype.setApi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Fetch} returns this
 */
proto.transport.v1.Fetch.prototype.clearApi = function() {
  return this.setApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Fetch.prototype.hasApi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, google.protobuf.Struct> integrations = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Struct>}
 */
proto.transport.v1.Fetch.prototype.getIntegrationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Struct>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.protobuf.Struct));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.transport.v1.Fetch} returns this
 */
proto.transport.v1.Fetch.prototype.clearIntegrationsMap = function() {
  this.getIntegrationsMap().clear();
  return this;
};


/**
 * optional Metadata metadata = 3;
 * @return {?proto.transport.v1.Fetch.Metadata}
 */
proto.transport.v1.Fetch.prototype.getMetadata = function() {
  return /** @type{?proto.transport.v1.Fetch.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.transport.v1.Fetch.Metadata, 3));
};


/**
 * @param {?proto.transport.v1.Fetch.Metadata|undefined} value
 * @return {!proto.transport.v1.Fetch} returns this
*/
proto.transport.v1.Fetch.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Fetch} returns this
 */
proto.transport.v1.Fetch.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Fetch.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional store.v1.Stores stores = 4;
 * @return {?proto.store.v1.Stores}
 */
proto.transport.v1.Fetch.prototype.getStores = function() {
  return /** @type{?proto.store.v1.Stores} */ (
    jspb.Message.getWrapperField(this, store_v1_store_pb.Stores, 4));
};


/**
 * @param {?proto.store.v1.Stores|undefined} value
 * @return {!proto.transport.v1.Fetch} returns this
*/
proto.transport.v1.Fetch.prototype.setStores = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.transport.v1.Fetch} returns this
 */
proto.transport.v1.Fetch.prototype.clearStores = function() {
  return this.setStores(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transport.v1.Fetch.prototype.hasStores = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transport.v1.FetchScheduleJobResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transport.v1.FetchScheduleJobResp.prototype.toObject = function(opt_includeInstance) {
  return proto.transport.v1.FetchScheduleJobResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transport.v1.FetchScheduleJobResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.FetchScheduleJobResp.toObject = function(includeInstance, msg) {
  var f, obj = {
apisList: jspb.Message.toObjectList(msg.getApisList(),
    api_v1_service_pb.Definition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transport.v1.FetchScheduleJobResp}
 */
proto.transport.v1.FetchScheduleJobResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transport.v1.FetchScheduleJobResp;
  return proto.transport.v1.FetchScheduleJobResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transport.v1.FetchScheduleJobResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transport.v1.FetchScheduleJobResp}
 */
proto.transport.v1.FetchScheduleJobResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_v1_service_pb.Definition;
      reader.readMessage(value,api_v1_service_pb.Definition.deserializeBinaryFromReader);
      msg.addApis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transport.v1.FetchScheduleJobResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transport.v1.FetchScheduleJobResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transport.v1.FetchScheduleJobResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transport.v1.FetchScheduleJobResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      api_v1_service_pb.Definition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated api.v1.Definition apis = 1;
 * @return {!Array<!proto.api.v1.Definition>}
 */
proto.transport.v1.FetchScheduleJobResp.prototype.getApisList = function() {
  return /** @type{!Array<!proto.api.v1.Definition>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_v1_service_pb.Definition, 1));
};


/**
 * @param {!Array<!proto.api.v1.Definition>} value
 * @return {!proto.transport.v1.FetchScheduleJobResp} returns this
*/
proto.transport.v1.FetchScheduleJobResp.prototype.setApisList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v1.Definition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1.Definition}
 */
proto.transport.v1.FetchScheduleJobResp.prototype.addApis = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v1.Definition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transport.v1.FetchScheduleJobResp} returns this
 */
proto.transport.v1.FetchScheduleJobResp.prototype.clearApisList = function() {
  return this.setApisList([]);
};


goog.object.extend(exports, proto.transport.v1);
