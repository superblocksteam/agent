// source: plugins/salesforce/v1/plugin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var plugins_common_v1_auth_pb = require('../../../plugins/common/v1/auth_pb');
goog.object.extend(proto, plugins_common_v1_auth_pb);
var plugins_common_v1_plugin_pb = require('../../../plugins/common/v1/plugin_pb');
goog.object.extend(proto, plugins_common_v1_plugin_pb);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Bulk', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Crud', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Crud.CrudAction', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Metadata', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Metadata.Object', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.SalesforceActionCase', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.SalesforceConnection', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Soql', null, global);
goog.exportSymbol('proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.plugins.salesforce.v1.Plugin.oneofGroups_);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.displayName = 'proto.plugins.salesforce.v1.Plugin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.SalesforceConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.SalesforceConnection.displayName = 'proto.plugins.salesforce.v1.Plugin.SalesforceConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.plugins.salesforce.v1.Plugin.Metadata.repeatedFields_, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Metadata.displayName = 'proto.plugins.salesforce.v1.Plugin.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.plugins.salesforce.v1.Plugin.Metadata.Object.repeatedFields_, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Metadata.Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Metadata.Object.displayName = 'proto.plugins.salesforce.v1.Plugin.Metadata.Object';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.displayName = 'proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Soql = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Soql, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Soql.displayName = 'proto.plugins.salesforce.v1.Plugin.Soql';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Crud = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Crud, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Crud.displayName = 'proto.plugins.salesforce.v1.Plugin.Crud';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.salesforce.v1.Plugin.Bulk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.salesforce.v1.Plugin.Bulk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.salesforce.v1.Plugin.Bulk.displayName = 'proto.plugins.salesforce.v1.Plugin.Bulk';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.plugins.salesforce.v1.Plugin.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceActionCase = {
  SALESFORCE_ACTION_NOT_SET: 0,
  SOQL: 3,
  CRUD: 4,
  BULK: 5
};

/**
 * @return {proto.plugins.salesforce.v1.Plugin.SalesforceActionCase}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getSalesforceActionCase = function() {
  return /** @type {proto.plugins.salesforce.v1.Plugin.SalesforceActionCase} */(jspb.Message.computeOneofCase(this, proto.plugins.salesforce.v1.Plugin.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.toObject = function(includeInstance, msg) {
  var f, obj = {
name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
connection: (f = msg.getConnection()) && proto.plugins.salesforce.v1.Plugin.SalesforceConnection.toObject(includeInstance, f),
soql: (f = msg.getSoql()) && proto.plugins.salesforce.v1.Plugin.Soql.toObject(includeInstance, f),
crud: (f = msg.getCrud()) && proto.plugins.salesforce.v1.Plugin.Crud.toObject(includeInstance, f),
bulk: (f = msg.getBulk()) && proto.plugins.salesforce.v1.Plugin.Bulk.toObject(includeInstance, f),
dynamicWorkflowConfiguration: (f = msg.getDynamicWorkflowConfiguration()) && plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin}
 */
proto.plugins.salesforce.v1.Plugin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin;
  return proto.plugins.salesforce.v1.Plugin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin}
 */
proto.plugins.salesforce.v1.Plugin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.plugins.salesforce.v1.Plugin.SalesforceConnection;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.SalesforceConnection.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 3:
      var value = new proto.plugins.salesforce.v1.Plugin.Soql;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.Soql.deserializeBinaryFromReader);
      msg.setSoql(value);
      break;
    case 4:
      var value = new proto.plugins.salesforce.v1.Plugin.Crud;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.Crud.deserializeBinaryFromReader);
      msg.setCrud(value);
      break;
    case 5:
      var value = new proto.plugins.salesforce.v1.Plugin.Bulk;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.Bulk.deserializeBinaryFromReader);
      msg.setBulk(value);
      break;
    case 6:
      var value = new plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration;
      reader.readMessage(value,plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.deserializeBinaryFromReader);
      msg.setDynamicWorkflowConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.plugins.salesforce.v1.Plugin.SalesforceConnection.serializeBinaryToWriter
    );
  }
  f = message.getSoql();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.plugins.salesforce.v1.Plugin.Soql.serializeBinaryToWriter
    );
  }
  f = message.getCrud();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.plugins.salesforce.v1.Plugin.Crud.serializeBinaryToWriter
    );
  }
  f = message.getBulk();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.plugins.salesforce.v1.Plugin.Bulk.serializeBinaryToWriter
    );
  }
  f = message.getDynamicWorkflowConfiguration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.SalesforceConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
instanceUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
auth: (f = msg.getAuth()) && plugins_common_v1_auth_pb.Auth.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.SalesforceConnection;
  return proto.plugins.salesforce.v1.Plugin.SalesforceConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceUrl(value);
      break;
    case 2:
      var value = new plugins_common_v1_auth_pb.Auth;
      reader.readMessage(value,plugins_common_v1_auth_pb.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.SalesforceConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      plugins_common_v1_auth_pb.Auth.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance_url = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.getInstanceUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} returns this
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.setInstanceUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional plugins.common.v1.Auth auth = 2;
 * @return {?proto.plugins.common.v1.Auth}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.getAuth = function() {
  return /** @type{?proto.plugins.common.v1.Auth} */ (
    jspb.Message.getWrapperField(this, plugins_common_v1_auth_pb.Auth, 2));
};


/**
 * @param {?proto.plugins.common.v1.Auth|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} returns this
*/
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin.SalesforceConnection} returns this
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.SalesforceConnection.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.plugins.salesforce.v1.Plugin.Metadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.plugins.salesforce.v1.Plugin.Metadata.Object.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Metadata;
  return proto.plugins.salesforce.v1.Plugin.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.plugins.salesforce.v1.Plugin.Metadata.Object;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.Metadata.Object.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.plugins.salesforce.v1.Plugin.Metadata.Object.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Metadata.Object.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Metadata.Object;
  return proto.plugins.salesforce.v1.Plugin.Metadata.Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field;
      reader.readMessage(value,proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Metadata.Object.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
label: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field;
  return proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} returns this
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} returns this
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field} returns this
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Field fields = 1;
 * @return {!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field>}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field, 1));
};


/**
 * @param {!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field>} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object} returns this
*/
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.plugins.salesforce.v1.Plugin.Metadata.Object.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object} returns this
 */
proto.plugins.salesforce.v1.Plugin.Metadata.Object.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * repeated Object objects = 1;
 * @return {!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object>}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.plugins.salesforce.v1.Plugin.Metadata.Object, 1));
};


/**
 * @param {!Array<!proto.plugins.salesforce.v1.Plugin.Metadata.Object>} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata} returns this
*/
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.plugins.salesforce.v1.Plugin.Metadata.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata.Object}
 */
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.plugins.salesforce.v1.Plugin.Metadata.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.plugins.salesforce.v1.Plugin.Metadata} returns this
 */
proto.plugins.salesforce.v1.Plugin.Metadata.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Soql.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Soql} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Soql.toObject = function(includeInstance, msg) {
  var f, obj = {
sqlBody: jspb.Message.getFieldWithDefault(msg, 1, ""),
action: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Soql}
 */
proto.plugins.salesforce.v1.Plugin.Soql.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Soql;
  return proto.plugins.salesforce.v1.Plugin.Soql.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Soql} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Soql}
 */
proto.plugins.salesforce.v1.Plugin.Soql.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSqlBody(value);
      break;
    case 2:
      var value = /** @type {!proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Soql.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Soql} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Soql.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSqlBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction = {
  SOQL_ACTION_UNSPECIFIED: 0,
  SOQL_ACTION_SOQL: 1
};

/**
 * optional string sql_body = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.getSqlBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Soql} returns this
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.setSqlBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SoqlAction action = 2;
 * @return {!proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction}
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.getAction = function() {
  return /** @type {!proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.plugins.salesforce.v1.Plugin.Soql.SoqlAction} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Soql} returns this
 */
proto.plugins.salesforce.v1.Plugin.Soql.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Crud.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Crud} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Crud.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceType: jspb.Message.getFieldWithDefault(msg, 1, ""),
action: jspb.Message.getFieldWithDefault(msg, 2, 0),
resourceBody: jspb.Message.getFieldWithDefault(msg, 3, ""),
resourceId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud}
 */
proto.plugins.salesforce.v1.Plugin.Crud.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Crud;
  return proto.plugins.salesforce.v1.Plugin.Crud.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Crud} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud}
 */
proto.plugins.salesforce.v1.Plugin.Crud.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {!proto.plugins.salesforce.v1.Plugin.Crud.CrudAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceBody(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Crud.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Crud} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Crud.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResourceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.plugins.salesforce.v1.Plugin.Crud.CrudAction = {
  CRUD_ACTION_UNSPECIFIED: 0,
  CRUD_ACTION_CREATE: 1,
  CRUD_ACTION_UPDATE: 2,
  CRUD_ACTION_DELETE: 3,
  CRUD_ACTION_READ: 4
};

/**
 * optional string resource_type = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud} returns this
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CrudAction action = 2;
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud.CrudAction}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.getAction = function() {
  return /** @type {!proto.plugins.salesforce.v1.Plugin.Crud.CrudAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.plugins.salesforce.v1.Plugin.Crud.CrudAction} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud} returns this
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string resource_body = 3;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.getResourceBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud} returns this
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.setResourceBody = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string resource_id = 4;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.getResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Crud} returns this
 */
proto.plugins.salesforce.v1.Plugin.Crud.prototype.setResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.salesforce.v1.Plugin.Bulk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.salesforce.v1.Plugin.Bulk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Bulk.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceType: jspb.Message.getFieldWithDefault(msg, 1, ""),
action: jspb.Message.getFieldWithDefault(msg, 2, 0),
resourceBody: jspb.Message.getFieldWithDefault(msg, 3, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.salesforce.v1.Plugin.Bulk;
  return proto.plugins.salesforce.v1.Plugin.Bulk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.salesforce.v1.Plugin.Bulk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {!proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceBody(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.salesforce.v1.Plugin.Bulk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.salesforce.v1.Plugin.Bulk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.salesforce.v1.Plugin.Bulk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction = {
  BULK_ACTION_UNSPECIFIED: 0,
  BULK_ACTION_CREATE: 1,
  BULK_ACTION_UPDATE: 2,
  BULK_ACTION_DELETE: 3,
  BULK_ACTION_UPSERT: 4
};

/**
 * optional string resource_type = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk} returns this
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BulkAction action = 2;
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.getAction = function() {
  return /** @type {!proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.plugins.salesforce.v1.Plugin.Bulk.BulkAction} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk} returns this
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string resource_body = 3;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.getResourceBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk} returns this
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.setResourceBody = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string external_id = 4;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin.Bulk} returns this
 */
proto.plugins.salesforce.v1.Plugin.Bulk.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SalesforceConnection connection = 2;
 * @return {?proto.plugins.salesforce.v1.Plugin.SalesforceConnection}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getConnection = function() {
  return /** @type{?proto.plugins.salesforce.v1.Plugin.SalesforceConnection} */ (
    jspb.Message.getWrapperField(this, proto.plugins.salesforce.v1.Plugin.SalesforceConnection, 2));
};


/**
 * @param {?proto.plugins.salesforce.v1.Plugin.SalesforceConnection|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
*/
proto.plugins.salesforce.v1.Plugin.prototype.setConnection = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearConnection = function() {
  return this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Soql soql = 3;
 * @return {?proto.plugins.salesforce.v1.Plugin.Soql}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getSoql = function() {
  return /** @type{?proto.plugins.salesforce.v1.Plugin.Soql} */ (
    jspb.Message.getWrapperField(this, proto.plugins.salesforce.v1.Plugin.Soql, 3));
};


/**
 * @param {?proto.plugins.salesforce.v1.Plugin.Soql|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
*/
proto.plugins.salesforce.v1.Plugin.prototype.setSoql = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.plugins.salesforce.v1.Plugin.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearSoql = function() {
  return this.setSoql(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasSoql = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Crud crud = 4;
 * @return {?proto.plugins.salesforce.v1.Plugin.Crud}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getCrud = function() {
  return /** @type{?proto.plugins.salesforce.v1.Plugin.Crud} */ (
    jspb.Message.getWrapperField(this, proto.plugins.salesforce.v1.Plugin.Crud, 4));
};


/**
 * @param {?proto.plugins.salesforce.v1.Plugin.Crud|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
*/
proto.plugins.salesforce.v1.Plugin.prototype.setCrud = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.plugins.salesforce.v1.Plugin.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearCrud = function() {
  return this.setCrud(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasCrud = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Bulk bulk = 5;
 * @return {?proto.plugins.salesforce.v1.Plugin.Bulk}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getBulk = function() {
  return /** @type{?proto.plugins.salesforce.v1.Plugin.Bulk} */ (
    jspb.Message.getWrapperField(this, proto.plugins.salesforce.v1.Plugin.Bulk, 5));
};


/**
 * @param {?proto.plugins.salesforce.v1.Plugin.Bulk|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
*/
proto.plugins.salesforce.v1.Plugin.prototype.setBulk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.plugins.salesforce.v1.Plugin.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearBulk = function() {
  return this.setBulk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasBulk = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 6;
 * @return {?proto.plugins.common.v1.DynamicWorkflowConfiguration}
 */
proto.plugins.salesforce.v1.Plugin.prototype.getDynamicWorkflowConfiguration = function() {
  return /** @type{?proto.plugins.common.v1.DynamicWorkflowConfiguration} */ (
    jspb.Message.getWrapperField(this, plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration, 6));
};


/**
 * @param {?proto.plugins.common.v1.DynamicWorkflowConfiguration|undefined} value
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
*/
proto.plugins.salesforce.v1.Plugin.prototype.setDynamicWorkflowConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.salesforce.v1.Plugin} returns this
 */
proto.plugins.salesforce.v1.Plugin.prototype.clearDynamicWorkflowConfiguration = function() {
  return this.setDynamicWorkflowConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.salesforce.v1.Plugin.prototype.hasDynamicWorkflowConfiguration = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.plugins.salesforce.v1);
