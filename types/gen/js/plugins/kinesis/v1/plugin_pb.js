// source: plugins/kinesis/v1/plugin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = globalThis;

var plugins_common_v1_plugin_pb = require('../../../plugins/common/v1/plugin_pb');
goog.object.extend(proto, plugins_common_v1_plugin_pb);
goog.exportSymbol('proto.plugins.kinesis.v1.Metadata', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.KinesisConnection', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.KinesisGet', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.KinesisPut', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.OperationType', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.ShardIteratorType', null, global);
goog.exportSymbol('proto.plugins.kinesis.v1.Plugin.StreamIdentifier', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.kinesis.v1.Plugin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.kinesis.v1.Plugin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.kinesis.v1.Plugin.displayName = 'proto.plugins.kinesis.v1.Plugin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.kinesis.v1.Plugin.KinesisConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.kinesis.v1.Plugin.KinesisConnection.displayName = 'proto.plugins.kinesis.v1.Plugin.KinesisConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.kinesis.v1.Plugin.KinesisPut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.kinesis.v1.Plugin.KinesisPut.displayName = 'proto.plugins.kinesis.v1.Plugin.KinesisPut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.plugins.kinesis.v1.Plugin.KinesisGet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.kinesis.v1.Plugin.KinesisGet.displayName = 'proto.plugins.kinesis.v1.Plugin.KinesisGet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.plugins.kinesis.v1.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.plugins.kinesis.v1.Metadata.repeatedFields_, null);
};
goog.inherits(proto.plugins.kinesis.v1.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.plugins.kinesis.v1.Metadata.displayName = 'proto.plugins.kinesis.v1.Metadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.kinesis.v1.Plugin.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.kinesis.v1.Plugin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.kinesis.v1.Plugin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.toObject = function(includeInstance, msg) {
  var f, obj = {
name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
connection: (f = msg.getConnection()) && proto.plugins.kinesis.v1.Plugin.KinesisConnection.toObject(includeInstance, f),
operationType: jspb.Message.getFieldWithDefault(msg, 3, 0),
put: (f = msg.getPut()) && proto.plugins.kinesis.v1.Plugin.KinesisPut.toObject(includeInstance, f),
get: (f = msg.getGet()) && proto.plugins.kinesis.v1.Plugin.KinesisGet.toObject(includeInstance, f),
dynamicWorkflowConfiguration: (f = msg.getDynamicWorkflowConfiguration()) && plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.kinesis.v1.Plugin}
 */
proto.plugins.kinesis.v1.Plugin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.kinesis.v1.Plugin;
  return proto.plugins.kinesis.v1.Plugin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.kinesis.v1.Plugin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.kinesis.v1.Plugin}
 */
proto.plugins.kinesis.v1.Plugin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.plugins.kinesis.v1.Plugin.KinesisConnection;
      reader.readMessage(value,proto.plugins.kinesis.v1.Plugin.KinesisConnection.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 3:
      var value = /** @type {!proto.plugins.kinesis.v1.Plugin.OperationType} */ (reader.readEnum());
      msg.setOperationType(value);
      break;
    case 4:
      var value = new proto.plugins.kinesis.v1.Plugin.KinesisPut;
      reader.readMessage(value,proto.plugins.kinesis.v1.Plugin.KinesisPut.deserializeBinaryFromReader);
      msg.setPut(value);
      break;
    case 5:
      var value = new proto.plugins.kinesis.v1.Plugin.KinesisGet;
      reader.readMessage(value,proto.plugins.kinesis.v1.Plugin.KinesisGet.deserializeBinaryFromReader);
      msg.setGet(value);
      break;
    case 6:
      var value = new plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration;
      reader.readMessage(value,plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.deserializeBinaryFromReader);
      msg.setDynamicWorkflowConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.kinesis.v1.Plugin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.kinesis.v1.Plugin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.kinesis.v1.Plugin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.plugins.kinesis.v1.Plugin.KinesisConnection.serializeBinaryToWriter
    );
  }
  f = message.getOperationType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPut();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.plugins.kinesis.v1.Plugin.KinesisPut.serializeBinaryToWriter
    );
  }
  f = message.getGet();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.plugins.kinesis.v1.Plugin.KinesisGet.serializeBinaryToWriter
    );
  }
  f = message.getDynamicWorkflowConfiguration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.plugins.kinesis.v1.Plugin.ShardIteratorType = {
  SHARD_ITERATOR_TYPE_UNSPECIFIED: 0,
  SHARD_ITERATOR_TYPE_AT_SEQUENCE_NUMBER: 1,
  SHARD_ITERATOR_TYPE_AFTER_SEQUENCE_NUMBER: 2,
  SHARD_ITERATOR_TYPE_AT_TIMESTAMP: 3,
  SHARD_ITERATOR_TYPE_TRIM_HORIZON: 4,
  SHARD_ITERATOR_TYPE_LATEST: 5
};

/**
 * @enum {number}
 */
proto.plugins.kinesis.v1.Plugin.OperationType = {
  OPERATION_TYPE_UNSPECIFIED: 0,
  OPERATION_TYPE_GET: 1,
  OPERATION_TYPE_PUT: 2
};

/**
 * @enum {number}
 */
proto.plugins.kinesis.v1.Plugin.StreamIdentifier = {
  STREAM_IDENTIFIER_UNSPECIFIED: 0,
  STREAM_IDENTIFIER_STREAM_NAME: 1,
  STREAM_IDENTIFIER_STREAM_ARN: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.kinesis.v1.Plugin.KinesisConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
awsConfig: (f = msg.getAwsConfig()) && plugins_common_v1_plugin_pb.AWSConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisConnection}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.kinesis.v1.Plugin.KinesisConnection;
  return proto.plugins.kinesis.v1.Plugin.KinesisConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisConnection}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new plugins_common_v1_plugin_pb.AWSConfig;
      reader.readMessage(value,plugins_common_v1_plugin_pb.AWSConfig.deserializeBinaryFromReader);
      msg.setAwsConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.kinesis.v1.Plugin.KinesisConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAwsConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      plugins_common_v1_plugin_pb.AWSConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional plugins.common.v1.AWSConfig aws_config = 1;
 * @return {?proto.plugins.common.v1.AWSConfig}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.getAwsConfig = function() {
  return /** @type{?proto.plugins.common.v1.AWSConfig} */ (
    jspb.Message.getWrapperField(this, plugins_common_v1_plugin_pb.AWSConfig, 1));
};


/**
 * @param {?proto.plugins.common.v1.AWSConfig|undefined} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisConnection} returns this
*/
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.setAwsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisConnection} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.clearAwsConfig = function() {
  return this.setAwsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisConnection.prototype.hasAwsConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.kinesis.v1.Plugin.KinesisPut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisPut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.toObject = function(includeInstance, msg) {
  var f, obj = {
data: jspb.Message.getFieldWithDefault(msg, 1, ""),
partitionKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
streamIdentifierType: jspb.Message.getFieldWithDefault(msg, 3, 0),
streamName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
streamArn: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.kinesis.v1.Plugin.KinesisPut;
  return proto.plugins.kinesis.v1.Plugin.KinesisPut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisPut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setPartitionKey(value);
      break;
    case 3:
      var value = /** @type {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} */ (reader.readEnum());
      msg.setStreamIdentifierType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStreamName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStreamArn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.kinesis.v1.Plugin.KinesisPut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisPut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartitionKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStreamIdentifierType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partition_key = 2;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.getPartitionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.setPartitionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StreamIdentifier stream_identifier_type = 3;
 * @return {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.getStreamIdentifierType = function() {
  return /** @type {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.setStreamIdentifierType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string stream_name = 4;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.setStreamName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.clearStreamName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.hasStreamName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string stream_arn = 5;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.getStreamArn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.setStreamArn = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisPut} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.clearStreamArn = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisPut.prototype.hasStreamArn = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.kinesis.v1.Plugin.KinesisGet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisGet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.toObject = function(includeInstance, msg) {
  var f, obj = {
shardId: jspb.Message.getFieldWithDefault(msg, 2, ""),
shardIteratorType: jspb.Message.getFieldWithDefault(msg, 3, 0),
limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
pollingCooldownMs: jspb.Message.getFieldWithDefault(msg, 5, 0),
startingSequenceNumber: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
timestamp: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
streamIdentifierType: jspb.Message.getFieldWithDefault(msg, 8, 0),
streamName: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
streamArn: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.kinesis.v1.Plugin.KinesisGet;
  return proto.plugins.kinesis.v1.Plugin.KinesisGet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisGet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setShardId(value);
      break;
    case 3:
      var value = /** @type {!proto.plugins.kinesis.v1.Plugin.ShardIteratorType} */ (reader.readEnum());
      msg.setShardIteratorType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPollingCooldownMs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStartingSequenceNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} */ (reader.readEnum());
      msg.setStreamIdentifierType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStreamName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStreamArn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.kinesis.v1.Plugin.KinesisGet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.kinesis.v1.Plugin.KinesisGet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShardId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShardIteratorType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPollingCooldownMs();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStreamIdentifierType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string shard_id = 2;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getShardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setShardId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ShardIteratorType shard_iterator_type = 3;
 * @return {!proto.plugins.kinesis.v1.Plugin.ShardIteratorType}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getShardIteratorType = function() {
  return /** @type {!proto.plugins.kinesis.v1.Plugin.ShardIteratorType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.plugins.kinesis.v1.Plugin.ShardIteratorType} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setShardIteratorType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 polling_cooldown_ms = 5;
 * @return {number}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getPollingCooldownMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setPollingCooldownMs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string starting_sequence_number = 6;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getStartingSequenceNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setStartingSequenceNumber = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.clearStartingSequenceNumber = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.hasStartingSequenceNumber = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string timestamp = 7;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional StreamIdentifier stream_identifier_type = 8;
 * @return {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getStreamIdentifierType = function() {
  return /** @type {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.plugins.kinesis.v1.Plugin.StreamIdentifier} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setStreamIdentifierType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string stream_name = 9;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setStreamName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.clearStreamName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.hasStreamName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string stream_arn = 10;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.getStreamArn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.setStreamArn = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin.KinesisGet} returns this
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.clearStreamArn = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.KinesisGet.prototype.hasStreamArn = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional KinesisConnection connection = 2;
 * @return {?proto.plugins.kinesis.v1.Plugin.KinesisConnection}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getConnection = function() {
  return /** @type{?proto.plugins.kinesis.v1.Plugin.KinesisConnection} */ (
    jspb.Message.getWrapperField(this, proto.plugins.kinesis.v1.Plugin.KinesisConnection, 2));
};


/**
 * @param {?proto.plugins.kinesis.v1.Plugin.KinesisConnection|undefined} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
*/
proto.plugins.kinesis.v1.Plugin.prototype.setConnection = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.clearConnection = function() {
  return this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OperationType operation_type = 3;
 * @return {!proto.plugins.kinesis.v1.Plugin.OperationType}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getOperationType = function() {
  return /** @type {!proto.plugins.kinesis.v1.Plugin.OperationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.plugins.kinesis.v1.Plugin.OperationType} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.setOperationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional KinesisPut put = 4;
 * @return {?proto.plugins.kinesis.v1.Plugin.KinesisPut}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getPut = function() {
  return /** @type{?proto.plugins.kinesis.v1.Plugin.KinesisPut} */ (
    jspb.Message.getWrapperField(this, proto.plugins.kinesis.v1.Plugin.KinesisPut, 4));
};


/**
 * @param {?proto.plugins.kinesis.v1.Plugin.KinesisPut|undefined} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
*/
proto.plugins.kinesis.v1.Plugin.prototype.setPut = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.clearPut = function() {
  return this.setPut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.prototype.hasPut = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional KinesisGet get = 5;
 * @return {?proto.plugins.kinesis.v1.Plugin.KinesisGet}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getGet = function() {
  return /** @type{?proto.plugins.kinesis.v1.Plugin.KinesisGet} */ (
    jspb.Message.getWrapperField(this, proto.plugins.kinesis.v1.Plugin.KinesisGet, 5));
};


/**
 * @param {?proto.plugins.kinesis.v1.Plugin.KinesisGet|undefined} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
*/
proto.plugins.kinesis.v1.Plugin.prototype.setGet = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.clearGet = function() {
  return this.setGet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.prototype.hasGet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional plugins.common.v1.DynamicWorkflowConfiguration dynamic_workflow_configuration = 6;
 * @return {?proto.plugins.common.v1.DynamicWorkflowConfiguration}
 */
proto.plugins.kinesis.v1.Plugin.prototype.getDynamicWorkflowConfiguration = function() {
  return /** @type{?proto.plugins.common.v1.DynamicWorkflowConfiguration} */ (
    jspb.Message.getWrapperField(this, plugins_common_v1_plugin_pb.DynamicWorkflowConfiguration, 6));
};


/**
 * @param {?proto.plugins.common.v1.DynamicWorkflowConfiguration|undefined} value
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
*/
proto.plugins.kinesis.v1.Plugin.prototype.setDynamicWorkflowConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.plugins.kinesis.v1.Plugin} returns this
 */
proto.plugins.kinesis.v1.Plugin.prototype.clearDynamicWorkflowConfiguration = function() {
  return this.setDynamicWorkflowConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.plugins.kinesis.v1.Plugin.prototype.hasDynamicWorkflowConfiguration = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.plugins.kinesis.v1.Metadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.plugins.kinesis.v1.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.plugins.kinesis.v1.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.plugins.kinesis.v1.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
streamsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.plugins.kinesis.v1.Metadata}
 */
proto.plugins.kinesis.v1.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.plugins.kinesis.v1.Metadata;
  return proto.plugins.kinesis.v1.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.plugins.kinesis.v1.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.plugins.kinesis.v1.Metadata}
 */
proto.plugins.kinesis.v1.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.addStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.plugins.kinesis.v1.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.plugins.kinesis.v1.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.plugins.kinesis.v1.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.plugins.kinesis.v1.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string streams = 1;
 * @return {!Array<string>}
 */
proto.plugins.kinesis.v1.Metadata.prototype.getStreamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.plugins.kinesis.v1.Metadata} returns this
 */
proto.plugins.kinesis.v1.Metadata.prototype.setStreamsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.plugins.kinesis.v1.Metadata} returns this
 */
proto.plugins.kinesis.v1.Metadata.prototype.addStreams = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.plugins.kinesis.v1.Metadata} returns this
 */
proto.plugins.kinesis.v1.Metadata.prototype.clearStreamsList = function() {
  return this.setStreamsList([]);
};


goog.object.extend(exports, proto.plugins.kinesis.v1);
