// source: secrets/v1/store.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var buf_validate_validate_pb = require('../../buf/validate/validate_pb');
goog.object.extend(proto, buf_validate_validate_pb);
var common_v1_common_pb = require('../../common/v1/common_pb');
goog.object.extend(proto, common_v1_common_pb);
var common_v1_errors_pb = require('../../common/v1/errors_pb');
goog.object.extend(proto, common_v1_errors_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb');
goog.object.extend(proto, google_api_annotations_pb);
var secrets_v1_secrets_pb = require('../../secrets/v1/secrets_pb');
goog.object.extend(proto, secrets_v1_secrets_pb);
goog.exportSymbol('proto.secrets.v1.InvalidateRequest', null, global);
goog.exportSymbol('proto.secrets.v1.InvalidateResponse', null, global);
goog.exportSymbol('proto.secrets.v1.ListSecretsRequest', null, global);
goog.exportSymbol('proto.secrets.v1.ListSecretsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.secrets.v1.InvalidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.secrets.v1.InvalidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.secrets.v1.InvalidateRequest.displayName = 'proto.secrets.v1.InvalidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.secrets.v1.InvalidateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.secrets.v1.InvalidateResponse.repeatedFields_, null);
};
goog.inherits(proto.secrets.v1.InvalidateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.secrets.v1.InvalidateResponse.displayName = 'proto.secrets.v1.InvalidateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.secrets.v1.ListSecretsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.secrets.v1.ListSecretsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.secrets.v1.ListSecretsRequest.displayName = 'proto.secrets.v1.ListSecretsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.secrets.v1.ListSecretsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.secrets.v1.ListSecretsResponse.repeatedFields_, null);
};
goog.inherits(proto.secrets.v1.ListSecretsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.secrets.v1.ListSecretsResponse.displayName = 'proto.secrets.v1.ListSecretsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.secrets.v1.InvalidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.secrets.v1.InvalidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.secrets.v1.InvalidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.InvalidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
store: jspb.Message.getFieldWithDefault(msg, 1, ""),
secret: jspb.Message.getFieldWithDefault(msg, 2, ""),
configurationId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.secrets.v1.InvalidateRequest}
 */
proto.secrets.v1.InvalidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.secrets.v1.InvalidateRequest;
  return proto.secrets.v1.InvalidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.secrets.v1.InvalidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.secrets.v1.InvalidateRequest}
 */
proto.secrets.v1.InvalidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStore(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigurationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.secrets.v1.InvalidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.secrets.v1.InvalidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.secrets.v1.InvalidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.InvalidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStore();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string store = 1;
 * @return {string}
 */
proto.secrets.v1.InvalidateRequest.prototype.getStore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.secrets.v1.InvalidateRequest} returns this
 */
proto.secrets.v1.InvalidateRequest.prototype.setStore = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.secrets.v1.InvalidateRequest.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.secrets.v1.InvalidateRequest} returns this
 */
proto.secrets.v1.InvalidateRequest.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string configuration_id = 3;
 * @return {string}
 */
proto.secrets.v1.InvalidateRequest.prototype.getConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.secrets.v1.InvalidateRequest} returns this
 */
proto.secrets.v1.InvalidateRequest.prototype.setConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.secrets.v1.InvalidateResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.secrets.v1.InvalidateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.secrets.v1.InvalidateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.secrets.v1.InvalidateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.InvalidateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    common_v1_errors_pb.Error.toObject, includeInstance),
invalidationsList: jspb.Message.toObjectList(msg.getInvalidationsList(),
    secrets_v1_secrets_pb.Invalidation.toObject, includeInstance),
message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.secrets.v1.InvalidateResponse}
 */
proto.secrets.v1.InvalidateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.secrets.v1.InvalidateResponse;
  return proto.secrets.v1.InvalidateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.secrets.v1.InvalidateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.secrets.v1.InvalidateResponse}
 */
proto.secrets.v1.InvalidateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_errors_pb.Error;
      reader.readMessage(value,common_v1_errors_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = new secrets_v1_secrets_pb.Invalidation;
      reader.readMessage(value,secrets_v1_secrets_pb.Invalidation.deserializeBinaryFromReader);
      msg.addInvalidations(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.secrets.v1.InvalidateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.secrets.v1.InvalidateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.secrets.v1.InvalidateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.InvalidateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_v1_errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getInvalidationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      secrets_v1_secrets_pb.Invalidation.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated common.v1.Error errors = 1;
 * @return {!Array<!proto.common.v1.Error>}
 */
proto.secrets.v1.InvalidateResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.common.v1.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_errors_pb.Error, 1));
};


/**
 * @param {!Array<!proto.common.v1.Error>} value
 * @return {!proto.secrets.v1.InvalidateResponse} returns this
*/
proto.secrets.v1.InvalidateResponse.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.common.v1.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.v1.Error}
 */
proto.secrets.v1.InvalidateResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.common.v1.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.secrets.v1.InvalidateResponse} returns this
 */
proto.secrets.v1.InvalidateResponse.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * repeated Invalidation invalidations = 2;
 * @return {!Array<!proto.secrets.v1.Invalidation>}
 */
proto.secrets.v1.InvalidateResponse.prototype.getInvalidationsList = function() {
  return /** @type{!Array<!proto.secrets.v1.Invalidation>} */ (
    jspb.Message.getRepeatedWrapperField(this, secrets_v1_secrets_pb.Invalidation, 2));
};


/**
 * @param {!Array<!proto.secrets.v1.Invalidation>} value
 * @return {!proto.secrets.v1.InvalidateResponse} returns this
*/
proto.secrets.v1.InvalidateResponse.prototype.setInvalidationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.secrets.v1.Invalidation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.secrets.v1.Invalidation}
 */
proto.secrets.v1.InvalidateResponse.prototype.addInvalidations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.secrets.v1.Invalidation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.secrets.v1.InvalidateResponse} returns this
 */
proto.secrets.v1.InvalidateResponse.prototype.clearInvalidationsList = function() {
  return this.setInvalidationsList([]);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.secrets.v1.InvalidateResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.secrets.v1.InvalidateResponse} returns this
 */
proto.secrets.v1.InvalidateResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.secrets.v1.ListSecretsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.secrets.v1.ListSecretsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.secrets.v1.ListSecretsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.ListSecretsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
store: jspb.Message.getFieldWithDefault(msg, 1, ""),
profile: (f = msg.getProfile()) && common_v1_common_pb.Profile.toObject(includeInstance, f),
provider: (f = msg.getProvider()) && secrets_v1_secrets_pb.Provider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.secrets.v1.ListSecretsRequest}
 */
proto.secrets.v1.ListSecretsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.secrets.v1.ListSecretsRequest;
  return proto.secrets.v1.ListSecretsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.secrets.v1.ListSecretsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.secrets.v1.ListSecretsRequest}
 */
proto.secrets.v1.ListSecretsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStore(value);
      break;
    case 2:
      var value = new common_v1_common_pb.Profile;
      reader.readMessage(value,common_v1_common_pb.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 3:
      var value = new secrets_v1_secrets_pb.Provider;
      reader.readMessage(value,secrets_v1_secrets_pb.Provider.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.secrets.v1.ListSecretsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.secrets.v1.ListSecretsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.secrets.v1.ListSecretsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.ListSecretsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStore();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.Profile.serializeBinaryToWriter
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      secrets_v1_secrets_pb.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * optional string store = 1;
 * @return {string}
 */
proto.secrets.v1.ListSecretsRequest.prototype.getStore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.secrets.v1.ListSecretsRequest} returns this
 */
proto.secrets.v1.ListSecretsRequest.prototype.setStore = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional common.v1.Profile profile = 2;
 * @return {?proto.common.v1.Profile}
 */
proto.secrets.v1.ListSecretsRequest.prototype.getProfile = function() {
  return /** @type{?proto.common.v1.Profile} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Profile, 2));
};


/**
 * @param {?proto.common.v1.Profile|undefined} value
 * @return {!proto.secrets.v1.ListSecretsRequest} returns this
*/
proto.secrets.v1.ListSecretsRequest.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.secrets.v1.ListSecretsRequest} returns this
 */
proto.secrets.v1.ListSecretsRequest.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.secrets.v1.ListSecretsRequest.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Provider provider = 3;
 * @return {?proto.secrets.v1.Provider}
 */
proto.secrets.v1.ListSecretsRequest.prototype.getProvider = function() {
  return /** @type{?proto.secrets.v1.Provider} */ (
    jspb.Message.getWrapperField(this, secrets_v1_secrets_pb.Provider, 3));
};


/**
 * @param {?proto.secrets.v1.Provider|undefined} value
 * @return {!proto.secrets.v1.ListSecretsRequest} returns this
*/
proto.secrets.v1.ListSecretsRequest.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.secrets.v1.ListSecretsRequest} returns this
 */
proto.secrets.v1.ListSecretsRequest.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.secrets.v1.ListSecretsRequest.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.secrets.v1.ListSecretsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.secrets.v1.ListSecretsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.secrets.v1.ListSecretsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.secrets.v1.ListSecretsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.ListSecretsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    secrets_v1_secrets_pb.Details.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.secrets.v1.ListSecretsResponse}
 */
proto.secrets.v1.ListSecretsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.secrets.v1.ListSecretsResponse;
  return proto.secrets.v1.ListSecretsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.secrets.v1.ListSecretsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.secrets.v1.ListSecretsResponse}
 */
proto.secrets.v1.ListSecretsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new secrets_v1_secrets_pb.Details;
      reader.readMessage(value,secrets_v1_secrets_pb.Details.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.secrets.v1.ListSecretsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.secrets.v1.ListSecretsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.secrets.v1.ListSecretsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.secrets.v1.ListSecretsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      secrets_v1_secrets_pb.Details.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Details secrets = 1;
 * @return {!Array<!proto.secrets.v1.Details>}
 */
proto.secrets.v1.ListSecretsResponse.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.secrets.v1.Details>} */ (
    jspb.Message.getRepeatedWrapperField(this, secrets_v1_secrets_pb.Details, 1));
};


/**
 * @param {!Array<!proto.secrets.v1.Details>} value
 * @return {!proto.secrets.v1.ListSecretsResponse} returns this
*/
proto.secrets.v1.ListSecretsResponse.prototype.setSecretsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.secrets.v1.Details=} opt_value
 * @param {number=} opt_index
 * @return {!proto.secrets.v1.Details}
 */
proto.secrets.v1.ListSecretsResponse.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.secrets.v1.Details, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.secrets.v1.ListSecretsResponse} returns this
 */
proto.secrets.v1.ListSecretsResponse.prototype.clearSecretsList = function() {
  return this.setSecretsList([]);
};


goog.object.extend(exports, proto.secrets.v1);
